"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@contentful";
exports.ids = ["vendor-chunks/@contentful"];
exports.modules = {

/***/ "(ssr)/./node_modules/@contentful/rich-text-react-renderer/dist/rich-text-react-renderer.es5.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@contentful/rich-text-react-renderer/dist/rich-text-react-renderer.es5.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nvar React = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\nvar richTextTypes = __webpack_require__(/*! @contentful/rich-text-types */ \"(ssr)/./node_modules/@contentful/rich-text-react-renderer/node_modules/@contentful/rich-text-types/dist/index.js\");\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol */\r\n\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\n\nfunction appendKeyToValidElement(element, key) {\n    if (React.isValidElement(element) && element.key === null) {\n        return React.cloneElement(element, { key: key });\n    }\n    return element;\n}\n\nfunction nodeListToReactComponents(nodes, options) {\n    return nodes.map(function (node, index) {\n        return appendKeyToValidElement(nodeToReactComponent(node, options), index);\n    });\n}\nfunction nodeToReactComponent(node, options) {\n    var renderNode = options.renderNode, renderMark = options.renderMark, renderText = options.renderText, preserveWhitespace = options.preserveWhitespace;\n    if (richTextTypes.helpers.isText(node)) {\n        var nodeValue = renderText ? renderText(node.value) : node.value;\n        // Preserving whitespace is only supported with the default transformations.\n        if (preserveWhitespace && !renderText) {\n            // Preserve multiple spaces.\n            nodeValue = nodeValue.replace(/ {2,}/g, function (match) { return '\\u00A0'.repeat(match.length); });\n            // Preserve line breaks.\n            var lines_1 = nodeValue.split('\\n');\n            var jsxLines_1 = [];\n            lines_1.forEach(function (line, index) {\n                jsxLines_1.push(line);\n                if (index !== lines_1.length - 1) {\n                    jsxLines_1.push(React.createElement(\"br\", null));\n                }\n            });\n            nodeValue = jsxLines_1;\n        }\n        return node.marks.reduce(function (value, mark) {\n            if (!renderMark[mark.type]) {\n                return value;\n            }\n            return renderMark[mark.type](value);\n        }, nodeValue);\n    }\n    else {\n        var children = nodeListToReactComponents(node.content, options);\n        if (!node.nodeType || !renderNode[node.nodeType]) {\n            return React.createElement(React.Fragment, null, children);\n        }\n        return renderNode[node.nodeType](node, children);\n    }\n}\n\nvar _a, _b;\nvar defaultNodeRenderers = (_a = {},\n    _a[richTextTypes.BLOCKS.DOCUMENT] = function (node, children) { return children; },\n    _a[richTextTypes.BLOCKS.PARAGRAPH] = function (node, children) { return React.createElement(\"p\", null, children); },\n    _a[richTextTypes.BLOCKS.HEADING_1] = function (node, children) { return React.createElement(\"h1\", null, children); },\n    _a[richTextTypes.BLOCKS.HEADING_2] = function (node, children) { return React.createElement(\"h2\", null, children); },\n    _a[richTextTypes.BLOCKS.HEADING_3] = function (node, children) { return React.createElement(\"h3\", null, children); },\n    _a[richTextTypes.BLOCKS.HEADING_4] = function (node, children) { return React.createElement(\"h4\", null, children); },\n    _a[richTextTypes.BLOCKS.HEADING_5] = function (node, children) { return React.createElement(\"h5\", null, children); },\n    _a[richTextTypes.BLOCKS.HEADING_6] = function (node, children) { return React.createElement(\"h6\", null, children); },\n    _a[richTextTypes.BLOCKS.EMBEDDED_ENTRY] = function (node, children) { return React.createElement(\"div\", null, children); },\n    _a[richTextTypes.BLOCKS.EMBEDDED_RESOURCE] = function (node, children) { return React.createElement(\"div\", null, children); },\n    _a[richTextTypes.BLOCKS.UL_LIST] = function (node, children) { return React.createElement(\"ul\", null, children); },\n    _a[richTextTypes.BLOCKS.OL_LIST] = function (node, children) { return React.createElement(\"ol\", null, children); },\n    _a[richTextTypes.BLOCKS.LIST_ITEM] = function (node, children) { return React.createElement(\"li\", null, children); },\n    _a[richTextTypes.BLOCKS.QUOTE] = function (node, children) { return React.createElement(\"blockquote\", null, children); },\n    _a[richTextTypes.BLOCKS.HR] = function () { return React.createElement(\"hr\", null); },\n    _a[richTextTypes.BLOCKS.TABLE] = function (node, children) { return (React.createElement(\"table\", null,\n        React.createElement(\"tbody\", null, children))); },\n    _a[richTextTypes.BLOCKS.TABLE_ROW] = function (node, children) { return React.createElement(\"tr\", null, children); },\n    _a[richTextTypes.BLOCKS.TABLE_HEADER_CELL] = function (node, children) { return React.createElement(\"th\", null, children); },\n    _a[richTextTypes.BLOCKS.TABLE_CELL] = function (node, children) { return React.createElement(\"td\", null, children); },\n    _a[richTextTypes.INLINES.ASSET_HYPERLINK] = function (node) { return defaultInline(richTextTypes.INLINES.ASSET_HYPERLINK, node); },\n    _a[richTextTypes.INLINES.ENTRY_HYPERLINK] = function (node) { return defaultInline(richTextTypes.INLINES.ENTRY_HYPERLINK, node); },\n    _a[richTextTypes.INLINES.RESOURCE_HYPERLINK] = function (node) {\n        return defaultInlineResource(richTextTypes.INLINES.RESOURCE_HYPERLINK, node);\n    },\n    _a[richTextTypes.INLINES.EMBEDDED_ENTRY] = function (node) { return defaultInline(richTextTypes.INLINES.EMBEDDED_ENTRY, node); },\n    _a[richTextTypes.INLINES.EMBEDDED_RESOURCE] = function (node, _children) {\n        return defaultInlineResource(richTextTypes.INLINES.EMBEDDED_RESOURCE, node);\n    },\n    _a[richTextTypes.INLINES.HYPERLINK] = function (node, children) { return React.createElement(\"a\", { href: node.data.uri }, children); },\n    _a);\nvar defaultMarkRenderers = (_b = {},\n    _b[richTextTypes.MARKS.BOLD] = function (text) { return React.createElement(\"b\", null, text); },\n    _b[richTextTypes.MARKS.ITALIC] = function (text) { return React.createElement(\"i\", null, text); },\n    _b[richTextTypes.MARKS.UNDERLINE] = function (text) { return React.createElement(\"u\", null, text); },\n    _b[richTextTypes.MARKS.CODE] = function (text) { return React.createElement(\"code\", null, text); },\n    _b[richTextTypes.MARKS.SUPERSCRIPT] = function (text) { return React.createElement(\"sup\", null, text); },\n    _b[richTextTypes.MARKS.SUBSCRIPT] = function (text) { return React.createElement(\"sub\", null, text); },\n    _b[richTextTypes.MARKS.STRIKETHROUGH] = function (text) { return React.createElement(\"s\", null, text); },\n    _b);\nfunction defaultInline(type, node) {\n    return (React.createElement(\"span\", { key: node.data.target.sys.id },\n        \"type: \",\n        node.nodeType,\n        \" id: \",\n        node.data.target.sys.id));\n}\nfunction defaultInlineResource(type, node) {\n    return (React.createElement(\"span\", { key: node.data.target.sys.urn },\n        \"type: \",\n        node.nodeType,\n        \" urn: \",\n        node.data.target.sys.urn));\n}\n/**\n * Serialize a Contentful Rich Text `document` to React tree\n */\nfunction documentToReactComponents(richTextDocument, options) {\n    if (options === void 0) { options = {}; }\n    if (!richTextDocument) {\n        return null;\n    }\n    return nodeToReactComponent(richTextDocument, {\n        renderNode: __assign(__assign({}, defaultNodeRenderers), options.renderNode),\n        renderMark: __assign(__assign({}, defaultMarkRenderers), options.renderMark),\n        renderText: options.renderText,\n        preserveWhitespace: options.preserveWhitespace,\n    });\n}\n\nexports.documentToReactComponents = documentToReactComponents;\n//# sourceMappingURL=rich-text-react-renderer.es5.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@contentful/rich-text-react-renderer/dist/rich-text-react-renderer.es5.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@contentful/rich-text-react-renderer/node_modules/@contentful/rich-text-types/dist/index.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/@contentful/rich-text-react-renderer/node_modules/@contentful/rich-text-types/dist/index.js ***!
  \******************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nvar isPlainObject = __webpack_require__(/*! is-plain-obj */ \"(ssr)/./node_modules/is-plain-obj/index.js\");\n\n/**\n * Map of all Contentful block types. Blocks contain inline or block nodes.\n */\nexports.BLOCKS = void 0;\n(function (BLOCKS) {\n    BLOCKS[\"DOCUMENT\"] = \"document\";\n    BLOCKS[\"PARAGRAPH\"] = \"paragraph\";\n    BLOCKS[\"HEADING_1\"] = \"heading-1\";\n    BLOCKS[\"HEADING_2\"] = \"heading-2\";\n    BLOCKS[\"HEADING_3\"] = \"heading-3\";\n    BLOCKS[\"HEADING_4\"] = \"heading-4\";\n    BLOCKS[\"HEADING_5\"] = \"heading-5\";\n    BLOCKS[\"HEADING_6\"] = \"heading-6\";\n    BLOCKS[\"OL_LIST\"] = \"ordered-list\";\n    BLOCKS[\"UL_LIST\"] = \"unordered-list\";\n    BLOCKS[\"LIST_ITEM\"] = \"list-item\";\n    BLOCKS[\"HR\"] = \"hr\";\n    BLOCKS[\"QUOTE\"] = \"blockquote\";\n    BLOCKS[\"EMBEDDED_ENTRY\"] = \"embedded-entry-block\";\n    BLOCKS[\"EMBEDDED_ASSET\"] = \"embedded-asset-block\";\n    BLOCKS[\"EMBEDDED_RESOURCE\"] = \"embedded-resource-block\";\n    BLOCKS[\"TABLE\"] = \"table\";\n    BLOCKS[\"TABLE_ROW\"] = \"table-row\";\n    BLOCKS[\"TABLE_CELL\"] = \"table-cell\";\n    BLOCKS[\"TABLE_HEADER_CELL\"] = \"table-header-cell\";\n})(exports.BLOCKS || (exports.BLOCKS = {}));\n\n/**\n * Map of all Contentful inline types. Inline contain inline or text nodes.\n *\n * @note This should be kept in alphabetical order since the\n * [validation package](https://github.com/contentful/content-stack/tree/master/packages/validation)\n *  relies on the values being in a predictable order.\n */\nexports.INLINES = void 0;\n(function (INLINES) {\n    INLINES[\"ASSET_HYPERLINK\"] = \"asset-hyperlink\";\n    INLINES[\"EMBEDDED_ENTRY\"] = \"embedded-entry-inline\";\n    INLINES[\"EMBEDDED_RESOURCE\"] = \"embedded-resource-inline\";\n    INLINES[\"ENTRY_HYPERLINK\"] = \"entry-hyperlink\";\n    INLINES[\"HYPERLINK\"] = \"hyperlink\";\n    INLINES[\"RESOURCE_HYPERLINK\"] = \"resource-hyperlink\";\n})(exports.INLINES || (exports.INLINES = {}));\n\n/**\n * Map of all Contentful marks.\n */\nexports.MARKS = void 0;\n(function (MARKS) {\n    MARKS[\"BOLD\"] = \"bold\";\n    MARKS[\"ITALIC\"] = \"italic\";\n    MARKS[\"UNDERLINE\"] = \"underline\";\n    MARKS[\"CODE\"] = \"code\";\n    MARKS[\"SUPERSCRIPT\"] = \"superscript\";\n    MARKS[\"SUBSCRIPT\"] = \"subscript\";\n    MARKS[\"STRIKETHROUGH\"] = \"strikethrough\";\n})(exports.MARKS || (exports.MARKS = {}));\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nfunction __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\n\nvar _a$1;\n/**\n * Array of all top level block types.\n * Only these block types can be the direct children of the document.\n */\nvar TOP_LEVEL_BLOCKS = [\n    exports.BLOCKS.PARAGRAPH,\n    exports.BLOCKS.HEADING_1,\n    exports.BLOCKS.HEADING_2,\n    exports.BLOCKS.HEADING_3,\n    exports.BLOCKS.HEADING_4,\n    exports.BLOCKS.HEADING_5,\n    exports.BLOCKS.HEADING_6,\n    exports.BLOCKS.OL_LIST,\n    exports.BLOCKS.UL_LIST,\n    exports.BLOCKS.HR,\n    exports.BLOCKS.QUOTE,\n    exports.BLOCKS.EMBEDDED_ENTRY,\n    exports.BLOCKS.EMBEDDED_ASSET,\n    exports.BLOCKS.EMBEDDED_RESOURCE,\n    exports.BLOCKS.TABLE,\n];\n/**\n * Array of all allowed block types inside list items\n */\nvar LIST_ITEM_BLOCKS = [\n    exports.BLOCKS.PARAGRAPH,\n    exports.BLOCKS.HEADING_1,\n    exports.BLOCKS.HEADING_2,\n    exports.BLOCKS.HEADING_3,\n    exports.BLOCKS.HEADING_4,\n    exports.BLOCKS.HEADING_5,\n    exports.BLOCKS.HEADING_6,\n    exports.BLOCKS.OL_LIST,\n    exports.BLOCKS.UL_LIST,\n    exports.BLOCKS.HR,\n    exports.BLOCKS.QUOTE,\n    exports.BLOCKS.EMBEDDED_ENTRY,\n    exports.BLOCKS.EMBEDDED_ASSET,\n    exports.BLOCKS.EMBEDDED_RESOURCE,\n];\nvar TABLE_BLOCKS = [\n    exports.BLOCKS.TABLE,\n    exports.BLOCKS.TABLE_ROW,\n    exports.BLOCKS.TABLE_CELL,\n    exports.BLOCKS.TABLE_HEADER_CELL,\n];\n/**\n * Array of all void block types\n */\nvar VOID_BLOCKS = [\n    exports.BLOCKS.HR,\n    exports.BLOCKS.EMBEDDED_ENTRY,\n    exports.BLOCKS.EMBEDDED_ASSET,\n    exports.BLOCKS.EMBEDDED_RESOURCE,\n];\n/**\n * Dictionary of all container block types, and the set block types they accept as children.\n *\n * Note: This does not include `[BLOCKS.DOCUMENT]: TOP_LEVEL_BLOCKS`\n */\nvar CONTAINERS = (_a$1 = {},\n    _a$1[exports.BLOCKS.OL_LIST] = [exports.BLOCKS.LIST_ITEM],\n    _a$1[exports.BLOCKS.UL_LIST] = [exports.BLOCKS.LIST_ITEM],\n    _a$1[exports.BLOCKS.LIST_ITEM] = LIST_ITEM_BLOCKS,\n    _a$1[exports.BLOCKS.QUOTE] = [exports.BLOCKS.PARAGRAPH],\n    _a$1[exports.BLOCKS.TABLE] = [exports.BLOCKS.TABLE_ROW],\n    _a$1[exports.BLOCKS.TABLE_ROW] = [exports.BLOCKS.TABLE_CELL, exports.BLOCKS.TABLE_HEADER_CELL],\n    _a$1[exports.BLOCKS.TABLE_CELL] = [exports.BLOCKS.PARAGRAPH, exports.BLOCKS.UL_LIST, exports.BLOCKS.OL_LIST],\n    _a$1[exports.BLOCKS.TABLE_HEADER_CELL] = [exports.BLOCKS.PARAGRAPH],\n    _a$1);\n/**\n * Array of all heading levels\n */\nvar HEADINGS = [\n    exports.BLOCKS.HEADING_1,\n    exports.BLOCKS.HEADING_2,\n    exports.BLOCKS.HEADING_3,\n    exports.BLOCKS.HEADING_4,\n    exports.BLOCKS.HEADING_5,\n    exports.BLOCKS.HEADING_6,\n];\n/**\n * Array of all block types that may contain text and inline nodes.\n */\nvar TEXT_CONTAINERS = __spreadArray([exports.BLOCKS.PARAGRAPH], HEADINGS, true);\n/**\n * Node types before `tables` release.\n */\nvar V1_NODE_TYPES = [\n    exports.BLOCKS.DOCUMENT,\n    exports.BLOCKS.PARAGRAPH,\n    exports.BLOCKS.HEADING_1,\n    exports.BLOCKS.HEADING_2,\n    exports.BLOCKS.HEADING_3,\n    exports.BLOCKS.HEADING_4,\n    exports.BLOCKS.HEADING_5,\n    exports.BLOCKS.HEADING_6,\n    exports.BLOCKS.OL_LIST,\n    exports.BLOCKS.UL_LIST,\n    exports.BLOCKS.LIST_ITEM,\n    exports.BLOCKS.HR,\n    exports.BLOCKS.QUOTE,\n    exports.BLOCKS.EMBEDDED_ENTRY,\n    exports.BLOCKS.EMBEDDED_ASSET,\n    exports.INLINES.HYPERLINK,\n    exports.INLINES.ENTRY_HYPERLINK,\n    exports.INLINES.ASSET_HYPERLINK,\n    exports.INLINES.EMBEDDED_ENTRY,\n    'text',\n];\n/**\n * Marks before `superscript` & `subscript` release.\n */\nvar V1_MARKS = [exports.MARKS.BOLD, exports.MARKS.CODE, exports.MARKS.ITALIC, exports.MARKS.UNDERLINE];\n\n/**\n * A rich text document considered to be empty.\n * Any other document structure than this is not considered empty.\n */\nvar EMPTY_DOCUMENT = {\n    nodeType: exports.BLOCKS.DOCUMENT,\n    data: {},\n    content: [\n        {\n            nodeType: exports.BLOCKS.PARAGRAPH,\n            data: {},\n            content: [\n                {\n                    nodeType: 'text',\n                    value: '',\n                    marks: [],\n                    data: {},\n                },\n            ],\n        },\n    ],\n};\n\n/**\n * Tiny replacement for Object.values(object).includes(key) to\n * avoid including CoreJS polyfills\n */\nfunction hasValue(obj, value) {\n    for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n        var key = _a[_i];\n        if (value === obj[key]) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * Checks if the node is an instance of Inline.\n */\nfunction isInline(node) {\n    return hasValue(exports.INLINES, node.nodeType);\n}\n/**\n * Checks if the node is an instance of Block.\n */\nfunction isBlock(node) {\n    return hasValue(exports.BLOCKS, node.nodeType);\n}\n/**\n * Checks if the node is an instance of Text.\n */\nfunction isText(node) {\n    return node.nodeType === 'text';\n}\n\nvar helpers = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  isBlock: isBlock,\n  isInline: isInline,\n  isText: isText\n});\n\nvar typeMismatchError = function (_a) {\n    var path = _a.path, property = _a.property, typeName = _a.typeName, value = _a.value;\n    return {\n        details: \"The type of \\\"\".concat(property, \"\\\" is incorrect, expected type: \").concat(typeName),\n        name: 'type',\n        path: path.toArray(),\n        type: typeName,\n        value: value,\n    };\n};\nvar minSizeError = function (_a) {\n    var min = _a.min, value = _a.value, path = _a.path;\n    return {\n        name: 'size',\n        min: min,\n        path: path.toArray(),\n        details: \"Size must be at least \".concat(min),\n        value: value,\n    };\n};\nvar maxSizeError = function (_a) {\n    var max = _a.max, value = _a.value, path = _a.path;\n    return {\n        name: 'size',\n        max: max,\n        path: path.toArray(),\n        details: \"Size must be at most \".concat(max),\n        value: value,\n    };\n};\nvar enumError = function (_a) {\n    var expected = _a.expected, value = _a.value, path = _a.path;\n    return {\n        details: \"Value must be one of expected values\",\n        name: 'in',\n        expected: __spreadArray([], expected, true).sort(),\n        path: path.toArray(),\n        value: value,\n    };\n};\nvar unknownPropertyError = function (_a) {\n    var property = _a.property, path = _a.path;\n    return {\n        details: \"The property \\\"\".concat(property, \"\\\" is not expected\"),\n        name: 'unexpected',\n        path: path.toArray(),\n    };\n};\nvar requiredPropertyError = function (_a) {\n    var property = _a.property, path = _a.path;\n    return {\n        details: \"The property \\\"\".concat(property, \"\\\" is required here\"),\n        name: 'required',\n        path: path.toArray(),\n    };\n};\n\nvar ObjectAssertion = /** @class */ (function () {\n    function ObjectAssertion(obj, path) {\n        var _this = this;\n        this.obj = obj;\n        this.path = path;\n        this._errors = [];\n        this.catch = function () {\n            var _a;\n            var errors = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                errors[_i] = arguments[_i];\n            }\n            (_a = _this._errors).push.apply(_a, errors);\n        };\n        /**\n         * Asserts the key exists in the object. You probably shouldn't call this\n         * function directly. Instead, use `$.object`, `$.number`, `$.string`, etc.\n         */\n        this.exists = function (key) {\n            if (key in _this.obj) {\n                return true;\n            }\n            _this.catch(requiredPropertyError({\n                property: key,\n                path: _this.path.of(key),\n            }));\n            return false;\n        };\n        /**\n         * Asserts the key exists in the object and its value is a plain object. if\n         * no key is provided, it asserts the object itself.\n         */\n        this.object = function (key) {\n            var _a;\n            var value = key ? _this.obj[key] : _this.obj;\n            if (key) {\n                if (!_this.exists(key)) {\n                    return false;\n                }\n            }\n            if (isPlainObject(value)) {\n                return true;\n            }\n            var path = key ? _this.path.of(key) : _this.path;\n            var property = (_a = key !== null && key !== void 0 ? key : _this.path.last()) !== null && _a !== void 0 ? _a : 'value';\n            _this.catch(typeMismatchError({\n                typeName: 'Object',\n                property: property,\n                path: path,\n                value: value,\n            }));\n            return false;\n        };\n        /**\n         * Asserts the key exists in the object and its value is a string.\n         */\n        this.string = function (key) {\n            var value = _this.obj[key];\n            if (key && !_this.exists(key)) {\n                return false;\n            }\n            if (typeof value === 'string') {\n                return true;\n            }\n            _this.catch(typeMismatchError({\n                typeName: 'String',\n                property: key,\n                path: _this.path.of(key),\n                value: value,\n            }));\n            return false;\n        };\n        /**\n         * Asserts the key exists in the object and its value is a number.\n         */\n        this.number = function (key, optional) {\n            var value = _this.obj[key];\n            if (optional && !(key in _this.obj)) {\n                return true;\n            }\n            if (!_this.exists(key)) {\n                return false;\n            }\n            if (typeof value === 'number' && !Number.isNaN(value)) {\n                return true;\n            }\n            _this.catch(typeMismatchError({\n                typeName: 'Number',\n                property: key,\n                path: _this.path.of(key),\n                value: value,\n            }));\n            return false;\n        };\n        /**\n         * Asserts the key exists in the object and its value is an array. You don't\n         * need to manually call this function before `$.each` or `$.maxLength`.\n         */\n        this.array = function (key) {\n            var value = _this.obj[key];\n            if (key && !_this.exists(key)) {\n                return false;\n            }\n            if (Array.isArray(value)) {\n                return true;\n            }\n            _this.catch(typeMismatchError({\n                typeName: 'Array',\n                property: key,\n                path: _this.path.of(key),\n                value: value,\n            }));\n            return false;\n        };\n        /**\n         * Asserts the value of the key is one of the expected values.\n         */\n        this.enum = function (key, expected) {\n            var value = _this.obj[key];\n            if (typeof value === 'string' && expected.includes(value)) {\n                return true;\n            }\n            _this.catch(enumError({\n                expected: expected,\n                value: value,\n                path: _this.path.of(key),\n            }));\n            return false;\n        };\n        /**\n         * Asserts the array value of the object key is empty. If the value isn't an\n         * array, the function captures a type error and returns false.\n         */\n        this.empty = function (key) {\n            if (!_this.array(key)) {\n                return false;\n            }\n            var value = _this.obj[key];\n            if (value.length === 0) {\n                return true;\n            }\n            _this.catch(maxSizeError({\n                max: 0,\n                value: value,\n                path: _this.path.of(key),\n            }));\n            return false;\n        };\n        /**\n         * Asserts the length of the value of the object key is at least `min`. If the\n         * value isn't an array, the function captures a type error and returns false.\n         */\n        this.minLength = function (key, min) {\n            if (!_this.array(key)) {\n                return false;\n            }\n            var value = _this.obj[key];\n            if (value.length >= min) {\n                return true;\n            }\n            _this.catch(minSizeError({\n                min: min,\n                value: value,\n                path: _this.path.of(key),\n            }));\n            return false;\n        };\n        /**\n         * Asserts the object has no additional properties other than the ones\n         * specified\n         */\n        this.noAdditionalProperties = function (properties) {\n            var unknowns = Object.keys(_this.obj)\n                .sort()\n                .filter(function (key) { return !properties.includes(key); });\n            unknowns.forEach(function (property) {\n                return _this.catch(unknownPropertyError({\n                    property: property,\n                    path: _this.path.of(property),\n                }));\n            });\n            return unknowns.length === 0;\n        };\n        /**\n         * Iterates over the value of the key and assert each item. If the value isn't\n         * an array, the function captures a type error and safely exits.\n         *\n         * To maintain compatibility with previous implementation, we stop early if we\n         * find any errors.\n         */\n        this.each = function (key, assert) {\n            if (!_this.array(key)) {\n                return;\n            }\n            var value = _this.obj[key];\n            var foundErrors = false;\n            value.forEach(function (item, index) {\n                if (foundErrors) {\n                    return;\n                }\n                var errors = assert(item, _this.path.of(key).of(index));\n                if (errors.length > 0) {\n                    foundErrors = true;\n                }\n                _this.catch.apply(_this, errors);\n            });\n        };\n    }\n    Object.defineProperty(ObjectAssertion.prototype, \"errors\", {\n        get: function () {\n            var _this = this;\n            var serializeError = function (error) {\n                return JSON.stringify({\n                    details: error.details,\n                    path: error.path,\n                });\n            };\n            return this._errors.filter(function (error, index) {\n                return _this._errors.findIndex(function (step) { return serializeError(error) === serializeError(step); }) === index;\n            });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return ObjectAssertion;\n}());\n\nvar VOID_CONTENT = [];\nvar NodeAssertion = /** @class */ (function () {\n    function NodeAssertion(contentRule, validateData) {\n        this.contentRule = contentRule;\n        this.validateData = validateData;\n    }\n    NodeAssertion.prototype.assert = function (node, path) {\n        var _a, _b;\n        var $ = new ObjectAssertion(node, path);\n        if (!$.object()) {\n            return $.errors;\n        }\n        $.noAdditionalProperties(['nodeType', 'data', 'content']);\n        var _c = Array.isArray(this.contentRule)\n            ? {\n                nodeTypes: this.contentRule,\n            }\n            : this.contentRule(node, path), nodeTypes = _c.nodeTypes, _d = _c.min, min = _d === void 0 ? 0 : _d;\n        if (nodeTypes.length === 0 && min > 0) {\n            throw new Error(\"Invalid content rule. Cannot have enforce a 'min' of \".concat(min, \" with no nodeTypes\"));\n        }\n        $.minLength('content', min);\n        // Is void\n        if (nodeTypes.length === 0) {\n            $.empty('content');\n        }\n        // Ensure content nodes have valid nodeTypes without validating the full\n        // shape which is something that's only done later if the current node is\n        // valid.\n        else {\n            $.each('content', function (item, path) {\n                var item$ = new ObjectAssertion(item, path);\n                if (!item$.object()) {\n                    return item$.errors;\n                }\n                item$.enum('nodeType', nodeTypes);\n                return item$.errors;\n            });\n        }\n        if ($.object('data')) {\n            var dataErrors = (_b = (_a = this.validateData) === null || _a === void 0 ? void 0 : _a.call(this, node.data, path.of('data'))) !== null && _b !== void 0 ? _b : [];\n            $.catch.apply($, dataErrors);\n        }\n        return $.errors;\n    };\n    return NodeAssertion;\n}());\nvar EntityLinkAssertion = /** @class */ (function (_super) {\n    __extends(EntityLinkAssertion, _super);\n    function EntityLinkAssertion(linkType, contentNodeTypes) {\n        var _this = _super.call(this, contentNodeTypes, function (data, path) { return _this.assertLink(data, path); }) || this;\n        _this.linkType = linkType;\n        _this.assertLink = function (data, path) {\n            var $ = new ObjectAssertion(data, path);\n            if ($.object('target')) {\n                var sys$ = new ObjectAssertion(data.target.sys, path.of('target').of('sys'));\n                if (sys$.object()) {\n                    sys$.enum('type', [_this.type]);\n                    sys$.enum('linkType', [_this.linkType]);\n                    if (_this.type === 'Link') {\n                        sys$.string('id');\n                        sys$.noAdditionalProperties(['type', 'linkType', 'id']);\n                    }\n                    else if (_this.type === 'ResourceLink') {\n                        sys$.string('urn');\n                        sys$.noAdditionalProperties(['type', 'linkType', 'urn']);\n                    }\n                }\n                $.catch.apply($, sys$.errors);\n            }\n            $.noAdditionalProperties(['target']);\n            return $.errors;\n        };\n        _this.type = _this.linkType.startsWith('Contentful:') ? 'ResourceLink' : 'Link';\n        return _this;\n    }\n    return EntityLinkAssertion;\n}(NodeAssertion));\nvar HyperLinkAssertion = /** @class */ (function (_super) {\n    __extends(HyperLinkAssertion, _super);\n    function HyperLinkAssertion() {\n        var _this = _super.call(this, ['text'], function (data, path) { return _this.assertLink(data, path); }) || this;\n        _this.assertLink = function (data, path) {\n            var $ = new ObjectAssertion(data, path);\n            $.string('uri');\n            $.noAdditionalProperties(['uri']);\n            return $.errors;\n        };\n        return _this;\n    }\n    return HyperLinkAssertion;\n}(NodeAssertion));\nvar assert = function (contentRule, validateData) {\n    return new NodeAssertion(contentRule, validateData);\n};\nvar assertLink = function (linkType, contentRule) {\n    return new EntityLinkAssertion(linkType, contentRule);\n};\n\nvar Path = /** @class */ (function () {\n    function Path(path) {\n        if (path === void 0) { path = []; }\n        var _this = this;\n        this.path = path;\n        this.of = function (element) {\n            return new Path(__spreadArray(__spreadArray([], _this.path, true), [element], false));\n        };\n        this.isRoot = function () {\n            return _this.path.length === 0;\n        };\n        this.last = function () {\n            return _this.path[_this.path.length - 1];\n        };\n        this.toArray = function () {\n            return _this.path;\n        };\n    }\n    return Path;\n}());\n\nfunction assertText(text, path) {\n    var $ = new ObjectAssertion(text, path);\n    if (!$.object()) {\n        return $.errors;\n    }\n    $.noAdditionalProperties(['nodeType', 'data', 'value', 'marks']);\n    $.object('data');\n    $.each('marks', function (mark, path) {\n        var mark$ = new ObjectAssertion(mark, path);\n        if (!mark$.object()) {\n            return mark$.errors;\n        }\n        // For historical reasons, we don't explicitly check for supported marks\n        // e.g. bold, italic ..etc. This makes it possible for a customer to add\n        // custom marks\n        mark$.string('type');\n        return mark$.errors;\n    });\n    $.string('value');\n    return $.errors;\n}\n\nvar _a;\nvar assertInlineOrText = assert(__spreadArray(__spreadArray([], Object.values(exports.INLINES), true), ['text'], false).sort());\nvar assertList = assert([exports.BLOCKS.LIST_ITEM]);\nvar assertVoidEntryLink = assertLink('Entry', VOID_CONTENT);\nvar assertTableCell = assert(function () { return ({\n    nodeTypes: [exports.BLOCKS.PARAGRAPH],\n    min: 1,\n}); }, function (data, path) {\n    var $ = new ObjectAssertion(data, path);\n    $.noAdditionalProperties(['colspan', 'rowspan']);\n    $.number('colspan', true);\n    $.number('rowspan', true);\n    return $.errors;\n});\nvar nodeValidator = (_a = {},\n    _a[exports.BLOCKS.DOCUMENT] = assert(TOP_LEVEL_BLOCKS),\n    _a[exports.BLOCKS.PARAGRAPH] = assertInlineOrText,\n    _a[exports.BLOCKS.HEADING_1] = assertInlineOrText,\n    _a[exports.BLOCKS.HEADING_2] = assertInlineOrText,\n    _a[exports.BLOCKS.HEADING_3] = assertInlineOrText,\n    _a[exports.BLOCKS.HEADING_4] = assertInlineOrText,\n    _a[exports.BLOCKS.HEADING_5] = assertInlineOrText,\n    _a[exports.BLOCKS.HEADING_6] = assertInlineOrText,\n    _a[exports.BLOCKS.QUOTE] = assert(CONTAINERS[exports.BLOCKS.QUOTE]),\n    _a[exports.BLOCKS.EMBEDDED_ENTRY] = assertVoidEntryLink,\n    _a[exports.BLOCKS.EMBEDDED_ASSET] = assertLink('Asset', VOID_CONTENT),\n    _a[exports.BLOCKS.EMBEDDED_RESOURCE] = assertLink('Contentful:Entry', VOID_CONTENT),\n    _a[exports.BLOCKS.HR] = assert(VOID_CONTENT),\n    _a[exports.BLOCKS.OL_LIST] = assertList,\n    _a[exports.BLOCKS.UL_LIST] = assertList,\n    _a[exports.BLOCKS.LIST_ITEM] = assert(__spreadArray([], LIST_ITEM_BLOCKS, true).sort()),\n    _a[exports.BLOCKS.TABLE] = assert(function () { return ({\n        nodeTypes: [exports.BLOCKS.TABLE_ROW],\n        min: 1,\n    }); }),\n    _a[exports.BLOCKS.TABLE_ROW] = assert(function () { return ({\n        nodeTypes: [exports.BLOCKS.TABLE_CELL, exports.BLOCKS.TABLE_HEADER_CELL],\n        min: 1,\n    }); }),\n    _a[exports.BLOCKS.TABLE_CELL] = assertTableCell,\n    _a[exports.BLOCKS.TABLE_HEADER_CELL] = assertTableCell,\n    _a[exports.INLINES.HYPERLINK] = new HyperLinkAssertion(),\n    _a[exports.INLINES.EMBEDDED_ENTRY] = assertVoidEntryLink,\n    _a[exports.INLINES.EMBEDDED_RESOURCE] = assertLink('Contentful:Entry', VOID_CONTENT),\n    _a[exports.INLINES.ENTRY_HYPERLINK] = assertLink('Entry', ['text']),\n    _a[exports.INLINES.ASSET_HYPERLINK] = assertLink('Asset', ['text']),\n    _a[exports.INLINES.RESOURCE_HYPERLINK] = assertLink('Contentful:Entry', ['text']),\n    _a);\nfunction validateNode(node, path) {\n    if (node.nodeType === 'text') {\n        return assertText(node, path);\n    }\n    var errors = nodeValidator[node.nodeType].assert(node, path);\n    if (errors.length > 0) {\n        return errors;\n    }\n    var $ = new ObjectAssertion(node, path);\n    $.each('content', function (item, path) {\n        // We already know those are valid nodes thanks to the assertion done in\n        // the NodeAssertion class\n        return validateNode(item, path);\n    });\n    return $.errors;\n}\nvar validateRichTextDocument = function (document) {\n    var path = new Path();\n    var $ = new ObjectAssertion(document, path);\n    if ($.object()) {\n        $.enum('nodeType', [exports.BLOCKS.DOCUMENT]);\n    }\n    if ($.errors.length > 0) {\n        return $.errors;\n    }\n    return validateNode(document, path);\n};\n\nexports.CONTAINERS = CONTAINERS;\nexports.EMPTY_DOCUMENT = EMPTY_DOCUMENT;\nexports.HEADINGS = HEADINGS;\nexports.LIST_ITEM_BLOCKS = LIST_ITEM_BLOCKS;\nexports.TABLE_BLOCKS = TABLE_BLOCKS;\nexports.TEXT_CONTAINERS = TEXT_CONTAINERS;\nexports.TOP_LEVEL_BLOCKS = TOP_LEVEL_BLOCKS;\nexports.V1_MARKS = V1_MARKS;\nexports.V1_NODE_TYPES = V1_NODE_TYPES;\nexports.VOID_BLOCKS = VOID_BLOCKS;\nexports.helpers = helpers;\nexports.validateRichTextDocument = validateRichTextDocument;\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvbnRlbnRmdWwvcmljaC10ZXh0LXJlYWN0LXJlbmRlcmVyL25vZGVfbW9kdWxlcy9AY29udGVudGZ1bC9yaWNoLXRleHQtdHlwZXMvZGlzdC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixvQkFBb0IsbUJBQU8sQ0FBQyxnRUFBYzs7QUFFMUM7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMscUJBQXFCLGNBQWMsS0FBSzs7QUFFekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLHNCQUFzQixlQUFlLEtBQUs7O0FBRTNDO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxvQkFBb0IsYUFBYSxLQUFLOztBQUV2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGdCQUFnQixzQ0FBc0Msa0JBQWtCO0FBQ25GLDBCQUEwQjtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQjtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZFQUE2RSxPQUFPO0FBQ3BGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQSxvQkFBb0I7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QjtBQUM1QixpQkFBaUI7QUFDakI7QUFDQSxTQUFTO0FBQ1Q7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNENBQTRDLGdCQUFnQjtBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2Qix1QkFBdUI7QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5Q0FBeUMsbUNBQW1DO0FBQzVFO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQSxpRUFBaUUsd0RBQXdEO0FBQ3pILGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxnRkFBZ0Ysc0NBQXNDO0FBQ3RIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0Esd0VBQXdFLHNDQUFzQztBQUM5RztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSwrQkFBK0I7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDO0FBQzNDO0FBQ0E7QUFDQSxDQUFDLElBQUk7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELDRCQUE0QjtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9EQUFvRDtBQUNwRDtBQUNBO0FBQ0EsS0FBSyxJQUFJO0FBQ1Qsd0RBQXdEO0FBQ3hEO0FBQ0E7QUFDQSxLQUFLLElBQUk7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxrQkFBa0I7QUFDbEIsc0JBQXNCO0FBQ3RCLGdCQUFnQjtBQUNoQix3QkFBd0I7QUFDeEIsb0JBQW9CO0FBQ3BCLHVCQUF1QjtBQUN2Qix3QkFBd0I7QUFDeEIsZ0JBQWdCO0FBQ2hCLHFCQUFxQjtBQUNyQixtQkFBbUI7QUFDbkIsZUFBZTtBQUNmLGdDQUFnQztBQUNoQyIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxVU0VSXFxEZXNrdG9wXFxNeSBQcm9qZWN0c1xcUmVhY3QgUHJvamVjdHNcXE15UG9ydGZvbGlvXFxub2RlX21vZHVsZXNcXEBjb250ZW50ZnVsXFxyaWNoLXRleHQtcmVhY3QtcmVuZGVyZXJcXG5vZGVfbW9kdWxlc1xcQGNvbnRlbnRmdWxcXHJpY2gtdGV4dC10eXBlc1xcZGlzdFxcaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgaXNQbGFpbk9iamVjdCA9IHJlcXVpcmUoJ2lzLXBsYWluLW9iaicpO1xuXG4vKipcbiAqIE1hcCBvZiBhbGwgQ29udGVudGZ1bCBibG9jayB0eXBlcy4gQmxvY2tzIGNvbnRhaW4gaW5saW5lIG9yIGJsb2NrIG5vZGVzLlxuICovXG5leHBvcnRzLkJMT0NLUyA9IHZvaWQgMDtcbihmdW5jdGlvbiAoQkxPQ0tTKSB7XG4gICAgQkxPQ0tTW1wiRE9DVU1FTlRcIl0gPSBcImRvY3VtZW50XCI7XG4gICAgQkxPQ0tTW1wiUEFSQUdSQVBIXCJdID0gXCJwYXJhZ3JhcGhcIjtcbiAgICBCTE9DS1NbXCJIRUFESU5HXzFcIl0gPSBcImhlYWRpbmctMVwiO1xuICAgIEJMT0NLU1tcIkhFQURJTkdfMlwiXSA9IFwiaGVhZGluZy0yXCI7XG4gICAgQkxPQ0tTW1wiSEVBRElOR18zXCJdID0gXCJoZWFkaW5nLTNcIjtcbiAgICBCTE9DS1NbXCJIRUFESU5HXzRcIl0gPSBcImhlYWRpbmctNFwiO1xuICAgIEJMT0NLU1tcIkhFQURJTkdfNVwiXSA9IFwiaGVhZGluZy01XCI7XG4gICAgQkxPQ0tTW1wiSEVBRElOR182XCJdID0gXCJoZWFkaW5nLTZcIjtcbiAgICBCTE9DS1NbXCJPTF9MSVNUXCJdID0gXCJvcmRlcmVkLWxpc3RcIjtcbiAgICBCTE9DS1NbXCJVTF9MSVNUXCJdID0gXCJ1bm9yZGVyZWQtbGlzdFwiO1xuICAgIEJMT0NLU1tcIkxJU1RfSVRFTVwiXSA9IFwibGlzdC1pdGVtXCI7XG4gICAgQkxPQ0tTW1wiSFJcIl0gPSBcImhyXCI7XG4gICAgQkxPQ0tTW1wiUVVPVEVcIl0gPSBcImJsb2NrcXVvdGVcIjtcbiAgICBCTE9DS1NbXCJFTUJFRERFRF9FTlRSWVwiXSA9IFwiZW1iZWRkZWQtZW50cnktYmxvY2tcIjtcbiAgICBCTE9DS1NbXCJFTUJFRERFRF9BU1NFVFwiXSA9IFwiZW1iZWRkZWQtYXNzZXQtYmxvY2tcIjtcbiAgICBCTE9DS1NbXCJFTUJFRERFRF9SRVNPVVJDRVwiXSA9IFwiZW1iZWRkZWQtcmVzb3VyY2UtYmxvY2tcIjtcbiAgICBCTE9DS1NbXCJUQUJMRVwiXSA9IFwidGFibGVcIjtcbiAgICBCTE9DS1NbXCJUQUJMRV9ST1dcIl0gPSBcInRhYmxlLXJvd1wiO1xuICAgIEJMT0NLU1tcIlRBQkxFX0NFTExcIl0gPSBcInRhYmxlLWNlbGxcIjtcbiAgICBCTE9DS1NbXCJUQUJMRV9IRUFERVJfQ0VMTFwiXSA9IFwidGFibGUtaGVhZGVyLWNlbGxcIjtcbn0pKGV4cG9ydHMuQkxPQ0tTIHx8IChleHBvcnRzLkJMT0NLUyA9IHt9KSk7XG5cbi8qKlxuICogTWFwIG9mIGFsbCBDb250ZW50ZnVsIGlubGluZSB0eXBlcy4gSW5saW5lIGNvbnRhaW4gaW5saW5lIG9yIHRleHQgbm9kZXMuXG4gKlxuICogQG5vdGUgVGhpcyBzaG91bGQgYmUga2VwdCBpbiBhbHBoYWJldGljYWwgb3JkZXIgc2luY2UgdGhlXG4gKiBbdmFsaWRhdGlvbiBwYWNrYWdlXShodHRwczovL2dpdGh1Yi5jb20vY29udGVudGZ1bC9jb250ZW50LXN0YWNrL3RyZWUvbWFzdGVyL3BhY2thZ2VzL3ZhbGlkYXRpb24pXG4gKiAgcmVsaWVzIG9uIHRoZSB2YWx1ZXMgYmVpbmcgaW4gYSBwcmVkaWN0YWJsZSBvcmRlci5cbiAqL1xuZXhwb3J0cy5JTkxJTkVTID0gdm9pZCAwO1xuKGZ1bmN0aW9uIChJTkxJTkVTKSB7XG4gICAgSU5MSU5FU1tcIkFTU0VUX0hZUEVSTElOS1wiXSA9IFwiYXNzZXQtaHlwZXJsaW5rXCI7XG4gICAgSU5MSU5FU1tcIkVNQkVEREVEX0VOVFJZXCJdID0gXCJlbWJlZGRlZC1lbnRyeS1pbmxpbmVcIjtcbiAgICBJTkxJTkVTW1wiRU1CRURERURfUkVTT1VSQ0VcIl0gPSBcImVtYmVkZGVkLXJlc291cmNlLWlubGluZVwiO1xuICAgIElOTElORVNbXCJFTlRSWV9IWVBFUkxJTktcIl0gPSBcImVudHJ5LWh5cGVybGlua1wiO1xuICAgIElOTElORVNbXCJIWVBFUkxJTktcIl0gPSBcImh5cGVybGlua1wiO1xuICAgIElOTElORVNbXCJSRVNPVVJDRV9IWVBFUkxJTktcIl0gPSBcInJlc291cmNlLWh5cGVybGlua1wiO1xufSkoZXhwb3J0cy5JTkxJTkVTIHx8IChleHBvcnRzLklOTElORVMgPSB7fSkpO1xuXG4vKipcbiAqIE1hcCBvZiBhbGwgQ29udGVudGZ1bCBtYXJrcy5cbiAqL1xuZXhwb3J0cy5NQVJLUyA9IHZvaWQgMDtcbihmdW5jdGlvbiAoTUFSS1MpIHtcbiAgICBNQVJLU1tcIkJPTERcIl0gPSBcImJvbGRcIjtcbiAgICBNQVJLU1tcIklUQUxJQ1wiXSA9IFwiaXRhbGljXCI7XG4gICAgTUFSS1NbXCJVTkRFUkxJTkVcIl0gPSBcInVuZGVybGluZVwiO1xuICAgIE1BUktTW1wiQ09ERVwiXSA9IFwiY29kZVwiO1xuICAgIE1BUktTW1wiU1VQRVJTQ1JJUFRcIl0gPSBcInN1cGVyc2NyaXB0XCI7XG4gICAgTUFSS1NbXCJTVUJTQ1JJUFRcIl0gPSBcInN1YnNjcmlwdFwiO1xuICAgIE1BUktTW1wiU1RSSUtFVEhST1VHSFwiXSA9IFwic3RyaWtldGhyb3VnaFwiO1xufSkoZXhwb3J0cy5NQVJLUyB8fCAoZXhwb3J0cy5NQVJLUyA9IHt9KSk7XG5cbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXHJcblxyXG5QZXJtaXNzaW9uIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBhbmQvb3IgZGlzdHJpYnV0ZSB0aGlzIHNvZnR3YXJlIGZvciBhbnlcclxucHVycG9zZSB3aXRoIG9yIHdpdGhvdXQgZmVlIGlzIGhlcmVieSBncmFudGVkLlxyXG5cclxuVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiBBTkQgVEhFIEFVVEhPUiBESVNDTEFJTVMgQUxMIFdBUlJBTlRJRVMgV0lUSFxyXG5SRUdBUkQgVE8gVEhJUyBTT0ZUV0FSRSBJTkNMVURJTkcgQUxMIElNUExJRUQgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFlcclxuQU5EIEZJVE5FU1MuIElOIE5PIEVWRU5UIFNIQUxMIFRIRSBBVVRIT1IgQkUgTElBQkxFIEZPUiBBTlkgU1BFQ0lBTCwgRElSRUNULFxyXG5JTkRJUkVDVCwgT1IgQ09OU0VRVUVOVElBTCBEQU1BR0VTIE9SIEFOWSBEQU1BR0VTIFdIQVRTT0VWRVIgUkVTVUxUSU5HIEZST01cclxuTE9TUyBPRiBVU0UsIERBVEEgT1IgUFJPRklUUywgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIE5FR0xJR0VOQ0UgT1JcclxuT1RIRVIgVE9SVElPVVMgQUNUSU9OLCBBUklTSU5HIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFVTRSBPUlxyXG5QRVJGT1JNQU5DRSBPRiBUSElTIFNPRlRXQVJFLlxyXG4qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiAqL1xyXG4vKiBnbG9iYWwgUmVmbGVjdCwgUHJvbWlzZSwgU3VwcHJlc3NlZEVycm9yLCBTeW1ib2wgKi9cclxuXHJcbnZhciBleHRlbmRTdGF0aWNzID0gZnVuY3Rpb24oZCwgYikge1xyXG4gICAgZXh0ZW5kU3RhdGljcyA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fFxyXG4gICAgICAgICh7IF9fcHJvdG9fXzogW10gfSBpbnN0YW5jZW9mIEFycmF5ICYmIGZ1bmN0aW9uIChkLCBiKSB7IGQuX19wcm90b19fID0gYjsgfSkgfHxcclxuICAgICAgICBmdW5jdGlvbiAoZCwgYikgeyBmb3IgKHZhciBwIGluIGIpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoYiwgcCkpIGRbcF0gPSBiW3BdOyB9O1xyXG4gICAgcmV0dXJuIGV4dGVuZFN0YXRpY3MoZCwgYik7XHJcbn07XHJcblxyXG5mdW5jdGlvbiBfX2V4dGVuZHMoZCwgYikge1xyXG4gICAgaWYgKHR5cGVvZiBiICE9PSBcImZ1bmN0aW9uXCIgJiYgYiAhPT0gbnVsbClcclxuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2xhc3MgZXh0ZW5kcyB2YWx1ZSBcIiArIFN0cmluZyhiKSArIFwiIGlzIG5vdCBhIGNvbnN0cnVjdG9yIG9yIG51bGxcIik7XHJcbiAgICBleHRlbmRTdGF0aWNzKGQsIGIpO1xyXG4gICAgZnVuY3Rpb24gX18oKSB7IHRoaXMuY29uc3RydWN0b3IgPSBkOyB9XHJcbiAgICBkLnByb3RvdHlwZSA9IGIgPT09IG51bGwgPyBPYmplY3QuY3JlYXRlKGIpIDogKF9fLnByb3RvdHlwZSA9IGIucHJvdG90eXBlLCBuZXcgX18oKSk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIF9fc3ByZWFkQXJyYXkodG8sIGZyb20sIHBhY2spIHtcclxuICAgIGlmIChwYWNrIHx8IGFyZ3VtZW50cy5sZW5ndGggPT09IDIpIGZvciAodmFyIGkgPSAwLCBsID0gZnJvbS5sZW5ndGgsIGFyOyBpIDwgbDsgaSsrKSB7XHJcbiAgICAgICAgaWYgKGFyIHx8ICEoaSBpbiBmcm9tKSkge1xyXG4gICAgICAgICAgICBpZiAoIWFyKSBhciA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGZyb20sIDAsIGkpO1xyXG4gICAgICAgICAgICBhcltpXSA9IGZyb21baV07XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgcmV0dXJuIHRvLmNvbmNhdChhciB8fCBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChmcm9tKSk7XHJcbn1cclxuXHJcbnR5cGVvZiBTdXBwcmVzc2VkRXJyb3IgPT09IFwiZnVuY3Rpb25cIiA/IFN1cHByZXNzZWRFcnJvciA6IGZ1bmN0aW9uIChlcnJvciwgc3VwcHJlc3NlZCwgbWVzc2FnZSkge1xyXG4gICAgdmFyIGUgPSBuZXcgRXJyb3IobWVzc2FnZSk7XHJcbiAgICByZXR1cm4gZS5uYW1lID0gXCJTdXBwcmVzc2VkRXJyb3JcIiwgZS5lcnJvciA9IGVycm9yLCBlLnN1cHByZXNzZWQgPSBzdXBwcmVzc2VkLCBlO1xyXG59O1xuXG52YXIgX2EkMTtcbi8qKlxuICogQXJyYXkgb2YgYWxsIHRvcCBsZXZlbCBibG9jayB0eXBlcy5cbiAqIE9ubHkgdGhlc2UgYmxvY2sgdHlwZXMgY2FuIGJlIHRoZSBkaXJlY3QgY2hpbGRyZW4gb2YgdGhlIGRvY3VtZW50LlxuICovXG52YXIgVE9QX0xFVkVMX0JMT0NLUyA9IFtcbiAgICBleHBvcnRzLkJMT0NLUy5QQVJBR1JBUEgsXG4gICAgZXhwb3J0cy5CTE9DS1MuSEVBRElOR18xLFxuICAgIGV4cG9ydHMuQkxPQ0tTLkhFQURJTkdfMixcbiAgICBleHBvcnRzLkJMT0NLUy5IRUFESU5HXzMsXG4gICAgZXhwb3J0cy5CTE9DS1MuSEVBRElOR180LFxuICAgIGV4cG9ydHMuQkxPQ0tTLkhFQURJTkdfNSxcbiAgICBleHBvcnRzLkJMT0NLUy5IRUFESU5HXzYsXG4gICAgZXhwb3J0cy5CTE9DS1MuT0xfTElTVCxcbiAgICBleHBvcnRzLkJMT0NLUy5VTF9MSVNULFxuICAgIGV4cG9ydHMuQkxPQ0tTLkhSLFxuICAgIGV4cG9ydHMuQkxPQ0tTLlFVT1RFLFxuICAgIGV4cG9ydHMuQkxPQ0tTLkVNQkVEREVEX0VOVFJZLFxuICAgIGV4cG9ydHMuQkxPQ0tTLkVNQkVEREVEX0FTU0VULFxuICAgIGV4cG9ydHMuQkxPQ0tTLkVNQkVEREVEX1JFU09VUkNFLFxuICAgIGV4cG9ydHMuQkxPQ0tTLlRBQkxFLFxuXTtcbi8qKlxuICogQXJyYXkgb2YgYWxsIGFsbG93ZWQgYmxvY2sgdHlwZXMgaW5zaWRlIGxpc3QgaXRlbXNcbiAqL1xudmFyIExJU1RfSVRFTV9CTE9DS1MgPSBbXG4gICAgZXhwb3J0cy5CTE9DS1MuUEFSQUdSQVBILFxuICAgIGV4cG9ydHMuQkxPQ0tTLkhFQURJTkdfMSxcbiAgICBleHBvcnRzLkJMT0NLUy5IRUFESU5HXzIsXG4gICAgZXhwb3J0cy5CTE9DS1MuSEVBRElOR18zLFxuICAgIGV4cG9ydHMuQkxPQ0tTLkhFQURJTkdfNCxcbiAgICBleHBvcnRzLkJMT0NLUy5IRUFESU5HXzUsXG4gICAgZXhwb3J0cy5CTE9DS1MuSEVBRElOR182LFxuICAgIGV4cG9ydHMuQkxPQ0tTLk9MX0xJU1QsXG4gICAgZXhwb3J0cy5CTE9DS1MuVUxfTElTVCxcbiAgICBleHBvcnRzLkJMT0NLUy5IUixcbiAgICBleHBvcnRzLkJMT0NLUy5RVU9URSxcbiAgICBleHBvcnRzLkJMT0NLUy5FTUJFRERFRF9FTlRSWSxcbiAgICBleHBvcnRzLkJMT0NLUy5FTUJFRERFRF9BU1NFVCxcbiAgICBleHBvcnRzLkJMT0NLUy5FTUJFRERFRF9SRVNPVVJDRSxcbl07XG52YXIgVEFCTEVfQkxPQ0tTID0gW1xuICAgIGV4cG9ydHMuQkxPQ0tTLlRBQkxFLFxuICAgIGV4cG9ydHMuQkxPQ0tTLlRBQkxFX1JPVyxcbiAgICBleHBvcnRzLkJMT0NLUy5UQUJMRV9DRUxMLFxuICAgIGV4cG9ydHMuQkxPQ0tTLlRBQkxFX0hFQURFUl9DRUxMLFxuXTtcbi8qKlxuICogQXJyYXkgb2YgYWxsIHZvaWQgYmxvY2sgdHlwZXNcbiAqL1xudmFyIFZPSURfQkxPQ0tTID0gW1xuICAgIGV4cG9ydHMuQkxPQ0tTLkhSLFxuICAgIGV4cG9ydHMuQkxPQ0tTLkVNQkVEREVEX0VOVFJZLFxuICAgIGV4cG9ydHMuQkxPQ0tTLkVNQkVEREVEX0FTU0VULFxuICAgIGV4cG9ydHMuQkxPQ0tTLkVNQkVEREVEX1JFU09VUkNFLFxuXTtcbi8qKlxuICogRGljdGlvbmFyeSBvZiBhbGwgY29udGFpbmVyIGJsb2NrIHR5cGVzLCBhbmQgdGhlIHNldCBibG9jayB0eXBlcyB0aGV5IGFjY2VwdCBhcyBjaGlsZHJlbi5cbiAqXG4gKiBOb3RlOiBUaGlzIGRvZXMgbm90IGluY2x1ZGUgYFtCTE9DS1MuRE9DVU1FTlRdOiBUT1BfTEVWRUxfQkxPQ0tTYFxuICovXG52YXIgQ09OVEFJTkVSUyA9IChfYSQxID0ge30sXG4gICAgX2EkMVtleHBvcnRzLkJMT0NLUy5PTF9MSVNUXSA9IFtleHBvcnRzLkJMT0NLUy5MSVNUX0lURU1dLFxuICAgIF9hJDFbZXhwb3J0cy5CTE9DS1MuVUxfTElTVF0gPSBbZXhwb3J0cy5CTE9DS1MuTElTVF9JVEVNXSxcbiAgICBfYSQxW2V4cG9ydHMuQkxPQ0tTLkxJU1RfSVRFTV0gPSBMSVNUX0lURU1fQkxPQ0tTLFxuICAgIF9hJDFbZXhwb3J0cy5CTE9DS1MuUVVPVEVdID0gW2V4cG9ydHMuQkxPQ0tTLlBBUkFHUkFQSF0sXG4gICAgX2EkMVtleHBvcnRzLkJMT0NLUy5UQUJMRV0gPSBbZXhwb3J0cy5CTE9DS1MuVEFCTEVfUk9XXSxcbiAgICBfYSQxW2V4cG9ydHMuQkxPQ0tTLlRBQkxFX1JPV10gPSBbZXhwb3J0cy5CTE9DS1MuVEFCTEVfQ0VMTCwgZXhwb3J0cy5CTE9DS1MuVEFCTEVfSEVBREVSX0NFTExdLFxuICAgIF9hJDFbZXhwb3J0cy5CTE9DS1MuVEFCTEVfQ0VMTF0gPSBbZXhwb3J0cy5CTE9DS1MuUEFSQUdSQVBILCBleHBvcnRzLkJMT0NLUy5VTF9MSVNULCBleHBvcnRzLkJMT0NLUy5PTF9MSVNUXSxcbiAgICBfYSQxW2V4cG9ydHMuQkxPQ0tTLlRBQkxFX0hFQURFUl9DRUxMXSA9IFtleHBvcnRzLkJMT0NLUy5QQVJBR1JBUEhdLFxuICAgIF9hJDEpO1xuLyoqXG4gKiBBcnJheSBvZiBhbGwgaGVhZGluZyBsZXZlbHNcbiAqL1xudmFyIEhFQURJTkdTID0gW1xuICAgIGV4cG9ydHMuQkxPQ0tTLkhFQURJTkdfMSxcbiAgICBleHBvcnRzLkJMT0NLUy5IRUFESU5HXzIsXG4gICAgZXhwb3J0cy5CTE9DS1MuSEVBRElOR18zLFxuICAgIGV4cG9ydHMuQkxPQ0tTLkhFQURJTkdfNCxcbiAgICBleHBvcnRzLkJMT0NLUy5IRUFESU5HXzUsXG4gICAgZXhwb3J0cy5CTE9DS1MuSEVBRElOR182LFxuXTtcbi8qKlxuICogQXJyYXkgb2YgYWxsIGJsb2NrIHR5cGVzIHRoYXQgbWF5IGNvbnRhaW4gdGV4dCBhbmQgaW5saW5lIG5vZGVzLlxuICovXG52YXIgVEVYVF9DT05UQUlORVJTID0gX19zcHJlYWRBcnJheShbZXhwb3J0cy5CTE9DS1MuUEFSQUdSQVBIXSwgSEVBRElOR1MsIHRydWUpO1xuLyoqXG4gKiBOb2RlIHR5cGVzIGJlZm9yZSBgdGFibGVzYCByZWxlYXNlLlxuICovXG52YXIgVjFfTk9ERV9UWVBFUyA9IFtcbiAgICBleHBvcnRzLkJMT0NLUy5ET0NVTUVOVCxcbiAgICBleHBvcnRzLkJMT0NLUy5QQVJBR1JBUEgsXG4gICAgZXhwb3J0cy5CTE9DS1MuSEVBRElOR18xLFxuICAgIGV4cG9ydHMuQkxPQ0tTLkhFQURJTkdfMixcbiAgICBleHBvcnRzLkJMT0NLUy5IRUFESU5HXzMsXG4gICAgZXhwb3J0cy5CTE9DS1MuSEVBRElOR180LFxuICAgIGV4cG9ydHMuQkxPQ0tTLkhFQURJTkdfNSxcbiAgICBleHBvcnRzLkJMT0NLUy5IRUFESU5HXzYsXG4gICAgZXhwb3J0cy5CTE9DS1MuT0xfTElTVCxcbiAgICBleHBvcnRzLkJMT0NLUy5VTF9MSVNULFxuICAgIGV4cG9ydHMuQkxPQ0tTLkxJU1RfSVRFTSxcbiAgICBleHBvcnRzLkJMT0NLUy5IUixcbiAgICBleHBvcnRzLkJMT0NLUy5RVU9URSxcbiAgICBleHBvcnRzLkJMT0NLUy5FTUJFRERFRF9FTlRSWSxcbiAgICBleHBvcnRzLkJMT0NLUy5FTUJFRERFRF9BU1NFVCxcbiAgICBleHBvcnRzLklOTElORVMuSFlQRVJMSU5LLFxuICAgIGV4cG9ydHMuSU5MSU5FUy5FTlRSWV9IWVBFUkxJTkssXG4gICAgZXhwb3J0cy5JTkxJTkVTLkFTU0VUX0hZUEVSTElOSyxcbiAgICBleHBvcnRzLklOTElORVMuRU1CRURERURfRU5UUlksXG4gICAgJ3RleHQnLFxuXTtcbi8qKlxuICogTWFya3MgYmVmb3JlIGBzdXBlcnNjcmlwdGAgJiBgc3Vic2NyaXB0YCByZWxlYXNlLlxuICovXG52YXIgVjFfTUFSS1MgPSBbZXhwb3J0cy5NQVJLUy5CT0xELCBleHBvcnRzLk1BUktTLkNPREUsIGV4cG9ydHMuTUFSS1MuSVRBTElDLCBleHBvcnRzLk1BUktTLlVOREVSTElORV07XG5cbi8qKlxuICogQSByaWNoIHRleHQgZG9jdW1lbnQgY29uc2lkZXJlZCB0byBiZSBlbXB0eS5cbiAqIEFueSBvdGhlciBkb2N1bWVudCBzdHJ1Y3R1cmUgdGhhbiB0aGlzIGlzIG5vdCBjb25zaWRlcmVkIGVtcHR5LlxuICovXG52YXIgRU1QVFlfRE9DVU1FTlQgPSB7XG4gICAgbm9kZVR5cGU6IGV4cG9ydHMuQkxPQ0tTLkRPQ1VNRU5ULFxuICAgIGRhdGE6IHt9LFxuICAgIGNvbnRlbnQ6IFtcbiAgICAgICAge1xuICAgICAgICAgICAgbm9kZVR5cGU6IGV4cG9ydHMuQkxPQ0tTLlBBUkFHUkFQSCxcbiAgICAgICAgICAgIGRhdGE6IHt9LFxuICAgICAgICAgICAgY29udGVudDogW1xuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbm9kZVR5cGU6ICd0ZXh0JyxcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6ICcnLFxuICAgICAgICAgICAgICAgICAgICBtYXJrczogW10sXG4gICAgICAgICAgICAgICAgICAgIGRhdGE6IHt9LFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBdLFxuICAgICAgICB9LFxuICAgIF0sXG59O1xuXG4vKipcbiAqIFRpbnkgcmVwbGFjZW1lbnQgZm9yIE9iamVjdC52YWx1ZXMob2JqZWN0KS5pbmNsdWRlcyhrZXkpIHRvXG4gKiBhdm9pZCBpbmNsdWRpbmcgQ29yZUpTIHBvbHlmaWxsc1xuICovXG5mdW5jdGlvbiBoYXNWYWx1ZShvYmosIHZhbHVlKSB7XG4gICAgZm9yICh2YXIgX2kgPSAwLCBfYSA9IE9iamVjdC5rZXlzKG9iaik7IF9pIDwgX2EubGVuZ3RoOyBfaSsrKSB7XG4gICAgICAgIHZhciBrZXkgPSBfYVtfaV07XG4gICAgICAgIGlmICh2YWx1ZSA9PT0gb2JqW2tleV0pIHtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbn1cbi8qKlxuICogQ2hlY2tzIGlmIHRoZSBub2RlIGlzIGFuIGluc3RhbmNlIG9mIElubGluZS5cbiAqL1xuZnVuY3Rpb24gaXNJbmxpbmUobm9kZSkge1xuICAgIHJldHVybiBoYXNWYWx1ZShleHBvcnRzLklOTElORVMsIG5vZGUubm9kZVR5cGUpO1xufVxuLyoqXG4gKiBDaGVja3MgaWYgdGhlIG5vZGUgaXMgYW4gaW5zdGFuY2Ugb2YgQmxvY2suXG4gKi9cbmZ1bmN0aW9uIGlzQmxvY2sobm9kZSkge1xuICAgIHJldHVybiBoYXNWYWx1ZShleHBvcnRzLkJMT0NLUywgbm9kZS5ub2RlVHlwZSk7XG59XG4vKipcbiAqIENoZWNrcyBpZiB0aGUgbm9kZSBpcyBhbiBpbnN0YW5jZSBvZiBUZXh0LlxuICovXG5mdW5jdGlvbiBpc1RleHQobm9kZSkge1xuICAgIHJldHVybiBub2RlLm5vZGVUeXBlID09PSAndGV4dCc7XG59XG5cbnZhciBoZWxwZXJzID0gLyojX19QVVJFX18qL09iamVjdC5mcmVlemUoe1xuICBfX3Byb3RvX186IG51bGwsXG4gIGlzQmxvY2s6IGlzQmxvY2ssXG4gIGlzSW5saW5lOiBpc0lubGluZSxcbiAgaXNUZXh0OiBpc1RleHRcbn0pO1xuXG52YXIgdHlwZU1pc21hdGNoRXJyb3IgPSBmdW5jdGlvbiAoX2EpIHtcbiAgICB2YXIgcGF0aCA9IF9hLnBhdGgsIHByb3BlcnR5ID0gX2EucHJvcGVydHksIHR5cGVOYW1lID0gX2EudHlwZU5hbWUsIHZhbHVlID0gX2EudmFsdWU7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgZGV0YWlsczogXCJUaGUgdHlwZSBvZiBcXFwiXCIuY29uY2F0KHByb3BlcnR5LCBcIlxcXCIgaXMgaW5jb3JyZWN0LCBleHBlY3RlZCB0eXBlOiBcIikuY29uY2F0KHR5cGVOYW1lKSxcbiAgICAgICAgbmFtZTogJ3R5cGUnLFxuICAgICAgICBwYXRoOiBwYXRoLnRvQXJyYXkoKSxcbiAgICAgICAgdHlwZTogdHlwZU5hbWUsXG4gICAgICAgIHZhbHVlOiB2YWx1ZSxcbiAgICB9O1xufTtcbnZhciBtaW5TaXplRXJyb3IgPSBmdW5jdGlvbiAoX2EpIHtcbiAgICB2YXIgbWluID0gX2EubWluLCB2YWx1ZSA9IF9hLnZhbHVlLCBwYXRoID0gX2EucGF0aDtcbiAgICByZXR1cm4ge1xuICAgICAgICBuYW1lOiAnc2l6ZScsXG4gICAgICAgIG1pbjogbWluLFxuICAgICAgICBwYXRoOiBwYXRoLnRvQXJyYXkoKSxcbiAgICAgICAgZGV0YWlsczogXCJTaXplIG11c3QgYmUgYXQgbGVhc3QgXCIuY29uY2F0KG1pbiksXG4gICAgICAgIHZhbHVlOiB2YWx1ZSxcbiAgICB9O1xufTtcbnZhciBtYXhTaXplRXJyb3IgPSBmdW5jdGlvbiAoX2EpIHtcbiAgICB2YXIgbWF4ID0gX2EubWF4LCB2YWx1ZSA9IF9hLnZhbHVlLCBwYXRoID0gX2EucGF0aDtcbiAgICByZXR1cm4ge1xuICAgICAgICBuYW1lOiAnc2l6ZScsXG4gICAgICAgIG1heDogbWF4LFxuICAgICAgICBwYXRoOiBwYXRoLnRvQXJyYXkoKSxcbiAgICAgICAgZGV0YWlsczogXCJTaXplIG11c3QgYmUgYXQgbW9zdCBcIi5jb25jYXQobWF4KSxcbiAgICAgICAgdmFsdWU6IHZhbHVlLFxuICAgIH07XG59O1xudmFyIGVudW1FcnJvciA9IGZ1bmN0aW9uIChfYSkge1xuICAgIHZhciBleHBlY3RlZCA9IF9hLmV4cGVjdGVkLCB2YWx1ZSA9IF9hLnZhbHVlLCBwYXRoID0gX2EucGF0aDtcbiAgICByZXR1cm4ge1xuICAgICAgICBkZXRhaWxzOiBcIlZhbHVlIG11c3QgYmUgb25lIG9mIGV4cGVjdGVkIHZhbHVlc1wiLFxuICAgICAgICBuYW1lOiAnaW4nLFxuICAgICAgICBleHBlY3RlZDogX19zcHJlYWRBcnJheShbXSwgZXhwZWN0ZWQsIHRydWUpLnNvcnQoKSxcbiAgICAgICAgcGF0aDogcGF0aC50b0FycmF5KCksXG4gICAgICAgIHZhbHVlOiB2YWx1ZSxcbiAgICB9O1xufTtcbnZhciB1bmtub3duUHJvcGVydHlFcnJvciA9IGZ1bmN0aW9uIChfYSkge1xuICAgIHZhciBwcm9wZXJ0eSA9IF9hLnByb3BlcnR5LCBwYXRoID0gX2EucGF0aDtcbiAgICByZXR1cm4ge1xuICAgICAgICBkZXRhaWxzOiBcIlRoZSBwcm9wZXJ0eSBcXFwiXCIuY29uY2F0KHByb3BlcnR5LCBcIlxcXCIgaXMgbm90IGV4cGVjdGVkXCIpLFxuICAgICAgICBuYW1lOiAndW5leHBlY3RlZCcsXG4gICAgICAgIHBhdGg6IHBhdGgudG9BcnJheSgpLFxuICAgIH07XG59O1xudmFyIHJlcXVpcmVkUHJvcGVydHlFcnJvciA9IGZ1bmN0aW9uIChfYSkge1xuICAgIHZhciBwcm9wZXJ0eSA9IF9hLnByb3BlcnR5LCBwYXRoID0gX2EucGF0aDtcbiAgICByZXR1cm4ge1xuICAgICAgICBkZXRhaWxzOiBcIlRoZSBwcm9wZXJ0eSBcXFwiXCIuY29uY2F0KHByb3BlcnR5LCBcIlxcXCIgaXMgcmVxdWlyZWQgaGVyZVwiKSxcbiAgICAgICAgbmFtZTogJ3JlcXVpcmVkJyxcbiAgICAgICAgcGF0aDogcGF0aC50b0FycmF5KCksXG4gICAgfTtcbn07XG5cbnZhciBPYmplY3RBc3NlcnRpb24gPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gT2JqZWN0QXNzZXJ0aW9uKG9iaiwgcGF0aCkge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICB0aGlzLm9iaiA9IG9iajtcbiAgICAgICAgdGhpcy5wYXRoID0gcGF0aDtcbiAgICAgICAgdGhpcy5fZXJyb3JzID0gW107XG4gICAgICAgIHRoaXMuY2F0Y2ggPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgX2E7XG4gICAgICAgICAgICB2YXIgZXJyb3JzID0gW107XG4gICAgICAgICAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgYXJndW1lbnRzLmxlbmd0aDsgX2krKykge1xuICAgICAgICAgICAgICAgIGVycm9yc1tfaV0gPSBhcmd1bWVudHNbX2ldO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgKF9hID0gX3RoaXMuX2Vycm9ycykucHVzaC5hcHBseShfYSwgZXJyb3JzKTtcbiAgICAgICAgfTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIEFzc2VydHMgdGhlIGtleSBleGlzdHMgaW4gdGhlIG9iamVjdC4gWW91IHByb2JhYmx5IHNob3VsZG4ndCBjYWxsIHRoaXNcbiAgICAgICAgICogZnVuY3Rpb24gZGlyZWN0bHkuIEluc3RlYWQsIHVzZSBgJC5vYmplY3RgLCBgJC5udW1iZXJgLCBgJC5zdHJpbmdgLCBldGMuXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLmV4aXN0cyA9IGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgICAgICAgIGlmIChrZXkgaW4gX3RoaXMub2JqKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBfdGhpcy5jYXRjaChyZXF1aXJlZFByb3BlcnR5RXJyb3Ioe1xuICAgICAgICAgICAgICAgIHByb3BlcnR5OiBrZXksXG4gICAgICAgICAgICAgICAgcGF0aDogX3RoaXMucGF0aC5vZihrZXkpLFxuICAgICAgICAgICAgfSkpO1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9O1xuICAgICAgICAvKipcbiAgICAgICAgICogQXNzZXJ0cyB0aGUga2V5IGV4aXN0cyBpbiB0aGUgb2JqZWN0IGFuZCBpdHMgdmFsdWUgaXMgYSBwbGFpbiBvYmplY3QuIGlmXG4gICAgICAgICAqIG5vIGtleSBpcyBwcm92aWRlZCwgaXQgYXNzZXJ0cyB0aGUgb2JqZWN0IGl0c2VsZi5cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMub2JqZWN0ID0gZnVuY3Rpb24gKGtleSkge1xuICAgICAgICAgICAgdmFyIF9hO1xuICAgICAgICAgICAgdmFyIHZhbHVlID0ga2V5ID8gX3RoaXMub2JqW2tleV0gOiBfdGhpcy5vYmo7XG4gICAgICAgICAgICBpZiAoa2V5KSB7XG4gICAgICAgICAgICAgICAgaWYgKCFfdGhpcy5leGlzdHMoa2V5KSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGlzUGxhaW5PYmplY3QodmFsdWUpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB2YXIgcGF0aCA9IGtleSA/IF90aGlzLnBhdGgub2Yoa2V5KSA6IF90aGlzLnBhdGg7XG4gICAgICAgICAgICB2YXIgcHJvcGVydHkgPSAoX2EgPSBrZXkgIT09IG51bGwgJiYga2V5ICE9PSB2b2lkIDAgPyBrZXkgOiBfdGhpcy5wYXRoLmxhc3QoKSkgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogJ3ZhbHVlJztcbiAgICAgICAgICAgIF90aGlzLmNhdGNoKHR5cGVNaXNtYXRjaEVycm9yKHtcbiAgICAgICAgICAgICAgICB0eXBlTmFtZTogJ09iamVjdCcsXG4gICAgICAgICAgICAgICAgcHJvcGVydHk6IHByb3BlcnR5LFxuICAgICAgICAgICAgICAgIHBhdGg6IHBhdGgsXG4gICAgICAgICAgICAgICAgdmFsdWU6IHZhbHVlLFxuICAgICAgICAgICAgfSkpO1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9O1xuICAgICAgICAvKipcbiAgICAgICAgICogQXNzZXJ0cyB0aGUga2V5IGV4aXN0cyBpbiB0aGUgb2JqZWN0IGFuZCBpdHMgdmFsdWUgaXMgYSBzdHJpbmcuXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLnN0cmluZyA9IGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgICAgICAgIHZhciB2YWx1ZSA9IF90aGlzLm9ialtrZXldO1xuICAgICAgICAgICAgaWYgKGtleSAmJiAhX3RoaXMuZXhpc3RzKGtleSkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgX3RoaXMuY2F0Y2godHlwZU1pc21hdGNoRXJyb3Ioe1xuICAgICAgICAgICAgICAgIHR5cGVOYW1lOiAnU3RyaW5nJyxcbiAgICAgICAgICAgICAgICBwcm9wZXJ0eToga2V5LFxuICAgICAgICAgICAgICAgIHBhdGg6IF90aGlzLnBhdGgub2Yoa2V5KSxcbiAgICAgICAgICAgICAgICB2YWx1ZTogdmFsdWUsXG4gICAgICAgICAgICB9KSk7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH07XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBBc3NlcnRzIHRoZSBrZXkgZXhpc3RzIGluIHRoZSBvYmplY3QgYW5kIGl0cyB2YWx1ZSBpcyBhIG51bWJlci5cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMubnVtYmVyID0gZnVuY3Rpb24gKGtleSwgb3B0aW9uYWwpIHtcbiAgICAgICAgICAgIHZhciB2YWx1ZSA9IF90aGlzLm9ialtrZXldO1xuICAgICAgICAgICAgaWYgKG9wdGlvbmFsICYmICEoa2V5IGluIF90aGlzLm9iaikpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICghX3RoaXMuZXhpc3RzKGtleSkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAodHlwZW9mIHZhbHVlID09PSAnbnVtYmVyJyAmJiAhTnVtYmVyLmlzTmFOKHZhbHVlKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgX3RoaXMuY2F0Y2godHlwZU1pc21hdGNoRXJyb3Ioe1xuICAgICAgICAgICAgICAgIHR5cGVOYW1lOiAnTnVtYmVyJyxcbiAgICAgICAgICAgICAgICBwcm9wZXJ0eToga2V5LFxuICAgICAgICAgICAgICAgIHBhdGg6IF90aGlzLnBhdGgub2Yoa2V5KSxcbiAgICAgICAgICAgICAgICB2YWx1ZTogdmFsdWUsXG4gICAgICAgICAgICB9KSk7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH07XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBBc3NlcnRzIHRoZSBrZXkgZXhpc3RzIGluIHRoZSBvYmplY3QgYW5kIGl0cyB2YWx1ZSBpcyBhbiBhcnJheS4gWW91IGRvbid0XG4gICAgICAgICAqIG5lZWQgdG8gbWFudWFsbHkgY2FsbCB0aGlzIGZ1bmN0aW9uIGJlZm9yZSBgJC5lYWNoYCBvciBgJC5tYXhMZW5ndGhgLlxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5hcnJheSA9IGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgICAgICAgIHZhciB2YWx1ZSA9IF90aGlzLm9ialtrZXldO1xuICAgICAgICAgICAgaWYgKGtleSAmJiAhX3RoaXMuZXhpc3RzKGtleSkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF90aGlzLmNhdGNoKHR5cGVNaXNtYXRjaEVycm9yKHtcbiAgICAgICAgICAgICAgICB0eXBlTmFtZTogJ0FycmF5JyxcbiAgICAgICAgICAgICAgICBwcm9wZXJ0eToga2V5LFxuICAgICAgICAgICAgICAgIHBhdGg6IF90aGlzLnBhdGgub2Yoa2V5KSxcbiAgICAgICAgICAgICAgICB2YWx1ZTogdmFsdWUsXG4gICAgICAgICAgICB9KSk7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH07XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBBc3NlcnRzIHRoZSB2YWx1ZSBvZiB0aGUga2V5IGlzIG9uZSBvZiB0aGUgZXhwZWN0ZWQgdmFsdWVzLlxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5lbnVtID0gZnVuY3Rpb24gKGtleSwgZXhwZWN0ZWQpIHtcbiAgICAgICAgICAgIHZhciB2YWx1ZSA9IF90aGlzLm9ialtrZXldO1xuICAgICAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycgJiYgZXhwZWN0ZWQuaW5jbHVkZXModmFsdWUpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBfdGhpcy5jYXRjaChlbnVtRXJyb3Ioe1xuICAgICAgICAgICAgICAgIGV4cGVjdGVkOiBleHBlY3RlZCxcbiAgICAgICAgICAgICAgICB2YWx1ZTogdmFsdWUsXG4gICAgICAgICAgICAgICAgcGF0aDogX3RoaXMucGF0aC5vZihrZXkpLFxuICAgICAgICAgICAgfSkpO1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9O1xuICAgICAgICAvKipcbiAgICAgICAgICogQXNzZXJ0cyB0aGUgYXJyYXkgdmFsdWUgb2YgdGhlIG9iamVjdCBrZXkgaXMgZW1wdHkuIElmIHRoZSB2YWx1ZSBpc24ndCBhblxuICAgICAgICAgKiBhcnJheSwgdGhlIGZ1bmN0aW9uIGNhcHR1cmVzIGEgdHlwZSBlcnJvciBhbmQgcmV0dXJucyBmYWxzZS5cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuZW1wdHkgPSBmdW5jdGlvbiAoa2V5KSB7XG4gICAgICAgICAgICBpZiAoIV90aGlzLmFycmF5KGtleSkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB2YXIgdmFsdWUgPSBfdGhpcy5vYmpba2V5XTtcbiAgICAgICAgICAgIGlmICh2YWx1ZS5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF90aGlzLmNhdGNoKG1heFNpemVFcnJvcih7XG4gICAgICAgICAgICAgICAgbWF4OiAwLFxuICAgICAgICAgICAgICAgIHZhbHVlOiB2YWx1ZSxcbiAgICAgICAgICAgICAgICBwYXRoOiBfdGhpcy5wYXRoLm9mKGtleSksXG4gICAgICAgICAgICB9KSk7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH07XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBBc3NlcnRzIHRoZSBsZW5ndGggb2YgdGhlIHZhbHVlIG9mIHRoZSBvYmplY3Qga2V5IGlzIGF0IGxlYXN0IGBtaW5gLiBJZiB0aGVcbiAgICAgICAgICogdmFsdWUgaXNuJ3QgYW4gYXJyYXksIHRoZSBmdW5jdGlvbiBjYXB0dXJlcyBhIHR5cGUgZXJyb3IgYW5kIHJldHVybnMgZmFsc2UuXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLm1pbkxlbmd0aCA9IGZ1bmN0aW9uIChrZXksIG1pbikge1xuICAgICAgICAgICAgaWYgKCFfdGhpcy5hcnJheShrZXkpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdmFyIHZhbHVlID0gX3RoaXMub2JqW2tleV07XG4gICAgICAgICAgICBpZiAodmFsdWUubGVuZ3RoID49IG1pbikge1xuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgX3RoaXMuY2F0Y2gobWluU2l6ZUVycm9yKHtcbiAgICAgICAgICAgICAgICBtaW46IG1pbixcbiAgICAgICAgICAgICAgICB2YWx1ZTogdmFsdWUsXG4gICAgICAgICAgICAgICAgcGF0aDogX3RoaXMucGF0aC5vZihrZXkpLFxuICAgICAgICAgICAgfSkpO1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9O1xuICAgICAgICAvKipcbiAgICAgICAgICogQXNzZXJ0cyB0aGUgb2JqZWN0IGhhcyBubyBhZGRpdGlvbmFsIHByb3BlcnRpZXMgb3RoZXIgdGhhbiB0aGUgb25lc1xuICAgICAgICAgKiBzcGVjaWZpZWRcbiAgICAgICAgICovXG4gICAgICAgIHRoaXMubm9BZGRpdGlvbmFsUHJvcGVydGllcyA9IGZ1bmN0aW9uIChwcm9wZXJ0aWVzKSB7XG4gICAgICAgICAgICB2YXIgdW5rbm93bnMgPSBPYmplY3Qua2V5cyhfdGhpcy5vYmopXG4gICAgICAgICAgICAgICAgLnNvcnQoKVxuICAgICAgICAgICAgICAgIC5maWx0ZXIoZnVuY3Rpb24gKGtleSkgeyByZXR1cm4gIXByb3BlcnRpZXMuaW5jbHVkZXMoa2V5KTsgfSk7XG4gICAgICAgICAgICB1bmtub3ducy5mb3JFYWNoKGZ1bmN0aW9uIChwcm9wZXJ0eSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBfdGhpcy5jYXRjaCh1bmtub3duUHJvcGVydHlFcnJvcih7XG4gICAgICAgICAgICAgICAgICAgIHByb3BlcnR5OiBwcm9wZXJ0eSxcbiAgICAgICAgICAgICAgICAgICAgcGF0aDogX3RoaXMucGF0aC5vZihwcm9wZXJ0eSksXG4gICAgICAgICAgICAgICAgfSkpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByZXR1cm4gdW5rbm93bnMubGVuZ3RoID09PSAwO1xuICAgICAgICB9O1xuICAgICAgICAvKipcbiAgICAgICAgICogSXRlcmF0ZXMgb3ZlciB0aGUgdmFsdWUgb2YgdGhlIGtleSBhbmQgYXNzZXJ0IGVhY2ggaXRlbS4gSWYgdGhlIHZhbHVlIGlzbid0XG4gICAgICAgICAqIGFuIGFycmF5LCB0aGUgZnVuY3Rpb24gY2FwdHVyZXMgYSB0eXBlIGVycm9yIGFuZCBzYWZlbHkgZXhpdHMuXG4gICAgICAgICAqXG4gICAgICAgICAqIFRvIG1haW50YWluIGNvbXBhdGliaWxpdHkgd2l0aCBwcmV2aW91cyBpbXBsZW1lbnRhdGlvbiwgd2Ugc3RvcCBlYXJseSBpZiB3ZVxuICAgICAgICAgKiBmaW5kIGFueSBlcnJvcnMuXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLmVhY2ggPSBmdW5jdGlvbiAoa2V5LCBhc3NlcnQpIHtcbiAgICAgICAgICAgIGlmICghX3RoaXMuYXJyYXkoa2V5KSkge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHZhciB2YWx1ZSA9IF90aGlzLm9ialtrZXldO1xuICAgICAgICAgICAgdmFyIGZvdW5kRXJyb3JzID0gZmFsc2U7XG4gICAgICAgICAgICB2YWx1ZS5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtLCBpbmRleCkge1xuICAgICAgICAgICAgICAgIGlmIChmb3VuZEVycm9ycykge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHZhciBlcnJvcnMgPSBhc3NlcnQoaXRlbSwgX3RoaXMucGF0aC5vZihrZXkpLm9mKGluZGV4KSk7XG4gICAgICAgICAgICAgICAgaWYgKGVycm9ycy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAgICAgICAgIGZvdW5kRXJyb3JzID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgX3RoaXMuY2F0Y2guYXBwbHkoX3RoaXMsIGVycm9ycyk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfTtcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KE9iamVjdEFzc2VydGlvbi5wcm90b3R5cGUsIFwiZXJyb3JzXCIsIHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICAgICAgdmFyIHNlcmlhbGl6ZUVycm9yID0gZnVuY3Rpb24gKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgICAgICAgICAgICAgZGV0YWlsczogZXJyb3IuZGV0YWlscyxcbiAgICAgICAgICAgICAgICAgICAgcGF0aDogZXJyb3IucGF0aCxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fZXJyb3JzLmZpbHRlcihmdW5jdGlvbiAoZXJyb3IsIGluZGV4KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzLl9lcnJvcnMuZmluZEluZGV4KGZ1bmN0aW9uIChzdGVwKSB7IHJldHVybiBzZXJpYWxpemVFcnJvcihlcnJvcikgPT09IHNlcmlhbGl6ZUVycm9yKHN0ZXApOyB9KSA9PT0gaW5kZXg7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSxcbiAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xuICAgIHJldHVybiBPYmplY3RBc3NlcnRpb247XG59KCkpO1xuXG52YXIgVk9JRF9DT05URU5UID0gW107XG52YXIgTm9kZUFzc2VydGlvbiA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBOb2RlQXNzZXJ0aW9uKGNvbnRlbnRSdWxlLCB2YWxpZGF0ZURhdGEpIHtcbiAgICAgICAgdGhpcy5jb250ZW50UnVsZSA9IGNvbnRlbnRSdWxlO1xuICAgICAgICB0aGlzLnZhbGlkYXRlRGF0YSA9IHZhbGlkYXRlRGF0YTtcbiAgICB9XG4gICAgTm9kZUFzc2VydGlvbi5wcm90b3R5cGUuYXNzZXJ0ID0gZnVuY3Rpb24gKG5vZGUsIHBhdGgpIHtcbiAgICAgICAgdmFyIF9hLCBfYjtcbiAgICAgICAgdmFyICQgPSBuZXcgT2JqZWN0QXNzZXJ0aW9uKG5vZGUsIHBhdGgpO1xuICAgICAgICBpZiAoISQub2JqZWN0KCkpIHtcbiAgICAgICAgICAgIHJldHVybiAkLmVycm9ycztcbiAgICAgICAgfVxuICAgICAgICAkLm5vQWRkaXRpb25hbFByb3BlcnRpZXMoWydub2RlVHlwZScsICdkYXRhJywgJ2NvbnRlbnQnXSk7XG4gICAgICAgIHZhciBfYyA9IEFycmF5LmlzQXJyYXkodGhpcy5jb250ZW50UnVsZSlcbiAgICAgICAgICAgID8ge1xuICAgICAgICAgICAgICAgIG5vZGVUeXBlczogdGhpcy5jb250ZW50UnVsZSxcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIDogdGhpcy5jb250ZW50UnVsZShub2RlLCBwYXRoKSwgbm9kZVR5cGVzID0gX2Mubm9kZVR5cGVzLCBfZCA9IF9jLm1pbiwgbWluID0gX2QgPT09IHZvaWQgMCA/IDAgOiBfZDtcbiAgICAgICAgaWYgKG5vZGVUeXBlcy5sZW5ndGggPT09IDAgJiYgbWluID4gMCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBjb250ZW50IHJ1bGUuIENhbm5vdCBoYXZlIGVuZm9yY2UgYSAnbWluJyBvZiBcIi5jb25jYXQobWluLCBcIiB3aXRoIG5vIG5vZGVUeXBlc1wiKSk7XG4gICAgICAgIH1cbiAgICAgICAgJC5taW5MZW5ndGgoJ2NvbnRlbnQnLCBtaW4pO1xuICAgICAgICAvLyBJcyB2b2lkXG4gICAgICAgIGlmIChub2RlVHlwZXMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICAkLmVtcHR5KCdjb250ZW50Jyk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gRW5zdXJlIGNvbnRlbnQgbm9kZXMgaGF2ZSB2YWxpZCBub2RlVHlwZXMgd2l0aG91dCB2YWxpZGF0aW5nIHRoZSBmdWxsXG4gICAgICAgIC8vIHNoYXBlIHdoaWNoIGlzIHNvbWV0aGluZyB0aGF0J3Mgb25seSBkb25lIGxhdGVyIGlmIHRoZSBjdXJyZW50IG5vZGUgaXNcbiAgICAgICAgLy8gdmFsaWQuXG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgJC5lYWNoKCdjb250ZW50JywgZnVuY3Rpb24gKGl0ZW0sIHBhdGgpIHtcbiAgICAgICAgICAgICAgICB2YXIgaXRlbSQgPSBuZXcgT2JqZWN0QXNzZXJ0aW9uKGl0ZW0sIHBhdGgpO1xuICAgICAgICAgICAgICAgIGlmICghaXRlbSQub2JqZWN0KCkpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGl0ZW0kLmVycm9ycztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaXRlbSQuZW51bSgnbm9kZVR5cGUnLCBub2RlVHlwZXMpO1xuICAgICAgICAgICAgICAgIHJldHVybiBpdGVtJC5lcnJvcnM7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoJC5vYmplY3QoJ2RhdGEnKSkge1xuICAgICAgICAgICAgdmFyIGRhdGFFcnJvcnMgPSAoX2IgPSAoX2EgPSB0aGlzLnZhbGlkYXRlRGF0YSkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmNhbGwodGhpcywgbm9kZS5kYXRhLCBwYXRoLm9mKCdkYXRhJykpKSAhPT0gbnVsbCAmJiBfYiAhPT0gdm9pZCAwID8gX2IgOiBbXTtcbiAgICAgICAgICAgICQuY2F0Y2guYXBwbHkoJCwgZGF0YUVycm9ycyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuICQuZXJyb3JzO1xuICAgIH07XG4gICAgcmV0dXJuIE5vZGVBc3NlcnRpb247XG59KCkpO1xudmFyIEVudGl0eUxpbmtBc3NlcnRpb24gPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKEVudGl0eUxpbmtBc3NlcnRpb24sIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gRW50aXR5TGlua0Fzc2VydGlvbihsaW5rVHlwZSwgY29udGVudE5vZGVUeXBlcykge1xuICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzLCBjb250ZW50Tm9kZVR5cGVzLCBmdW5jdGlvbiAoZGF0YSwgcGF0aCkgeyByZXR1cm4gX3RoaXMuYXNzZXJ0TGluayhkYXRhLCBwYXRoKTsgfSkgfHwgdGhpcztcbiAgICAgICAgX3RoaXMubGlua1R5cGUgPSBsaW5rVHlwZTtcbiAgICAgICAgX3RoaXMuYXNzZXJ0TGluayA9IGZ1bmN0aW9uIChkYXRhLCBwYXRoKSB7XG4gICAgICAgICAgICB2YXIgJCA9IG5ldyBPYmplY3RBc3NlcnRpb24oZGF0YSwgcGF0aCk7XG4gICAgICAgICAgICBpZiAoJC5vYmplY3QoJ3RhcmdldCcpKSB7XG4gICAgICAgICAgICAgICAgdmFyIHN5cyQgPSBuZXcgT2JqZWN0QXNzZXJ0aW9uKGRhdGEudGFyZ2V0LnN5cywgcGF0aC5vZigndGFyZ2V0Jykub2YoJ3N5cycpKTtcbiAgICAgICAgICAgICAgICBpZiAoc3lzJC5vYmplY3QoKSkge1xuICAgICAgICAgICAgICAgICAgICBzeXMkLmVudW0oJ3R5cGUnLCBbX3RoaXMudHlwZV0pO1xuICAgICAgICAgICAgICAgICAgICBzeXMkLmVudW0oJ2xpbmtUeXBlJywgW190aGlzLmxpbmtUeXBlXSk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChfdGhpcy50eXBlID09PSAnTGluaycpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHN5cyQuc3RyaW5nKCdpZCcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgc3lzJC5ub0FkZGl0aW9uYWxQcm9wZXJ0aWVzKFsndHlwZScsICdsaW5rVHlwZScsICdpZCddKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIGlmIChfdGhpcy50eXBlID09PSAnUmVzb3VyY2VMaW5rJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgc3lzJC5zdHJpbmcoJ3VybicpO1xuICAgICAgICAgICAgICAgICAgICAgICAgc3lzJC5ub0FkZGl0aW9uYWxQcm9wZXJ0aWVzKFsndHlwZScsICdsaW5rVHlwZScsICd1cm4nXSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgJC5jYXRjaC5hcHBseSgkLCBzeXMkLmVycm9ycyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAkLm5vQWRkaXRpb25hbFByb3BlcnRpZXMoWyd0YXJnZXQnXSk7XG4gICAgICAgICAgICByZXR1cm4gJC5lcnJvcnM7XG4gICAgICAgIH07XG4gICAgICAgIF90aGlzLnR5cGUgPSBfdGhpcy5saW5rVHlwZS5zdGFydHNXaXRoKCdDb250ZW50ZnVsOicpID8gJ1Jlc291cmNlTGluaycgOiAnTGluayc7XG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG4gICAgcmV0dXJuIEVudGl0eUxpbmtBc3NlcnRpb247XG59KE5vZGVBc3NlcnRpb24pKTtcbnZhciBIeXBlckxpbmtBc3NlcnRpb24gPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKEh5cGVyTGlua0Fzc2VydGlvbiwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBIeXBlckxpbmtBc3NlcnRpb24oKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMsIFsndGV4dCddLCBmdW5jdGlvbiAoZGF0YSwgcGF0aCkgeyByZXR1cm4gX3RoaXMuYXNzZXJ0TGluayhkYXRhLCBwYXRoKTsgfSkgfHwgdGhpcztcbiAgICAgICAgX3RoaXMuYXNzZXJ0TGluayA9IGZ1bmN0aW9uIChkYXRhLCBwYXRoKSB7XG4gICAgICAgICAgICB2YXIgJCA9IG5ldyBPYmplY3RBc3NlcnRpb24oZGF0YSwgcGF0aCk7XG4gICAgICAgICAgICAkLnN0cmluZygndXJpJyk7XG4gICAgICAgICAgICAkLm5vQWRkaXRpb25hbFByb3BlcnRpZXMoWyd1cmknXSk7XG4gICAgICAgICAgICByZXR1cm4gJC5lcnJvcnM7XG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG4gICAgcmV0dXJuIEh5cGVyTGlua0Fzc2VydGlvbjtcbn0oTm9kZUFzc2VydGlvbikpO1xudmFyIGFzc2VydCA9IGZ1bmN0aW9uIChjb250ZW50UnVsZSwgdmFsaWRhdGVEYXRhKSB7XG4gICAgcmV0dXJuIG5ldyBOb2RlQXNzZXJ0aW9uKGNvbnRlbnRSdWxlLCB2YWxpZGF0ZURhdGEpO1xufTtcbnZhciBhc3NlcnRMaW5rID0gZnVuY3Rpb24gKGxpbmtUeXBlLCBjb250ZW50UnVsZSkge1xuICAgIHJldHVybiBuZXcgRW50aXR5TGlua0Fzc2VydGlvbihsaW5rVHlwZSwgY29udGVudFJ1bGUpO1xufTtcblxudmFyIFBhdGggPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gUGF0aChwYXRoKSB7XG4gICAgICAgIGlmIChwYXRoID09PSB2b2lkIDApIHsgcGF0aCA9IFtdOyB9XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIHRoaXMucGF0aCA9IHBhdGg7XG4gICAgICAgIHRoaXMub2YgPSBmdW5jdGlvbiAoZWxlbWVudCkge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBQYXRoKF9fc3ByZWFkQXJyYXkoX19zcHJlYWRBcnJheShbXSwgX3RoaXMucGF0aCwgdHJ1ZSksIFtlbGVtZW50XSwgZmFsc2UpKTtcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5pc1Jvb3QgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gX3RoaXMucGF0aC5sZW5ndGggPT09IDA7XG4gICAgICAgIH07XG4gICAgICAgIHRoaXMubGFzdCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiBfdGhpcy5wYXRoW190aGlzLnBhdGgubGVuZ3RoIC0gMV07XG4gICAgICAgIH07XG4gICAgICAgIHRoaXMudG9BcnJheSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiBfdGhpcy5wYXRoO1xuICAgICAgICB9O1xuICAgIH1cbiAgICByZXR1cm4gUGF0aDtcbn0oKSk7XG5cbmZ1bmN0aW9uIGFzc2VydFRleHQodGV4dCwgcGF0aCkge1xuICAgIHZhciAkID0gbmV3IE9iamVjdEFzc2VydGlvbih0ZXh0LCBwYXRoKTtcbiAgICBpZiAoISQub2JqZWN0KCkpIHtcbiAgICAgICAgcmV0dXJuICQuZXJyb3JzO1xuICAgIH1cbiAgICAkLm5vQWRkaXRpb25hbFByb3BlcnRpZXMoWydub2RlVHlwZScsICdkYXRhJywgJ3ZhbHVlJywgJ21hcmtzJ10pO1xuICAgICQub2JqZWN0KCdkYXRhJyk7XG4gICAgJC5lYWNoKCdtYXJrcycsIGZ1bmN0aW9uIChtYXJrLCBwYXRoKSB7XG4gICAgICAgIHZhciBtYXJrJCA9IG5ldyBPYmplY3RBc3NlcnRpb24obWFyaywgcGF0aCk7XG4gICAgICAgIGlmICghbWFyayQub2JqZWN0KCkpIHtcbiAgICAgICAgICAgIHJldHVybiBtYXJrJC5lcnJvcnM7XG4gICAgICAgIH1cbiAgICAgICAgLy8gRm9yIGhpc3RvcmljYWwgcmVhc29ucywgd2UgZG9uJ3QgZXhwbGljaXRseSBjaGVjayBmb3Igc3VwcG9ydGVkIG1hcmtzXG4gICAgICAgIC8vIGUuZy4gYm9sZCwgaXRhbGljIC4uZXRjLiBUaGlzIG1ha2VzIGl0IHBvc3NpYmxlIGZvciBhIGN1c3RvbWVyIHRvIGFkZFxuICAgICAgICAvLyBjdXN0b20gbWFya3NcbiAgICAgICAgbWFyayQuc3RyaW5nKCd0eXBlJyk7XG4gICAgICAgIHJldHVybiBtYXJrJC5lcnJvcnM7XG4gICAgfSk7XG4gICAgJC5zdHJpbmcoJ3ZhbHVlJyk7XG4gICAgcmV0dXJuICQuZXJyb3JzO1xufVxuXG52YXIgX2E7XG52YXIgYXNzZXJ0SW5saW5lT3JUZXh0ID0gYXNzZXJ0KF9fc3ByZWFkQXJyYXkoX19zcHJlYWRBcnJheShbXSwgT2JqZWN0LnZhbHVlcyhleHBvcnRzLklOTElORVMpLCB0cnVlKSwgWyd0ZXh0J10sIGZhbHNlKS5zb3J0KCkpO1xudmFyIGFzc2VydExpc3QgPSBhc3NlcnQoW2V4cG9ydHMuQkxPQ0tTLkxJU1RfSVRFTV0pO1xudmFyIGFzc2VydFZvaWRFbnRyeUxpbmsgPSBhc3NlcnRMaW5rKCdFbnRyeScsIFZPSURfQ09OVEVOVCk7XG52YXIgYXNzZXJ0VGFibGVDZWxsID0gYXNzZXJ0KGZ1bmN0aW9uICgpIHsgcmV0dXJuICh7XG4gICAgbm9kZVR5cGVzOiBbZXhwb3J0cy5CTE9DS1MuUEFSQUdSQVBIXSxcbiAgICBtaW46IDEsXG59KTsgfSwgZnVuY3Rpb24gKGRhdGEsIHBhdGgpIHtcbiAgICB2YXIgJCA9IG5ldyBPYmplY3RBc3NlcnRpb24oZGF0YSwgcGF0aCk7XG4gICAgJC5ub0FkZGl0aW9uYWxQcm9wZXJ0aWVzKFsnY29sc3BhbicsICdyb3dzcGFuJ10pO1xuICAgICQubnVtYmVyKCdjb2xzcGFuJywgdHJ1ZSk7XG4gICAgJC5udW1iZXIoJ3Jvd3NwYW4nLCB0cnVlKTtcbiAgICByZXR1cm4gJC5lcnJvcnM7XG59KTtcbnZhciBub2RlVmFsaWRhdG9yID0gKF9hID0ge30sXG4gICAgX2FbZXhwb3J0cy5CTE9DS1MuRE9DVU1FTlRdID0gYXNzZXJ0KFRPUF9MRVZFTF9CTE9DS1MpLFxuICAgIF9hW2V4cG9ydHMuQkxPQ0tTLlBBUkFHUkFQSF0gPSBhc3NlcnRJbmxpbmVPclRleHQsXG4gICAgX2FbZXhwb3J0cy5CTE9DS1MuSEVBRElOR18xXSA9IGFzc2VydElubGluZU9yVGV4dCxcbiAgICBfYVtleHBvcnRzLkJMT0NLUy5IRUFESU5HXzJdID0gYXNzZXJ0SW5saW5lT3JUZXh0LFxuICAgIF9hW2V4cG9ydHMuQkxPQ0tTLkhFQURJTkdfM10gPSBhc3NlcnRJbmxpbmVPclRleHQsXG4gICAgX2FbZXhwb3J0cy5CTE9DS1MuSEVBRElOR180XSA9IGFzc2VydElubGluZU9yVGV4dCxcbiAgICBfYVtleHBvcnRzLkJMT0NLUy5IRUFESU5HXzVdID0gYXNzZXJ0SW5saW5lT3JUZXh0LFxuICAgIF9hW2V4cG9ydHMuQkxPQ0tTLkhFQURJTkdfNl0gPSBhc3NlcnRJbmxpbmVPclRleHQsXG4gICAgX2FbZXhwb3J0cy5CTE9DS1MuUVVPVEVdID0gYXNzZXJ0KENPTlRBSU5FUlNbZXhwb3J0cy5CTE9DS1MuUVVPVEVdKSxcbiAgICBfYVtleHBvcnRzLkJMT0NLUy5FTUJFRERFRF9FTlRSWV0gPSBhc3NlcnRWb2lkRW50cnlMaW5rLFxuICAgIF9hW2V4cG9ydHMuQkxPQ0tTLkVNQkVEREVEX0FTU0VUXSA9IGFzc2VydExpbmsoJ0Fzc2V0JywgVk9JRF9DT05URU5UKSxcbiAgICBfYVtleHBvcnRzLkJMT0NLUy5FTUJFRERFRF9SRVNPVVJDRV0gPSBhc3NlcnRMaW5rKCdDb250ZW50ZnVsOkVudHJ5JywgVk9JRF9DT05URU5UKSxcbiAgICBfYVtleHBvcnRzLkJMT0NLUy5IUl0gPSBhc3NlcnQoVk9JRF9DT05URU5UKSxcbiAgICBfYVtleHBvcnRzLkJMT0NLUy5PTF9MSVNUXSA9IGFzc2VydExpc3QsXG4gICAgX2FbZXhwb3J0cy5CTE9DS1MuVUxfTElTVF0gPSBhc3NlcnRMaXN0LFxuICAgIF9hW2V4cG9ydHMuQkxPQ0tTLkxJU1RfSVRFTV0gPSBhc3NlcnQoX19zcHJlYWRBcnJheShbXSwgTElTVF9JVEVNX0JMT0NLUywgdHJ1ZSkuc29ydCgpKSxcbiAgICBfYVtleHBvcnRzLkJMT0NLUy5UQUJMRV0gPSBhc3NlcnQoZnVuY3Rpb24gKCkgeyByZXR1cm4gKHtcbiAgICAgICAgbm9kZVR5cGVzOiBbZXhwb3J0cy5CTE9DS1MuVEFCTEVfUk9XXSxcbiAgICAgICAgbWluOiAxLFxuICAgIH0pOyB9KSxcbiAgICBfYVtleHBvcnRzLkJMT0NLUy5UQUJMRV9ST1ddID0gYXNzZXJ0KGZ1bmN0aW9uICgpIHsgcmV0dXJuICh7XG4gICAgICAgIG5vZGVUeXBlczogW2V4cG9ydHMuQkxPQ0tTLlRBQkxFX0NFTEwsIGV4cG9ydHMuQkxPQ0tTLlRBQkxFX0hFQURFUl9DRUxMXSxcbiAgICAgICAgbWluOiAxLFxuICAgIH0pOyB9KSxcbiAgICBfYVtleHBvcnRzLkJMT0NLUy5UQUJMRV9DRUxMXSA9IGFzc2VydFRhYmxlQ2VsbCxcbiAgICBfYVtleHBvcnRzLkJMT0NLUy5UQUJMRV9IRUFERVJfQ0VMTF0gPSBhc3NlcnRUYWJsZUNlbGwsXG4gICAgX2FbZXhwb3J0cy5JTkxJTkVTLkhZUEVSTElOS10gPSBuZXcgSHlwZXJMaW5rQXNzZXJ0aW9uKCksXG4gICAgX2FbZXhwb3J0cy5JTkxJTkVTLkVNQkVEREVEX0VOVFJZXSA9IGFzc2VydFZvaWRFbnRyeUxpbmssXG4gICAgX2FbZXhwb3J0cy5JTkxJTkVTLkVNQkVEREVEX1JFU09VUkNFXSA9IGFzc2VydExpbmsoJ0NvbnRlbnRmdWw6RW50cnknLCBWT0lEX0NPTlRFTlQpLFxuICAgIF9hW2V4cG9ydHMuSU5MSU5FUy5FTlRSWV9IWVBFUkxJTktdID0gYXNzZXJ0TGluaygnRW50cnknLCBbJ3RleHQnXSksXG4gICAgX2FbZXhwb3J0cy5JTkxJTkVTLkFTU0VUX0hZUEVSTElOS10gPSBhc3NlcnRMaW5rKCdBc3NldCcsIFsndGV4dCddKSxcbiAgICBfYVtleHBvcnRzLklOTElORVMuUkVTT1VSQ0VfSFlQRVJMSU5LXSA9IGFzc2VydExpbmsoJ0NvbnRlbnRmdWw6RW50cnknLCBbJ3RleHQnXSksXG4gICAgX2EpO1xuZnVuY3Rpb24gdmFsaWRhdGVOb2RlKG5vZGUsIHBhdGgpIHtcbiAgICBpZiAobm9kZS5ub2RlVHlwZSA9PT0gJ3RleHQnKSB7XG4gICAgICAgIHJldHVybiBhc3NlcnRUZXh0KG5vZGUsIHBhdGgpO1xuICAgIH1cbiAgICB2YXIgZXJyb3JzID0gbm9kZVZhbGlkYXRvcltub2RlLm5vZGVUeXBlXS5hc3NlcnQobm9kZSwgcGF0aCk7XG4gICAgaWYgKGVycm9ycy5sZW5ndGggPiAwKSB7XG4gICAgICAgIHJldHVybiBlcnJvcnM7XG4gICAgfVxuICAgIHZhciAkID0gbmV3IE9iamVjdEFzc2VydGlvbihub2RlLCBwYXRoKTtcbiAgICAkLmVhY2goJ2NvbnRlbnQnLCBmdW5jdGlvbiAoaXRlbSwgcGF0aCkge1xuICAgICAgICAvLyBXZSBhbHJlYWR5IGtub3cgdGhvc2UgYXJlIHZhbGlkIG5vZGVzIHRoYW5rcyB0byB0aGUgYXNzZXJ0aW9uIGRvbmUgaW5cbiAgICAgICAgLy8gdGhlIE5vZGVBc3NlcnRpb24gY2xhc3NcbiAgICAgICAgcmV0dXJuIHZhbGlkYXRlTm9kZShpdGVtLCBwYXRoKTtcbiAgICB9KTtcbiAgICByZXR1cm4gJC5lcnJvcnM7XG59XG52YXIgdmFsaWRhdGVSaWNoVGV4dERvY3VtZW50ID0gZnVuY3Rpb24gKGRvY3VtZW50KSB7XG4gICAgdmFyIHBhdGggPSBuZXcgUGF0aCgpO1xuICAgIHZhciAkID0gbmV3IE9iamVjdEFzc2VydGlvbihkb2N1bWVudCwgcGF0aCk7XG4gICAgaWYgKCQub2JqZWN0KCkpIHtcbiAgICAgICAgJC5lbnVtKCdub2RlVHlwZScsIFtleHBvcnRzLkJMT0NLUy5ET0NVTUVOVF0pO1xuICAgIH1cbiAgICBpZiAoJC5lcnJvcnMubGVuZ3RoID4gMCkge1xuICAgICAgICByZXR1cm4gJC5lcnJvcnM7XG4gICAgfVxuICAgIHJldHVybiB2YWxpZGF0ZU5vZGUoZG9jdW1lbnQsIHBhdGgpO1xufTtcblxuZXhwb3J0cy5DT05UQUlORVJTID0gQ09OVEFJTkVSUztcbmV4cG9ydHMuRU1QVFlfRE9DVU1FTlQgPSBFTVBUWV9ET0NVTUVOVDtcbmV4cG9ydHMuSEVBRElOR1MgPSBIRUFESU5HUztcbmV4cG9ydHMuTElTVF9JVEVNX0JMT0NLUyA9IExJU1RfSVRFTV9CTE9DS1M7XG5leHBvcnRzLlRBQkxFX0JMT0NLUyA9IFRBQkxFX0JMT0NLUztcbmV4cG9ydHMuVEVYVF9DT05UQUlORVJTID0gVEVYVF9DT05UQUlORVJTO1xuZXhwb3J0cy5UT1BfTEVWRUxfQkxPQ0tTID0gVE9QX0xFVkVMX0JMT0NLUztcbmV4cG9ydHMuVjFfTUFSS1MgPSBWMV9NQVJLUztcbmV4cG9ydHMuVjFfTk9ERV9UWVBFUyA9IFYxX05PREVfVFlQRVM7XG5leHBvcnRzLlZPSURfQkxPQ0tTID0gVk9JRF9CTE9DS1M7XG5leHBvcnRzLmhlbHBlcnMgPSBoZWxwZXJzO1xuZXhwb3J0cy52YWxpZGF0ZVJpY2hUZXh0RG9jdW1lbnQgPSB2YWxpZGF0ZVJpY2hUZXh0RG9jdW1lbnQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@contentful/rich-text-react-renderer/node_modules/@contentful/rich-text-types/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@contentful/rich-text-types/dist/blocks.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@contentful/rich-text-types/dist/blocks.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BLOCKS = void 0;\n/**\n * Map of all Contentful block types. Blocks contain inline or block nodes.\n */\nvar BLOCKS;\n(function (BLOCKS) {\n    BLOCKS[\"DOCUMENT\"] = \"document\";\n    BLOCKS[\"PARAGRAPH\"] = \"paragraph\";\n    BLOCKS[\"HEADING_1\"] = \"heading-1\";\n    BLOCKS[\"HEADING_2\"] = \"heading-2\";\n    BLOCKS[\"HEADING_3\"] = \"heading-3\";\n    BLOCKS[\"HEADING_4\"] = \"heading-4\";\n    BLOCKS[\"HEADING_5\"] = \"heading-5\";\n    BLOCKS[\"HEADING_6\"] = \"heading-6\";\n    BLOCKS[\"OL_LIST\"] = \"ordered-list\";\n    BLOCKS[\"UL_LIST\"] = \"unordered-list\";\n    BLOCKS[\"LIST_ITEM\"] = \"list-item\";\n    BLOCKS[\"HR\"] = \"hr\";\n    BLOCKS[\"QUOTE\"] = \"blockquote\";\n    BLOCKS[\"EMBEDDED_ENTRY\"] = \"embedded-entry-block\";\n    BLOCKS[\"EMBEDDED_ASSET\"] = \"embedded-asset-block\";\n    BLOCKS[\"EMBEDDED_RESOURCE\"] = \"embedded-resource-block\";\n    BLOCKS[\"TABLE\"] = \"table\";\n    BLOCKS[\"TABLE_ROW\"] = \"table-row\";\n    BLOCKS[\"TABLE_CELL\"] = \"table-cell\";\n    BLOCKS[\"TABLE_HEADER_CELL\"] = \"table-header-cell\";\n})(BLOCKS || (exports.BLOCKS = BLOCKS = {}));\n//# sourceMappingURL=blocks.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvbnRlbnRmdWwvcmljaC10ZXh0LXR5cGVzL2Rpc3QvYmxvY2tzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsYUFBYSxjQUFjLGNBQWM7QUFDMUMiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVVNFUlxcRGVza3RvcFxcTXkgUHJvamVjdHNcXFJlYWN0IFByb2plY3RzXFxNeVBvcnRmb2xpb1xcbm9kZV9tb2R1bGVzXFxAY29udGVudGZ1bFxccmljaC10ZXh0LXR5cGVzXFxkaXN0XFxibG9ja3MuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkJMT0NLUyA9IHZvaWQgMDtcbi8qKlxuICogTWFwIG9mIGFsbCBDb250ZW50ZnVsIGJsb2NrIHR5cGVzLiBCbG9ja3MgY29udGFpbiBpbmxpbmUgb3IgYmxvY2sgbm9kZXMuXG4gKi9cbnZhciBCTE9DS1M7XG4oZnVuY3Rpb24gKEJMT0NLUykge1xuICAgIEJMT0NLU1tcIkRPQ1VNRU5UXCJdID0gXCJkb2N1bWVudFwiO1xuICAgIEJMT0NLU1tcIlBBUkFHUkFQSFwiXSA9IFwicGFyYWdyYXBoXCI7XG4gICAgQkxPQ0tTW1wiSEVBRElOR18xXCJdID0gXCJoZWFkaW5nLTFcIjtcbiAgICBCTE9DS1NbXCJIRUFESU5HXzJcIl0gPSBcImhlYWRpbmctMlwiO1xuICAgIEJMT0NLU1tcIkhFQURJTkdfM1wiXSA9IFwiaGVhZGluZy0zXCI7XG4gICAgQkxPQ0tTW1wiSEVBRElOR180XCJdID0gXCJoZWFkaW5nLTRcIjtcbiAgICBCTE9DS1NbXCJIRUFESU5HXzVcIl0gPSBcImhlYWRpbmctNVwiO1xuICAgIEJMT0NLU1tcIkhFQURJTkdfNlwiXSA9IFwiaGVhZGluZy02XCI7XG4gICAgQkxPQ0tTW1wiT0xfTElTVFwiXSA9IFwib3JkZXJlZC1saXN0XCI7XG4gICAgQkxPQ0tTW1wiVUxfTElTVFwiXSA9IFwidW5vcmRlcmVkLWxpc3RcIjtcbiAgICBCTE9DS1NbXCJMSVNUX0lURU1cIl0gPSBcImxpc3QtaXRlbVwiO1xuICAgIEJMT0NLU1tcIkhSXCJdID0gXCJoclwiO1xuICAgIEJMT0NLU1tcIlFVT1RFXCJdID0gXCJibG9ja3F1b3RlXCI7XG4gICAgQkxPQ0tTW1wiRU1CRURERURfRU5UUllcIl0gPSBcImVtYmVkZGVkLWVudHJ5LWJsb2NrXCI7XG4gICAgQkxPQ0tTW1wiRU1CRURERURfQVNTRVRcIl0gPSBcImVtYmVkZGVkLWFzc2V0LWJsb2NrXCI7XG4gICAgQkxPQ0tTW1wiRU1CRURERURfUkVTT1VSQ0VcIl0gPSBcImVtYmVkZGVkLXJlc291cmNlLWJsb2NrXCI7XG4gICAgQkxPQ0tTW1wiVEFCTEVcIl0gPSBcInRhYmxlXCI7XG4gICAgQkxPQ0tTW1wiVEFCTEVfUk9XXCJdID0gXCJ0YWJsZS1yb3dcIjtcbiAgICBCTE9DS1NbXCJUQUJMRV9DRUxMXCJdID0gXCJ0YWJsZS1jZWxsXCI7XG4gICAgQkxPQ0tTW1wiVEFCTEVfSEVBREVSX0NFTExcIl0gPSBcInRhYmxlLWhlYWRlci1jZWxsXCI7XG59KShCTE9DS1MgfHwgKGV4cG9ydHMuQkxPQ0tTID0gQkxPQ0tTID0ge30pKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJsb2Nrcy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@contentful/rich-text-types/dist/blocks.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@contentful/rich-text-types/dist/emptyDocument.js":
/*!************************************************************************!*\
  !*** ./node_modules/@contentful/rich-text-types/dist/emptyDocument.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.EMPTY_DOCUMENT = void 0;\nvar blocks_1 = __webpack_require__(/*! ./blocks */ \"(ssr)/./node_modules/@contentful/rich-text-types/dist/blocks.js\");\n/**\n * A rich text document considered to be empty.\n * Any other document structure than this is not considered empty.\n */\nexports.EMPTY_DOCUMENT = {\n    nodeType: blocks_1.BLOCKS.DOCUMENT,\n    data: {},\n    content: [\n        {\n            nodeType: blocks_1.BLOCKS.PARAGRAPH,\n            data: {},\n            content: [\n                {\n                    nodeType: 'text',\n                    value: '',\n                    marks: [],\n                    data: {},\n                },\n            ],\n        },\n    ],\n};\n//# sourceMappingURL=emptyDocument.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvbnRlbnRmdWwvcmljaC10ZXh0LXR5cGVzL2Rpc3QvZW1wdHlEb2N1bWVudC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxzQkFBc0I7QUFDdEIsZUFBZSxtQkFBTyxDQUFDLGlGQUFVO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQjtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCO0FBQzVCLGlCQUFpQjtBQUNqQjtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVVNFUlxcRGVza3RvcFxcTXkgUHJvamVjdHNcXFJlYWN0IFByb2plY3RzXFxNeVBvcnRmb2xpb1xcbm9kZV9tb2R1bGVzXFxAY29udGVudGZ1bFxccmljaC10ZXh0LXR5cGVzXFxkaXN0XFxlbXB0eURvY3VtZW50LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5FTVBUWV9ET0NVTUVOVCA9IHZvaWQgMDtcbnZhciBibG9ja3NfMSA9IHJlcXVpcmUoXCIuL2Jsb2Nrc1wiKTtcbi8qKlxuICogQSByaWNoIHRleHQgZG9jdW1lbnQgY29uc2lkZXJlZCB0byBiZSBlbXB0eS5cbiAqIEFueSBvdGhlciBkb2N1bWVudCBzdHJ1Y3R1cmUgdGhhbiB0aGlzIGlzIG5vdCBjb25zaWRlcmVkIGVtcHR5LlxuICovXG5leHBvcnRzLkVNUFRZX0RPQ1VNRU5UID0ge1xuICAgIG5vZGVUeXBlOiBibG9ja3NfMS5CTE9DS1MuRE9DVU1FTlQsXG4gICAgZGF0YToge30sXG4gICAgY29udGVudDogW1xuICAgICAgICB7XG4gICAgICAgICAgICBub2RlVHlwZTogYmxvY2tzXzEuQkxPQ0tTLlBBUkFHUkFQSCxcbiAgICAgICAgICAgIGRhdGE6IHt9LFxuICAgICAgICAgICAgY29udGVudDogW1xuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbm9kZVR5cGU6ICd0ZXh0JyxcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6ICcnLFxuICAgICAgICAgICAgICAgICAgICBtYXJrczogW10sXG4gICAgICAgICAgICAgICAgICAgIGRhdGE6IHt9LFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBdLFxuICAgICAgICB9LFxuICAgIF0sXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZW1wdHlEb2N1bWVudC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@contentful/rich-text-types/dist/emptyDocument.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@contentful/rich-text-types/dist/helpers.js":
/*!******************************************************************!*\
  !*** ./node_modules/@contentful/rich-text-types/dist/helpers.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isInline = isInline;\nexports.isBlock = isBlock;\nexports.isText = isText;\nvar blocks_1 = __webpack_require__(/*! ./blocks */ \"(ssr)/./node_modules/@contentful/rich-text-types/dist/blocks.js\");\nvar inlines_1 = __webpack_require__(/*! ./inlines */ \"(ssr)/./node_modules/@contentful/rich-text-types/dist/inlines.js\");\n/**\n * Tiny replacement for Object.values(object).includes(key) to\n * avoid including CoreJS polyfills\n */\nfunction hasValue(obj, value) {\n    for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n        var key = _a[_i];\n        if (value === obj[key]) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * Checks if the node is an instance of Inline.\n */\nfunction isInline(node) {\n    return hasValue(inlines_1.INLINES, node.nodeType);\n}\n/**\n * Checks if the node is an instance of Block.\n */\nfunction isBlock(node) {\n    return hasValue(blocks_1.BLOCKS, node.nodeType);\n}\n/**\n * Checks if the node is an instance of Text.\n */\nfunction isText(node) {\n    return node.nodeType === 'text';\n}\n//# sourceMappingURL=helpers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvbnRlbnRmdWwvcmljaC10ZXh0LXR5cGVzL2Rpc3QvaGVscGVycy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxnQkFBZ0I7QUFDaEIsZUFBZTtBQUNmLGNBQWM7QUFDZCxlQUFlLG1CQUFPLENBQUMsaUZBQVU7QUFDakMsZ0JBQWdCLG1CQUFPLENBQUMsbUZBQVc7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRDQUE0QyxnQkFBZ0I7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxVU0VSXFxEZXNrdG9wXFxNeSBQcm9qZWN0c1xcUmVhY3QgUHJvamVjdHNcXE15UG9ydGZvbGlvXFxub2RlX21vZHVsZXNcXEBjb250ZW50ZnVsXFxyaWNoLXRleHQtdHlwZXNcXGRpc3RcXGhlbHBlcnMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmlzSW5saW5lID0gaXNJbmxpbmU7XG5leHBvcnRzLmlzQmxvY2sgPSBpc0Jsb2NrO1xuZXhwb3J0cy5pc1RleHQgPSBpc1RleHQ7XG52YXIgYmxvY2tzXzEgPSByZXF1aXJlKFwiLi9ibG9ja3NcIik7XG52YXIgaW5saW5lc18xID0gcmVxdWlyZShcIi4vaW5saW5lc1wiKTtcbi8qKlxuICogVGlueSByZXBsYWNlbWVudCBmb3IgT2JqZWN0LnZhbHVlcyhvYmplY3QpLmluY2x1ZGVzKGtleSkgdG9cbiAqIGF2b2lkIGluY2x1ZGluZyBDb3JlSlMgcG9seWZpbGxzXG4gKi9cbmZ1bmN0aW9uIGhhc1ZhbHVlKG9iaiwgdmFsdWUpIHtcbiAgICBmb3IgKHZhciBfaSA9IDAsIF9hID0gT2JqZWN0LmtleXMob2JqKTsgX2kgPCBfYS5sZW5ndGg7IF9pKyspIHtcbiAgICAgICAgdmFyIGtleSA9IF9hW19pXTtcbiAgICAgICAgaWYgKHZhbHVlID09PSBvYmpba2V5XSkge1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xufVxuLyoqXG4gKiBDaGVja3MgaWYgdGhlIG5vZGUgaXMgYW4gaW5zdGFuY2Ugb2YgSW5saW5lLlxuICovXG5mdW5jdGlvbiBpc0lubGluZShub2RlKSB7XG4gICAgcmV0dXJuIGhhc1ZhbHVlKGlubGluZXNfMS5JTkxJTkVTLCBub2RlLm5vZGVUeXBlKTtcbn1cbi8qKlxuICogQ2hlY2tzIGlmIHRoZSBub2RlIGlzIGFuIGluc3RhbmNlIG9mIEJsb2NrLlxuICovXG5mdW5jdGlvbiBpc0Jsb2NrKG5vZGUpIHtcbiAgICByZXR1cm4gaGFzVmFsdWUoYmxvY2tzXzEuQkxPQ0tTLCBub2RlLm5vZGVUeXBlKTtcbn1cbi8qKlxuICogQ2hlY2tzIGlmIHRoZSBub2RlIGlzIGFuIGluc3RhbmNlIG9mIFRleHQuXG4gKi9cbmZ1bmN0aW9uIGlzVGV4dChub2RlKSB7XG4gICAgcmV0dXJuIG5vZGUubm9kZVR5cGUgPT09ICd0ZXh0Jztcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWhlbHBlcnMuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@contentful/rich-text-types/dist/helpers.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@contentful/rich-text-types/dist/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/@contentful/rich-text-types/dist/index.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getSchemaWithNodeType = exports.helpers = exports.EMPTY_DOCUMENT = exports.MARKS = exports.INLINES = exports.BLOCKS = void 0;\nvar blocks_1 = __webpack_require__(/*! ./blocks */ \"(ssr)/./node_modules/@contentful/rich-text-types/dist/blocks.js\");\nObject.defineProperty(exports, \"BLOCKS\", ({ enumerable: true, get: function () { return blocks_1.BLOCKS; } }));\nvar inlines_1 = __webpack_require__(/*! ./inlines */ \"(ssr)/./node_modules/@contentful/rich-text-types/dist/inlines.js\");\nObject.defineProperty(exports, \"INLINES\", ({ enumerable: true, get: function () { return inlines_1.INLINES; } }));\nvar marks_1 = __webpack_require__(/*! ./marks */ \"(ssr)/./node_modules/@contentful/rich-text-types/dist/marks.js\");\nObject.defineProperty(exports, \"MARKS\", ({ enumerable: true, get: function () { return marks_1.MARKS; } }));\n__exportStar(__webpack_require__(/*! ./schemaConstraints */ \"(ssr)/./node_modules/@contentful/rich-text-types/dist/schemaConstraints.js\"), exports);\n__exportStar(__webpack_require__(/*! ./types */ \"(ssr)/./node_modules/@contentful/rich-text-types/dist/types.js\"), exports);\n__exportStar(__webpack_require__(/*! ./nodeTypes */ \"(ssr)/./node_modules/@contentful/rich-text-types/dist/nodeTypes.js\"), exports);\nvar emptyDocument_1 = __webpack_require__(/*! ./emptyDocument */ \"(ssr)/./node_modules/@contentful/rich-text-types/dist/emptyDocument.js\");\nObject.defineProperty(exports, \"EMPTY_DOCUMENT\", ({ enumerable: true, get: function () { return emptyDocument_1.EMPTY_DOCUMENT; } }));\nvar helpers = __importStar(__webpack_require__(/*! ./helpers */ \"(ssr)/./node_modules/@contentful/rich-text-types/dist/helpers.js\"));\nexports.helpers = helpers;\nvar schemas_1 = __webpack_require__(/*! ./schemas */ \"(ssr)/./node_modules/@contentful/rich-text-types/dist/schemas/index.js\");\nObject.defineProperty(exports, \"getSchemaWithNodeType\", ({ enumerable: true, get: function () { return schemas_1.getSchemaWithNodeType; } }));\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvbnRlbnRmdWwvcmljaC10ZXh0LXR5cGVzL2Rpc3QvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsb0NBQW9DO0FBQ25EO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBLDBDQUEwQyw0QkFBNEI7QUFDdEUsQ0FBQztBQUNEO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDZCQUE2QixHQUFHLGVBQWUsR0FBRyxzQkFBc0IsR0FBRyxhQUFhLEdBQUcsZUFBZSxHQUFHLGNBQWM7QUFDM0gsZUFBZSxtQkFBTyxDQUFDLGlGQUFVO0FBQ2pDLDBDQUF5QyxFQUFFLHFDQUFxQywyQkFBMkIsRUFBQztBQUM1RyxnQkFBZ0IsbUJBQU8sQ0FBQyxtRkFBVztBQUNuQywyQ0FBMEMsRUFBRSxxQ0FBcUMsNkJBQTZCLEVBQUM7QUFDL0csY0FBYyxtQkFBTyxDQUFDLCtFQUFTO0FBQy9CLHlDQUF3QyxFQUFFLHFDQUFxQyx5QkFBeUIsRUFBQztBQUN6RyxhQUFhLG1CQUFPLENBQUMsdUdBQXFCO0FBQzFDLGFBQWEsbUJBQU8sQ0FBQywrRUFBUztBQUM5QixhQUFhLG1CQUFPLENBQUMsdUZBQWE7QUFDbEMsc0JBQXNCLG1CQUFPLENBQUMsK0ZBQWlCO0FBQy9DLGtEQUFpRCxFQUFFLHFDQUFxQywwQ0FBMEMsRUFBQztBQUNuSSwyQkFBMkIsbUJBQU8sQ0FBQyxtRkFBVztBQUM5QyxlQUFlO0FBQ2YsZ0JBQWdCLG1CQUFPLENBQUMseUZBQVc7QUFDbkMseURBQXdELEVBQUUscUNBQXFDLDJDQUEyQyxFQUFDO0FBQzNJIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXFVTRVJcXERlc2t0b3BcXE15IFByb2plY3RzXFxSZWFjdCBQcm9qZWN0c1xcTXlQb3J0Zm9saW9cXG5vZGVfbW9kdWxlc1xcQGNvbnRlbnRmdWxcXHJpY2gtdGV4dC10eXBlc1xcZGlzdFxcaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICB2YXIgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IobSwgayk7XG4gICAgaWYgKCFkZXNjIHx8IChcImdldFwiIGluIGRlc2MgPyAhbS5fX2VzTW9kdWxlIDogZGVzYy53cml0YWJsZSB8fCBkZXNjLmNvbmZpZ3VyYWJsZSkpIHtcbiAgICAgIGRlc2MgPSB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH07XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgZGVzYyk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fc2V0TW9kdWxlRGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19zZXRNb2R1bGVEZWZhdWx0KSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCB2KSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIFwiZGVmYXVsdFwiLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2IH0pO1xufSkgOiBmdW5jdGlvbihvLCB2KSB7XG4gICAgb1tcImRlZmF1bHRcIl0gPSB2O1xufSk7XG52YXIgX19leHBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2V4cG9ydFN0YXIpIHx8IGZ1bmN0aW9uKG0sIGV4cG9ydHMpIHtcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmIChwICE9PSBcImRlZmF1bHRcIiAmJiAhT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGV4cG9ydHMsIHApKSBfX2NyZWF0ZUJpbmRpbmcoZXhwb3J0cywgbSwgcCk7XG59O1xudmFyIF9faW1wb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnRTdGFyKSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgaWYgKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgcmV0dXJuIG1vZDtcbiAgICB2YXIgcmVzdWx0ID0ge307XG4gICAgaWYgKG1vZCAhPSBudWxsKSBmb3IgKHZhciBrIGluIG1vZCkgaWYgKGsgIT09IFwiZGVmYXVsdFwiICYmIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChtb2QsIGspKSBfX2NyZWF0ZUJpbmRpbmcocmVzdWx0LCBtb2QsIGspO1xuICAgIF9fc2V0TW9kdWxlRGVmYXVsdChyZXN1bHQsIG1vZCk7XG4gICAgcmV0dXJuIHJlc3VsdDtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmdldFNjaGVtYVdpdGhOb2RlVHlwZSA9IGV4cG9ydHMuaGVscGVycyA9IGV4cG9ydHMuRU1QVFlfRE9DVU1FTlQgPSBleHBvcnRzLk1BUktTID0gZXhwb3J0cy5JTkxJTkVTID0gZXhwb3J0cy5CTE9DS1MgPSB2b2lkIDA7XG52YXIgYmxvY2tzXzEgPSByZXF1aXJlKFwiLi9ibG9ja3NcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJCTE9DS1NcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGJsb2Nrc18xLkJMT0NLUzsgfSB9KTtcbnZhciBpbmxpbmVzXzEgPSByZXF1aXJlKFwiLi9pbmxpbmVzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiSU5MSU5FU1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gaW5saW5lc18xLklOTElORVM7IH0gfSk7XG52YXIgbWFya3NfMSA9IHJlcXVpcmUoXCIuL21hcmtzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiTUFSS1NcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIG1hcmtzXzEuTUFSS1M7IH0gfSk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vc2NoZW1hQ29uc3RyYWludHNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3R5cGVzXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9ub2RlVHlwZXNcIiksIGV4cG9ydHMpO1xudmFyIGVtcHR5RG9jdW1lbnRfMSA9IHJlcXVpcmUoXCIuL2VtcHR5RG9jdW1lbnRcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJFTVBUWV9ET0NVTUVOVFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gZW1wdHlEb2N1bWVudF8xLkVNUFRZX0RPQ1VNRU5UOyB9IH0pO1xudmFyIGhlbHBlcnMgPSBfX2ltcG9ydFN0YXIocmVxdWlyZShcIi4vaGVscGVyc1wiKSk7XG5leHBvcnRzLmhlbHBlcnMgPSBoZWxwZXJzO1xudmFyIHNjaGVtYXNfMSA9IHJlcXVpcmUoXCIuL3NjaGVtYXNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJnZXRTY2hlbWFXaXRoTm9kZVR5cGVcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHNjaGVtYXNfMS5nZXRTY2hlbWFXaXRoTm9kZVR5cGU7IH0gfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@contentful/rich-text-types/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@contentful/rich-text-types/dist/inlines.js":
/*!******************************************************************!*\
  !*** ./node_modules/@contentful/rich-text-types/dist/inlines.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.INLINES = void 0;\n/**\n * Map of all Contentful inline types. Inline contain inline or text nodes.\n *\n * @note This should be kept in alphabetical order since the\n * [validation package](https://github.com/contentful/content-stack/tree/master/packages/validation)\n *  relies on the values being in a predictable order.\n */\nvar INLINES;\n(function (INLINES) {\n    INLINES[\"ASSET_HYPERLINK\"] = \"asset-hyperlink\";\n    INLINES[\"EMBEDDED_ENTRY\"] = \"embedded-entry-inline\";\n    INLINES[\"EMBEDDED_RESOURCE\"] = \"embedded-resource-inline\";\n    INLINES[\"ENTRY_HYPERLINK\"] = \"entry-hyperlink\";\n    INLINES[\"HYPERLINK\"] = \"hyperlink\";\n    INLINES[\"RESOURCE_HYPERLINK\"] = \"resource-hyperlink\";\n})(INLINES || (exports.INLINES = INLINES = {}));\n//# sourceMappingURL=inlines.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvbnRlbnRmdWwvcmljaC10ZXh0LXR5cGVzL2Rpc3QvaW5saW5lcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxjQUFjLGVBQWUsZUFBZTtBQUM3QyIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxVU0VSXFxEZXNrdG9wXFxNeSBQcm9qZWN0c1xcUmVhY3QgUHJvamVjdHNcXE15UG9ydGZvbGlvXFxub2RlX21vZHVsZXNcXEBjb250ZW50ZnVsXFxyaWNoLXRleHQtdHlwZXNcXGRpc3RcXGlubGluZXMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLklOTElORVMgPSB2b2lkIDA7XG4vKipcbiAqIE1hcCBvZiBhbGwgQ29udGVudGZ1bCBpbmxpbmUgdHlwZXMuIElubGluZSBjb250YWluIGlubGluZSBvciB0ZXh0IG5vZGVzLlxuICpcbiAqIEBub3RlIFRoaXMgc2hvdWxkIGJlIGtlcHQgaW4gYWxwaGFiZXRpY2FsIG9yZGVyIHNpbmNlIHRoZVxuICogW3ZhbGlkYXRpb24gcGFja2FnZV0oaHR0cHM6Ly9naXRodWIuY29tL2NvbnRlbnRmdWwvY29udGVudC1zdGFjay90cmVlL21hc3Rlci9wYWNrYWdlcy92YWxpZGF0aW9uKVxuICogIHJlbGllcyBvbiB0aGUgdmFsdWVzIGJlaW5nIGluIGEgcHJlZGljdGFibGUgb3JkZXIuXG4gKi9cbnZhciBJTkxJTkVTO1xuKGZ1bmN0aW9uIChJTkxJTkVTKSB7XG4gICAgSU5MSU5FU1tcIkFTU0VUX0hZUEVSTElOS1wiXSA9IFwiYXNzZXQtaHlwZXJsaW5rXCI7XG4gICAgSU5MSU5FU1tcIkVNQkVEREVEX0VOVFJZXCJdID0gXCJlbWJlZGRlZC1lbnRyeS1pbmxpbmVcIjtcbiAgICBJTkxJTkVTW1wiRU1CRURERURfUkVTT1VSQ0VcIl0gPSBcImVtYmVkZGVkLXJlc291cmNlLWlubGluZVwiO1xuICAgIElOTElORVNbXCJFTlRSWV9IWVBFUkxJTktcIl0gPSBcImVudHJ5LWh5cGVybGlua1wiO1xuICAgIElOTElORVNbXCJIWVBFUkxJTktcIl0gPSBcImh5cGVybGlua1wiO1xuICAgIElOTElORVNbXCJSRVNPVVJDRV9IWVBFUkxJTktcIl0gPSBcInJlc291cmNlLWh5cGVybGlua1wiO1xufSkoSU5MSU5FUyB8fCAoZXhwb3J0cy5JTkxJTkVTID0gSU5MSU5FUyA9IHt9KSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmxpbmVzLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@contentful/rich-text-types/dist/inlines.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@contentful/rich-text-types/dist/marks.js":
/*!****************************************************************!*\
  !*** ./node_modules/@contentful/rich-text-types/dist/marks.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MARKS = void 0;\n/**\n * Map of all Contentful marks.\n */\nvar MARKS;\n(function (MARKS) {\n    MARKS[\"BOLD\"] = \"bold\";\n    MARKS[\"ITALIC\"] = \"italic\";\n    MARKS[\"UNDERLINE\"] = \"underline\";\n    MARKS[\"CODE\"] = \"code\";\n    MARKS[\"SUPERSCRIPT\"] = \"superscript\";\n    MARKS[\"SUBSCRIPT\"] = \"subscript\";\n    MARKS[\"STRIKETHROUGH\"] = \"strikethrough\";\n})(MARKS || (exports.MARKS = MARKS = {}));\n//# sourceMappingURL=marks.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvbnRlbnRmdWwvcmljaC10ZXh0LXR5cGVzL2Rpc3QvbWFya3MuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsWUFBWSxhQUFhLGFBQWE7QUFDdkMiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVVNFUlxcRGVza3RvcFxcTXkgUHJvamVjdHNcXFJlYWN0IFByb2plY3RzXFxNeVBvcnRmb2xpb1xcbm9kZV9tb2R1bGVzXFxAY29udGVudGZ1bFxccmljaC10ZXh0LXR5cGVzXFxkaXN0XFxtYXJrcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuTUFSS1MgPSB2b2lkIDA7XG4vKipcbiAqIE1hcCBvZiBhbGwgQ29udGVudGZ1bCBtYXJrcy5cbiAqL1xudmFyIE1BUktTO1xuKGZ1bmN0aW9uIChNQVJLUykge1xuICAgIE1BUktTW1wiQk9MRFwiXSA9IFwiYm9sZFwiO1xuICAgIE1BUktTW1wiSVRBTElDXCJdID0gXCJpdGFsaWNcIjtcbiAgICBNQVJLU1tcIlVOREVSTElORVwiXSA9IFwidW5kZXJsaW5lXCI7XG4gICAgTUFSS1NbXCJDT0RFXCJdID0gXCJjb2RlXCI7XG4gICAgTUFSS1NbXCJTVVBFUlNDUklQVFwiXSA9IFwic3VwZXJzY3JpcHRcIjtcbiAgICBNQVJLU1tcIlNVQlNDUklQVFwiXSA9IFwic3Vic2NyaXB0XCI7XG4gICAgTUFSS1NbXCJTVFJJS0VUSFJPVUdIXCJdID0gXCJzdHJpa2V0aHJvdWdoXCI7XG59KShNQVJLUyB8fCAoZXhwb3J0cy5NQVJLUyA9IE1BUktTID0ge30pKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW1hcmtzLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@contentful/rich-text-types/dist/marks.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@contentful/rich-text-types/dist/nodeTypes.js":
/*!********************************************************************!*\
  !*** ./node_modules/@contentful/rich-text-types/dist/nodeTypes.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=nodeTypes.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvbnRlbnRmdWwvcmljaC10ZXh0LXR5cGVzL2Rpc3Qvbm9kZVR5cGVzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdEIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXFVTRVJcXERlc2t0b3BcXE15IFByb2plY3RzXFxSZWFjdCBQcm9qZWN0c1xcTXlQb3J0Zm9saW9cXG5vZGVfbW9kdWxlc1xcQGNvbnRlbnRmdWxcXHJpY2gtdGV4dC10eXBlc1xcZGlzdFxcbm9kZVR5cGVzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bm9kZVR5cGVzLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@contentful/rich-text-types/dist/nodeTypes.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@contentful/rich-text-types/dist/schemaConstraints.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@contentful/rich-text-types/dist/schemaConstraints.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar _a;\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.V1_MARKS = exports.V1_NODE_TYPES = exports.TEXT_CONTAINERS = exports.HEADINGS = exports.CONTAINERS = exports.VOID_BLOCKS = exports.TABLE_BLOCKS = exports.LIST_ITEM_BLOCKS = exports.TOP_LEVEL_BLOCKS = void 0;\nvar blocks_1 = __webpack_require__(/*! ./blocks */ \"(ssr)/./node_modules/@contentful/rich-text-types/dist/blocks.js\");\nvar inlines_1 = __webpack_require__(/*! ./inlines */ \"(ssr)/./node_modules/@contentful/rich-text-types/dist/inlines.js\");\nvar marks_1 = __webpack_require__(/*! ./marks */ \"(ssr)/./node_modules/@contentful/rich-text-types/dist/marks.js\");\n/**\n * Array of all top level block types.\n * Only these block types can be the direct children of the document.\n */\nexports.TOP_LEVEL_BLOCKS = [\n    blocks_1.BLOCKS.PARAGRAPH,\n    blocks_1.BLOCKS.HEADING_1,\n    blocks_1.BLOCKS.HEADING_2,\n    blocks_1.BLOCKS.HEADING_3,\n    blocks_1.BLOCKS.HEADING_4,\n    blocks_1.BLOCKS.HEADING_5,\n    blocks_1.BLOCKS.HEADING_6,\n    blocks_1.BLOCKS.OL_LIST,\n    blocks_1.BLOCKS.UL_LIST,\n    blocks_1.BLOCKS.HR,\n    blocks_1.BLOCKS.QUOTE,\n    blocks_1.BLOCKS.EMBEDDED_ENTRY,\n    blocks_1.BLOCKS.EMBEDDED_ASSET,\n    blocks_1.BLOCKS.EMBEDDED_RESOURCE,\n    blocks_1.BLOCKS.TABLE,\n];\n/**\n * Array of all allowed block types inside list items\n */\nexports.LIST_ITEM_BLOCKS = [\n    blocks_1.BLOCKS.PARAGRAPH,\n    blocks_1.BLOCKS.HEADING_1,\n    blocks_1.BLOCKS.HEADING_2,\n    blocks_1.BLOCKS.HEADING_3,\n    blocks_1.BLOCKS.HEADING_4,\n    blocks_1.BLOCKS.HEADING_5,\n    blocks_1.BLOCKS.HEADING_6,\n    blocks_1.BLOCKS.OL_LIST,\n    blocks_1.BLOCKS.UL_LIST,\n    blocks_1.BLOCKS.HR,\n    blocks_1.BLOCKS.QUOTE,\n    blocks_1.BLOCKS.EMBEDDED_ENTRY,\n    blocks_1.BLOCKS.EMBEDDED_ASSET,\n    blocks_1.BLOCKS.EMBEDDED_RESOURCE,\n];\nexports.TABLE_BLOCKS = [\n    blocks_1.BLOCKS.TABLE,\n    blocks_1.BLOCKS.TABLE_ROW,\n    blocks_1.BLOCKS.TABLE_CELL,\n    blocks_1.BLOCKS.TABLE_HEADER_CELL,\n];\n/**\n * Array of all void block types\n */\nexports.VOID_BLOCKS = [\n    blocks_1.BLOCKS.HR,\n    blocks_1.BLOCKS.EMBEDDED_ENTRY,\n    blocks_1.BLOCKS.EMBEDDED_ASSET,\n    blocks_1.BLOCKS.EMBEDDED_RESOURCE,\n];\n/**\n * Dictionary of all container block types, and the set block types they accept as children.\n *\n * Note: This does not include `[BLOCKS.DOCUMENT]: TOP_LEVEL_BLOCKS`\n */\nexports.CONTAINERS = (_a = {},\n    _a[blocks_1.BLOCKS.OL_LIST] = [blocks_1.BLOCKS.LIST_ITEM],\n    _a[blocks_1.BLOCKS.UL_LIST] = [blocks_1.BLOCKS.LIST_ITEM],\n    _a[blocks_1.BLOCKS.LIST_ITEM] = exports.LIST_ITEM_BLOCKS,\n    _a[blocks_1.BLOCKS.QUOTE] = [blocks_1.BLOCKS.PARAGRAPH],\n    _a[blocks_1.BLOCKS.TABLE] = [blocks_1.BLOCKS.TABLE_ROW],\n    _a[blocks_1.BLOCKS.TABLE_ROW] = [blocks_1.BLOCKS.TABLE_CELL, blocks_1.BLOCKS.TABLE_HEADER_CELL],\n    _a[blocks_1.BLOCKS.TABLE_CELL] = [blocks_1.BLOCKS.PARAGRAPH, blocks_1.BLOCKS.UL_LIST, blocks_1.BLOCKS.OL_LIST],\n    _a[blocks_1.BLOCKS.TABLE_HEADER_CELL] = [blocks_1.BLOCKS.PARAGRAPH],\n    _a);\n/**\n * Array of all heading levels\n */\nexports.HEADINGS = [\n    blocks_1.BLOCKS.HEADING_1,\n    blocks_1.BLOCKS.HEADING_2,\n    blocks_1.BLOCKS.HEADING_3,\n    blocks_1.BLOCKS.HEADING_4,\n    blocks_1.BLOCKS.HEADING_5,\n    blocks_1.BLOCKS.HEADING_6,\n];\n/**\n * Array of all block types that may contain text and inline nodes.\n */\nexports.TEXT_CONTAINERS = __spreadArray([blocks_1.BLOCKS.PARAGRAPH], exports.HEADINGS, true);\n/**\n * Node types before `tables` release.\n */\nexports.V1_NODE_TYPES = [\n    blocks_1.BLOCKS.DOCUMENT,\n    blocks_1.BLOCKS.PARAGRAPH,\n    blocks_1.BLOCKS.HEADING_1,\n    blocks_1.BLOCKS.HEADING_2,\n    blocks_1.BLOCKS.HEADING_3,\n    blocks_1.BLOCKS.HEADING_4,\n    blocks_1.BLOCKS.HEADING_5,\n    blocks_1.BLOCKS.HEADING_6,\n    blocks_1.BLOCKS.OL_LIST,\n    blocks_1.BLOCKS.UL_LIST,\n    blocks_1.BLOCKS.LIST_ITEM,\n    blocks_1.BLOCKS.HR,\n    blocks_1.BLOCKS.QUOTE,\n    blocks_1.BLOCKS.EMBEDDED_ENTRY,\n    blocks_1.BLOCKS.EMBEDDED_ASSET,\n    inlines_1.INLINES.HYPERLINK,\n    inlines_1.INLINES.ENTRY_HYPERLINK,\n    inlines_1.INLINES.ASSET_HYPERLINK,\n    inlines_1.INLINES.EMBEDDED_ENTRY,\n    'text',\n];\n/**\n * Marks before `superscript` & `subscript` release.\n */\nexports.V1_MARKS = [marks_1.MARKS.BOLD, marks_1.MARKS.CODE, marks_1.MARKS.ITALIC, marks_1.MARKS.UNDERLINE];\n//# sourceMappingURL=schemaConstraints.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvbnRlbnRmdWwvcmljaC10ZXh0LXR5cGVzL2Rpc3Qvc2NoZW1hQ29uc3RyYWludHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDZFQUE2RSxPQUFPO0FBQ3BGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZ0JBQWdCLEdBQUcscUJBQXFCLEdBQUcsdUJBQXVCLEdBQUcsZ0JBQWdCLEdBQUcsa0JBQWtCLEdBQUcsbUJBQW1CLEdBQUcsb0JBQW9CLEdBQUcsd0JBQXdCLEdBQUcsd0JBQXdCO0FBQzdNLGVBQWUsbUJBQU8sQ0FBQyxpRkFBVTtBQUNqQyxnQkFBZ0IsbUJBQU8sQ0FBQyxtRkFBVztBQUNuQyxjQUFjLG1CQUFPLENBQUMsK0VBQVM7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0I7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0I7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsV0FBVztBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUI7QUFDdkI7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxVU0VSXFxEZXNrdG9wXFxNeSBQcm9qZWN0c1xcUmVhY3QgUHJvamVjdHNcXE15UG9ydGZvbGlvXFxub2RlX21vZHVsZXNcXEBjb250ZW50ZnVsXFxyaWNoLXRleHQtdHlwZXNcXGRpc3RcXHNjaGVtYUNvbnN0cmFpbnRzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fc3ByZWFkQXJyYXkgPSAodGhpcyAmJiB0aGlzLl9fc3ByZWFkQXJyYXkpIHx8IGZ1bmN0aW9uICh0bywgZnJvbSwgcGFjaykge1xuICAgIGlmIChwYWNrIHx8IGFyZ3VtZW50cy5sZW5ndGggPT09IDIpIGZvciAodmFyIGkgPSAwLCBsID0gZnJvbS5sZW5ndGgsIGFyOyBpIDwgbDsgaSsrKSB7XG4gICAgICAgIGlmIChhciB8fCAhKGkgaW4gZnJvbSkpIHtcbiAgICAgICAgICAgIGlmICghYXIpIGFyID0gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoZnJvbSwgMCwgaSk7XG4gICAgICAgICAgICBhcltpXSA9IGZyb21baV07XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRvLmNvbmNhdChhciB8fCBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChmcm9tKSk7XG59O1xudmFyIF9hO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5WMV9NQVJLUyA9IGV4cG9ydHMuVjFfTk9ERV9UWVBFUyA9IGV4cG9ydHMuVEVYVF9DT05UQUlORVJTID0gZXhwb3J0cy5IRUFESU5HUyA9IGV4cG9ydHMuQ09OVEFJTkVSUyA9IGV4cG9ydHMuVk9JRF9CTE9DS1MgPSBleHBvcnRzLlRBQkxFX0JMT0NLUyA9IGV4cG9ydHMuTElTVF9JVEVNX0JMT0NLUyA9IGV4cG9ydHMuVE9QX0xFVkVMX0JMT0NLUyA9IHZvaWQgMDtcbnZhciBibG9ja3NfMSA9IHJlcXVpcmUoXCIuL2Jsb2Nrc1wiKTtcbnZhciBpbmxpbmVzXzEgPSByZXF1aXJlKFwiLi9pbmxpbmVzXCIpO1xudmFyIG1hcmtzXzEgPSByZXF1aXJlKFwiLi9tYXJrc1wiKTtcbi8qKlxuICogQXJyYXkgb2YgYWxsIHRvcCBsZXZlbCBibG9jayB0eXBlcy5cbiAqIE9ubHkgdGhlc2UgYmxvY2sgdHlwZXMgY2FuIGJlIHRoZSBkaXJlY3QgY2hpbGRyZW4gb2YgdGhlIGRvY3VtZW50LlxuICovXG5leHBvcnRzLlRPUF9MRVZFTF9CTE9DS1MgPSBbXG4gICAgYmxvY2tzXzEuQkxPQ0tTLlBBUkFHUkFQSCxcbiAgICBibG9ja3NfMS5CTE9DS1MuSEVBRElOR18xLFxuICAgIGJsb2Nrc18xLkJMT0NLUy5IRUFESU5HXzIsXG4gICAgYmxvY2tzXzEuQkxPQ0tTLkhFQURJTkdfMyxcbiAgICBibG9ja3NfMS5CTE9DS1MuSEVBRElOR180LFxuICAgIGJsb2Nrc18xLkJMT0NLUy5IRUFESU5HXzUsXG4gICAgYmxvY2tzXzEuQkxPQ0tTLkhFQURJTkdfNixcbiAgICBibG9ja3NfMS5CTE9DS1MuT0xfTElTVCxcbiAgICBibG9ja3NfMS5CTE9DS1MuVUxfTElTVCxcbiAgICBibG9ja3NfMS5CTE9DS1MuSFIsXG4gICAgYmxvY2tzXzEuQkxPQ0tTLlFVT1RFLFxuICAgIGJsb2Nrc18xLkJMT0NLUy5FTUJFRERFRF9FTlRSWSxcbiAgICBibG9ja3NfMS5CTE9DS1MuRU1CRURERURfQVNTRVQsXG4gICAgYmxvY2tzXzEuQkxPQ0tTLkVNQkVEREVEX1JFU09VUkNFLFxuICAgIGJsb2Nrc18xLkJMT0NLUy5UQUJMRSxcbl07XG4vKipcbiAqIEFycmF5IG9mIGFsbCBhbGxvd2VkIGJsb2NrIHR5cGVzIGluc2lkZSBsaXN0IGl0ZW1zXG4gKi9cbmV4cG9ydHMuTElTVF9JVEVNX0JMT0NLUyA9IFtcbiAgICBibG9ja3NfMS5CTE9DS1MuUEFSQUdSQVBILFxuICAgIGJsb2Nrc18xLkJMT0NLUy5IRUFESU5HXzEsXG4gICAgYmxvY2tzXzEuQkxPQ0tTLkhFQURJTkdfMixcbiAgICBibG9ja3NfMS5CTE9DS1MuSEVBRElOR18zLFxuICAgIGJsb2Nrc18xLkJMT0NLUy5IRUFESU5HXzQsXG4gICAgYmxvY2tzXzEuQkxPQ0tTLkhFQURJTkdfNSxcbiAgICBibG9ja3NfMS5CTE9DS1MuSEVBRElOR182LFxuICAgIGJsb2Nrc18xLkJMT0NLUy5PTF9MSVNULFxuICAgIGJsb2Nrc18xLkJMT0NLUy5VTF9MSVNULFxuICAgIGJsb2Nrc18xLkJMT0NLUy5IUixcbiAgICBibG9ja3NfMS5CTE9DS1MuUVVPVEUsXG4gICAgYmxvY2tzXzEuQkxPQ0tTLkVNQkVEREVEX0VOVFJZLFxuICAgIGJsb2Nrc18xLkJMT0NLUy5FTUJFRERFRF9BU1NFVCxcbiAgICBibG9ja3NfMS5CTE9DS1MuRU1CRURERURfUkVTT1VSQ0UsXG5dO1xuZXhwb3J0cy5UQUJMRV9CTE9DS1MgPSBbXG4gICAgYmxvY2tzXzEuQkxPQ0tTLlRBQkxFLFxuICAgIGJsb2Nrc18xLkJMT0NLUy5UQUJMRV9ST1csXG4gICAgYmxvY2tzXzEuQkxPQ0tTLlRBQkxFX0NFTEwsXG4gICAgYmxvY2tzXzEuQkxPQ0tTLlRBQkxFX0hFQURFUl9DRUxMLFxuXTtcbi8qKlxuICogQXJyYXkgb2YgYWxsIHZvaWQgYmxvY2sgdHlwZXNcbiAqL1xuZXhwb3J0cy5WT0lEX0JMT0NLUyA9IFtcbiAgICBibG9ja3NfMS5CTE9DS1MuSFIsXG4gICAgYmxvY2tzXzEuQkxPQ0tTLkVNQkVEREVEX0VOVFJZLFxuICAgIGJsb2Nrc18xLkJMT0NLUy5FTUJFRERFRF9BU1NFVCxcbiAgICBibG9ja3NfMS5CTE9DS1MuRU1CRURERURfUkVTT1VSQ0UsXG5dO1xuLyoqXG4gKiBEaWN0aW9uYXJ5IG9mIGFsbCBjb250YWluZXIgYmxvY2sgdHlwZXMsIGFuZCB0aGUgc2V0IGJsb2NrIHR5cGVzIHRoZXkgYWNjZXB0IGFzIGNoaWxkcmVuLlxuICpcbiAqIE5vdGU6IFRoaXMgZG9lcyBub3QgaW5jbHVkZSBgW0JMT0NLUy5ET0NVTUVOVF06IFRPUF9MRVZFTF9CTE9DS1NgXG4gKi9cbmV4cG9ydHMuQ09OVEFJTkVSUyA9IChfYSA9IHt9LFxuICAgIF9hW2Jsb2Nrc18xLkJMT0NLUy5PTF9MSVNUXSA9IFtibG9ja3NfMS5CTE9DS1MuTElTVF9JVEVNXSxcbiAgICBfYVtibG9ja3NfMS5CTE9DS1MuVUxfTElTVF0gPSBbYmxvY2tzXzEuQkxPQ0tTLkxJU1RfSVRFTV0sXG4gICAgX2FbYmxvY2tzXzEuQkxPQ0tTLkxJU1RfSVRFTV0gPSBleHBvcnRzLkxJU1RfSVRFTV9CTE9DS1MsXG4gICAgX2FbYmxvY2tzXzEuQkxPQ0tTLlFVT1RFXSA9IFtibG9ja3NfMS5CTE9DS1MuUEFSQUdSQVBIXSxcbiAgICBfYVtibG9ja3NfMS5CTE9DS1MuVEFCTEVdID0gW2Jsb2Nrc18xLkJMT0NLUy5UQUJMRV9ST1ddLFxuICAgIF9hW2Jsb2Nrc18xLkJMT0NLUy5UQUJMRV9ST1ddID0gW2Jsb2Nrc18xLkJMT0NLUy5UQUJMRV9DRUxMLCBibG9ja3NfMS5CTE9DS1MuVEFCTEVfSEVBREVSX0NFTExdLFxuICAgIF9hW2Jsb2Nrc18xLkJMT0NLUy5UQUJMRV9DRUxMXSA9IFtibG9ja3NfMS5CTE9DS1MuUEFSQUdSQVBILCBibG9ja3NfMS5CTE9DS1MuVUxfTElTVCwgYmxvY2tzXzEuQkxPQ0tTLk9MX0xJU1RdLFxuICAgIF9hW2Jsb2Nrc18xLkJMT0NLUy5UQUJMRV9IRUFERVJfQ0VMTF0gPSBbYmxvY2tzXzEuQkxPQ0tTLlBBUkFHUkFQSF0sXG4gICAgX2EpO1xuLyoqXG4gKiBBcnJheSBvZiBhbGwgaGVhZGluZyBsZXZlbHNcbiAqL1xuZXhwb3J0cy5IRUFESU5HUyA9IFtcbiAgICBibG9ja3NfMS5CTE9DS1MuSEVBRElOR18xLFxuICAgIGJsb2Nrc18xLkJMT0NLUy5IRUFESU5HXzIsXG4gICAgYmxvY2tzXzEuQkxPQ0tTLkhFQURJTkdfMyxcbiAgICBibG9ja3NfMS5CTE9DS1MuSEVBRElOR180LFxuICAgIGJsb2Nrc18xLkJMT0NLUy5IRUFESU5HXzUsXG4gICAgYmxvY2tzXzEuQkxPQ0tTLkhFQURJTkdfNixcbl07XG4vKipcbiAqIEFycmF5IG9mIGFsbCBibG9jayB0eXBlcyB0aGF0IG1heSBjb250YWluIHRleHQgYW5kIGlubGluZSBub2Rlcy5cbiAqL1xuZXhwb3J0cy5URVhUX0NPTlRBSU5FUlMgPSBfX3NwcmVhZEFycmF5KFtibG9ja3NfMS5CTE9DS1MuUEFSQUdSQVBIXSwgZXhwb3J0cy5IRUFESU5HUywgdHJ1ZSk7XG4vKipcbiAqIE5vZGUgdHlwZXMgYmVmb3JlIGB0YWJsZXNgIHJlbGVhc2UuXG4gKi9cbmV4cG9ydHMuVjFfTk9ERV9UWVBFUyA9IFtcbiAgICBibG9ja3NfMS5CTE9DS1MuRE9DVU1FTlQsXG4gICAgYmxvY2tzXzEuQkxPQ0tTLlBBUkFHUkFQSCxcbiAgICBibG9ja3NfMS5CTE9DS1MuSEVBRElOR18xLFxuICAgIGJsb2Nrc18xLkJMT0NLUy5IRUFESU5HXzIsXG4gICAgYmxvY2tzXzEuQkxPQ0tTLkhFQURJTkdfMyxcbiAgICBibG9ja3NfMS5CTE9DS1MuSEVBRElOR180LFxuICAgIGJsb2Nrc18xLkJMT0NLUy5IRUFESU5HXzUsXG4gICAgYmxvY2tzXzEuQkxPQ0tTLkhFQURJTkdfNixcbiAgICBibG9ja3NfMS5CTE9DS1MuT0xfTElTVCxcbiAgICBibG9ja3NfMS5CTE9DS1MuVUxfTElTVCxcbiAgICBibG9ja3NfMS5CTE9DS1MuTElTVF9JVEVNLFxuICAgIGJsb2Nrc18xLkJMT0NLUy5IUixcbiAgICBibG9ja3NfMS5CTE9DS1MuUVVPVEUsXG4gICAgYmxvY2tzXzEuQkxPQ0tTLkVNQkVEREVEX0VOVFJZLFxuICAgIGJsb2Nrc18xLkJMT0NLUy5FTUJFRERFRF9BU1NFVCxcbiAgICBpbmxpbmVzXzEuSU5MSU5FUy5IWVBFUkxJTkssXG4gICAgaW5saW5lc18xLklOTElORVMuRU5UUllfSFlQRVJMSU5LLFxuICAgIGlubGluZXNfMS5JTkxJTkVTLkFTU0VUX0hZUEVSTElOSyxcbiAgICBpbmxpbmVzXzEuSU5MSU5FUy5FTUJFRERFRF9FTlRSWSxcbiAgICAndGV4dCcsXG5dO1xuLyoqXG4gKiBNYXJrcyBiZWZvcmUgYHN1cGVyc2NyaXB0YCAmIGBzdWJzY3JpcHRgIHJlbGVhc2UuXG4gKi9cbmV4cG9ydHMuVjFfTUFSS1MgPSBbbWFya3NfMS5NQVJLUy5CT0xELCBtYXJrc18xLk1BUktTLkNPREUsIG1hcmtzXzEuTUFSS1MuSVRBTElDLCBtYXJrc18xLk1BUktTLlVOREVSTElORV07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zY2hlbWFDb25zdHJhaW50cy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@contentful/rich-text-types/dist/schemaConstraints.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@contentful/rich-text-types/dist/schemas/index.js":
/*!************************************************************************!*\
  !*** ./node_modules/@contentful/rich-text-types/dist/schemas/index.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getSchemaWithNodeType = getSchemaWithNodeType;\nfunction getSchemaWithNodeType(nodeType) {\n    try {\n        return __webpack_require__(\"(ssr)/./node_modules/@contentful/rich-text-types/dist/schemas/generated sync recursive ^\\\\.\\\\/.*\\\\.json$\")(\"./\".concat(nodeType, \".json\"));\n    }\n    catch (error) {\n        throw new Error(\"Schema for nodeType \\\"\".concat(nodeType, \"\\\" was not found.\"));\n    }\n}\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvbnRlbnRmdWwvcmljaC10ZXh0LXR5cGVzL2Rpc3Qvc2NoZW1hcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBLGVBQWUsZ0lBQVEsSUFBYyxrQkFBa0IsT0FBTyxDQUFDLENBQUM7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXFVTRVJcXERlc2t0b3BcXE15IFByb2plY3RzXFxSZWFjdCBQcm9qZWN0c1xcTXlQb3J0Zm9saW9cXG5vZGVfbW9kdWxlc1xcQGNvbnRlbnRmdWxcXHJpY2gtdGV4dC10eXBlc1xcZGlzdFxcc2NoZW1hc1xcaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmdldFNjaGVtYVdpdGhOb2RlVHlwZSA9IGdldFNjaGVtYVdpdGhOb2RlVHlwZTtcbmZ1bmN0aW9uIGdldFNjaGVtYVdpdGhOb2RlVHlwZShub2RlVHlwZSkge1xuICAgIHRyeSB7XG4gICAgICAgIHJldHVybiByZXF1aXJlKFwiLi9nZW5lcmF0ZWQvXCIuY29uY2F0KG5vZGVUeXBlLCBcIi5qc29uXCIpKTtcbiAgICB9XG4gICAgY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIlNjaGVtYSBmb3Igbm9kZVR5cGUgXFxcIlwiLmNvbmNhdChub2RlVHlwZSwgXCJcXFwiIHdhcyBub3QgZm91bmQuXCIpKTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@contentful/rich-text-types/dist/schemas/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@contentful/rich-text-types/dist/types.js":
/*!****************************************************************!*\
  !*** ./node_modules/@contentful/rich-text-types/dist/types.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvbnRlbnRmdWwvcmljaC10ZXh0LXR5cGVzL2Rpc3QvdHlwZXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVVNFUlxcRGVza3RvcFxcTXkgUHJvamVjdHNcXFJlYWN0IFByb2plY3RzXFxNeVBvcnRmb2xpb1xcbm9kZV9tb2R1bGVzXFxAY29udGVudGZ1bFxccmljaC10ZXh0LXR5cGVzXFxkaXN0XFx0eXBlcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXR5cGVzLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@contentful/rich-text-types/dist/types.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@contentful/content-source-maps/dist/index.js":
/*!********************************************************************!*\
  !*** ./node_modules/@contentful/content-source-maps/dist/index.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SUPPORTED_WIDGETS: () => (/* binding */ se),\n/* harmony export */   clone: () => (/* binding */ Q),\n/* harmony export */   combine: () => (/* binding */ w),\n/* harmony export */   createSourceMapMetadata: () => (/* binding */ b),\n/* harmony export */   decode: () => (/* binding */ ie),\n/* harmony export */   encode: () => (/* binding */ ce),\n/* harmony export */   encodeCPAResponse: () => (/* binding */ fe),\n/* harmony export */   encodeField: () => (/* binding */ P),\n/* harmony export */   encodeGraphQLResponse: () => (/* binding */ ue),\n/* harmony export */   encodeRichTextValue: () => (/* binding */ oe),\n/* harmony export */   isBuiltinNamespace: () => (/* binding */ B),\n/* harmony export */   isSupportedWidget: () => (/* binding */ D),\n/* harmony export */   splitEncoding: () => (/* binding */ ae)\n/* harmony export */ });\nvar W = { 0: 8203, 1: 8204, 2: 8205, 3: 8290, 4: 8291, 5: 8288, 6: 65279, 7: 8289, 8: 119155, 9: 119156, a: 119157, b: 119158, c: 119159, d: 119160, e: 119161, f: 119162 }, L = { 0: 8203, 1: 8204, 2: 8205, 3: 65279 }, j = new Array(4).fill(String.fromCodePoint(L[0])).join(\"\"), V = \"\\0\";\nfunction U(t) {\n  let n = JSON.stringify(t);\n  return `${j}${Array.from(n).map((o) => {\n    let e = o.charCodeAt(0);\n    if (e > 255) throw new Error(`Only ASCII edit info can be encoded. Error attempting to encode ${n} on character ${o} (${e})`);\n    return Array.from(e.toString(4).padStart(4, \"0\")).map((r) => String.fromCodePoint(L[r])).join(\"\");\n  }).join(\"\")}`;\n}\nfunction Z(t) {\n  return !Number.isNaN(Number(t)) || /[a-z]/i.test(t) && !/\\d+(?:[-:\\/]\\d+){2}(?:T\\d+(?:[-:\\/]\\d+){1,2}(\\.\\d+)?Z?)?/.test(t) ? !1 : !!Date.parse(t);\n}\nfunction q(t) {\n  try {\n    new URL(t, t.startsWith(\"/\") ? \"https://acme.com\" : void 0);\n  } catch (n) {\n    return !1;\n  }\n  return !0;\n}\nfunction G(t, n, o = \"auto\") {\n  return o === !0 || o === \"auto\" && (Z(t) || q(t)) ? t : `${t}${U(n)}`;\n}\nvar H = Object.fromEntries(Object.entries(L).map((t) => t.reverse())), k = Object.fromEntries(Object.entries(W).map((t) => t.reverse())), K = `${Object.values(W).map((t) => `\\\\u{${t.toString(16)}}`).join(\"\")}`, O = new RegExp(`[${K}]{4,}`, \"gu\");\nfunction X(t) {\n  let n = t.match(O);\n  if (n) return Y(n[0], !0)[0];\n}\nfunction Y(t, n = !1) {\n  let o = Array.from(t);\n  if (o.length % 2 === 0) {\n    if (o.length % 4 || !t.startsWith(j)) return ee(o, n);\n  } else throw new Error(\"Encoded data has invalid length\");\n  let e = [];\n  for (let r = o.length * 0.25; r--; ) {\n    let s = o.slice(r * 4, r * 4 + 4).map((c) => H[c.codePointAt(0)]).join(\"\");\n    e.unshift(String.fromCharCode(parseInt(s, 4)));\n  }\n  if (n) {\n    e.shift();\n    let r = e.indexOf(V);\n    return r === -1 && (r = e.length), [JSON.parse(e.slice(0, r).join(\"\"))];\n  }\n  return e.join(\"\").split(V).filter(Boolean).map((r) => JSON.parse(r));\n}\nfunction ee(t, n) {\n  var o;\n  let e = [];\n  for (let i = t.length * 0.5; i--; ) {\n    let u = `${k[t[i * 2].codePointAt(0)]}${k[t[i * 2 + 1].codePointAt(0)]}`;\n    e.unshift(String.fromCharCode(parseInt(u, 16)));\n  }\n  let r = [], s = [e.join(\"\")], c = 10;\n  for (; s.length; ) {\n    let i = s.shift();\n    try {\n      if (r.push(JSON.parse(i)), n) return r;\n    } catch (u) {\n      if (!c--) throw u;\n      let a = +((o = u.message.match(/\\sposition\\s(\\d+)$/)) == null ? void 0 : o[1]);\n      if (!a) throw u;\n      s.unshift(i.substring(0, a), i.substring(a));\n    }\n  }\n  return r;\n}\nfunction te(t) {\n  var n;\n  return { cleaned: t.replace(O, \"\"), encoded: ((n = t.match(O)) == null ? void 0 : n[0]) || \"\" };\n}\nfunction w(t, n) {\n  return G(t, n);\n}\nfunction ce(t) {\n  return U(t);\n}\nfunction ie(t) {\n  return X(t);\n}\nfunction ae(t) {\n  return te(t);\n}\nvar x, F;\nfunction ne() {\n  if (F) return x;\n  F = 1;\n  var t = Object.prototype.hasOwnProperty, n = Object.prototype.toString;\n  return x = function(e, r, s) {\n    if (n.call(r) !== \"[object Function]\")\n      throw new TypeError(\"iterator must be a function\");\n    var c = e.length;\n    if (c === +c)\n      for (var i = 0; i < c; i++)\n        r.call(s, e[i], i, e);\n    else\n      for (var u in e)\n        t.call(e, u) && r.call(s, e[u], u, e);\n  }, x;\n}\nvar I, _;\nfunction re() {\n  if (_) return I;\n  _ = 1;\n  var t = ne();\n  I = n;\n  function n(o, e, r) {\n    if (arguments.length === 3)\n      return n.set(o, e, r);\n    if (arguments.length === 2)\n      return n.get(o, e);\n    var s = n.bind(n, o);\n    for (var c in n)\n      n.hasOwnProperty(c) && (s[c] = n[c].bind(s, o));\n    return s;\n  }\n  return n.get = function(e, r) {\n    for (var s = Array.isArray(r) ? r : n.parse(r), c = 0; c < s.length; ++c) {\n      var i = s[c];\n      if (!(typeof e == \"object\" && i in e))\n        throw new Error(\"Invalid reference token: \" + i);\n      e = e[i];\n    }\n    return e;\n  }, n.set = function(e, r, s) {\n    var c = Array.isArray(r) ? r : n.parse(r), i = c[0];\n    if (c.length === 0)\n      throw Error(\"Can not set the root object\");\n    for (var u = 0; u < c.length - 1; ++u) {\n      var a = c[u];\n      typeof a != \"string\" && typeof a != \"number\" && (a = String(a)), !(a === \"__proto__\" || a === \"constructor\" || a === \"prototype\") && (a === \"-\" && Array.isArray(e) && (a = e.length), i = c[u + 1], a in e || (i.match(/^(\\d+|-)$/) ? e[a] = [] : e[a] = {}), e = e[a]);\n    }\n    return i === \"-\" && Array.isArray(e) && (i = e.length), e[i] = s, this;\n  }, n.remove = function(o, e) {\n    var r = Array.isArray(e) ? e : n.parse(e), s = r[r.length - 1];\n    if (s === void 0)\n      throw new Error('Invalid JSON pointer for remove: \"' + e + '\"');\n    var c = n.get(o, r.slice(0, -1));\n    if (Array.isArray(c)) {\n      var i = +s;\n      if (s === \"\" && isNaN(i))\n        throw new Error('Invalid array index: \"' + s + '\"');\n      Array.prototype.splice.call(c, i, 1);\n    } else\n      delete c[s];\n  }, n.dict = function(e, r) {\n    var s = {};\n    return n.walk(e, function(c, i) {\n      s[i] = c;\n    }, r), s;\n  }, n.walk = function(e, r, s) {\n    var c = [];\n    s = s || function(i) {\n      var u = Object.prototype.toString.call(i);\n      return u === \"[object Object]\" || u === \"[object Array]\";\n    }, function i(u) {\n      t(u, function(a, l) {\n        c.push(String(l)), s(a) ? i(a) : r(a, n.compile(c)), c.pop();\n      });\n    }(e);\n  }, n.has = function(e, r) {\n    try {\n      n.get(e, r);\n    } catch (s) {\n      return !1;\n    }\n    return !0;\n  }, n.escape = function(e) {\n    return e.toString().replace(/~/g, \"~0\").replace(/\\//g, \"~1\");\n  }, n.unescape = function(e) {\n    return e.replace(/~1/g, \"/\").replace(/~0/g, \"~\");\n  }, n.parse = function(e) {\n    if (e === \"\")\n      return [];\n    if (e.charAt(0) !== \"/\")\n      throw new Error(\"Invalid JSON pointer: \" + e);\n    return e.substring(1).split(/\\//).map(n.unescape);\n  }, n.compile = function(e) {\n    return e.length === 0 ? \"\" : \"/\" + e.map(n.escape).join(\"/\");\n  }, I;\n}\nvar p = re();\nconst oe = ({\n  pointer: t,\n  mappings: n,\n  data: o,\n  hiddenStrings: e\n}) => {\n  const r = n[t];\n  if (r) {\n    delete n[t];\n    const s = C(o, t);\n    for (const c of s) {\n      n[c] = r;\n      const i = p.get(o, c), u = w(i, e);\n      p.set(o, c, u);\n    }\n  } else {\n    const s = C(o, t);\n    for (const c of s) {\n      const i = p.get(o, c), u = w(i, e);\n      p.set(o, c, u);\n    }\n  }\n}, C = (t, n = \"\") => {\n  const o = [], e = p.get(t, n);\n  if (e.content)\n    for (let r = 0; r < e.content.length; r++)\n      e.content[r].nodeType === \"text\" ? o.push(`${n}/content/${r}/value`) : o.push(...C(t, `${n}/content/${r}`));\n  return o;\n}, b = ({\n  entityId: t,\n  entityType: n,\n  space: o,\n  environment: e,\n  field: r,\n  locale: s,\n  editorInterface: c,\n  fieldType: i,\n  targetOrigin: u,\n  platform: a\n}) => {\n  const d = {\n    origin: \"contentful.com\",\n    href: `${`${u || \"https://app.contentful.com\"}/spaces/${o}/environments/${e}`}/${n === \"Entry\" ? \"entries\" : \"assets\"}/${t}/?focusedField=${r}&focusedLocale=${s}&source=vercel-content-link`,\n    contentful: {\n      editorInterface: c,\n      fieldType: i\n    }\n  };\n  return a === \"vercel\" && delete d.contentful, d;\n}, B = (t) => [\"builtin\", \"sidebar-builtin\", \"editor-builtin\"].includes(t), D = (t) => se.includes(t);\nfunction Q(t) {\n  if (typeof structuredClone == \"function\")\n    return structuredClone(t);\n  try {\n    return JSON.parse(JSON.stringify(t));\n  } catch (n) {\n    return console.warn(\"Failed to clone data:\", t, n), t;\n  }\n}\nconst se = [\n  \"singleLine\",\n  \"tagEditor\",\n  \"listInput\",\n  \"checkbox\",\n  \"richTextEditor\",\n  \"multipleLine\"\n];\nfunction P(t, n, o, e, r, s, c) {\n  const i = c ? n[c] : n;\n  switch (t) {\n    case \"Symbol\": {\n      const u = w(i, o);\n      p.set(e, r, u);\n      break;\n    }\n    case \"Text\": {\n      const u = w(i, o);\n      p.set(e, r, u);\n      break;\n    }\n    case \"RichText\": {\n      oe({\n        pointer: \"\",\n        mappings: s,\n        data: i,\n        hiddenStrings: o\n      });\n      break;\n    }\n    case \"Array\": {\n      const u = i.map((a) => typeof a == \"string\" ? w(a, o) : a);\n      p.set(e, r, u);\n      break;\n    }\n  }\n}\nconst ue = (t, n, o) => {\n  if (!t || !t.extensions || !t.extensions.contentSourceMaps)\n    return console.error(\n      \"GraphQL response does not contain Content Source Maps information.\",\n      t\n    ), t;\n  const e = Q(t), {\n    spaces: r,\n    environments: s,\n    editorInterfaces: c,\n    fields: i,\n    locales: u,\n    entries: a,\n    assets: l,\n    mappings: m,\n    fieldTypes: v\n  } = e.extensions.contentSourceMaps, y = e;\n  for (const d in m) {\n    const { source: f } = m[d], h = \"entry\" in f ? a[f.entry] : l[f.asset], M = \"entry\" in f ? \"Entry\" : \"Asset\";\n    if (!h)\n      return e;\n    const g = r[h.space], A = s[h.environment], E = h.id, S = i[f.field], T = u[f.locale], N = c[f.editorInterface], J = v[f.fieldType];\n    if (!(B(N.widgetNamespace) && !D(N.widgetId)) && p.has(y, d)) {\n      const R = p.get(y, d);\n      if (R !== null) {\n        const z = b({\n          entityId: E,\n          entityType: M,\n          space: g,\n          environment: A,\n          field: S,\n          locale: T,\n          editorInterface: N,\n          fieldType: J,\n          targetOrigin: n,\n          platform: o\n        });\n        P(J, R, z, y, d, m);\n      }\n    }\n  }\n  return e;\n}, $ = (t, n, o, e, r) => {\n  if (!t.fields)\n    return;\n  const { contentSourceMaps: s } = t.sys;\n  if (!s) {\n    console.error(\"Content source maps data is missing\");\n    return;\n  }\n  const { mappings: c } = s;\n  for (const i in c) {\n    const { source: u } = c[i], a = t.sys.space.sys.id, l = t.sys.environment.sys.id, m = t.sys.id, v = t.sys.type, y = n[u.fieldType], d = o[u.editorInterface];\n    if (B(d.widgetNamespace) && !D(d.widgetId))\n      continue;\n    const f = i.startsWith(\"/\") ? i : `/${i}`;\n    if (p.has(t, f)) {\n      const h = p.get(t, f);\n      if (h === null)\n        return;\n      const g = f.split(\"/\").pop();\n      if (!g) {\n        console.error(\"Field name could not be extracted from the pointer\", f);\n        return;\n      }\n      const A = t.sys.locale;\n      if (A) {\n        const E = b({\n          entityId: m,\n          entityType: v,\n          space: a,\n          environment: l,\n          field: g,\n          locale: A,\n          editorInterface: d,\n          fieldType: y,\n          targetOrigin: e,\n          platform: r\n        });\n        P(y, h, E, t, f, c);\n      } else\n        Object.keys(h).forEach((S) => {\n          const T = b({\n            entityId: m,\n            entityType: v,\n            space: a,\n            environment: l,\n            field: g,\n            locale: S,\n            editorInterface: d,\n            fieldType: y,\n            targetOrigin: e,\n            platform: r\n          });\n          P(\n            y,\n            h,\n            T,\n            t,\n            `${f}/${S}`,\n            c,\n            S\n          );\n        });\n    }\n  }\n}, fe = (t, n, o) => {\n  var r;\n  const e = Q(\n    t\n  );\n  if (e.sys && \"items\" in e) {\n    const s = e;\n    if (!((r = s.sys) != null && r.contentSourceMapsLookup))\n      return console.error(\"Content source maps lookup data is missing\"), s;\n    const {\n      contentSourceMapsLookup: { fieldTypes: c, editorInterfaces: i }\n    } = s.sys, { items: u, includes: a } = s;\n    u.forEach(\n      (l) => $(l, c, i, n, o)\n    ), a && a.Entry && a.Entry.forEach(\n      (l) => $(l, c, i, n, o)\n    ), a && a.Asset && a.Asset.forEach(\n      (l) => $(l, c, i, n, o)\n    );\n  } else {\n    const s = e;\n    if (!s.sys.contentSourceMapsLookup)\n      return console.error(\"Content source maps lookup data is missing\"), s;\n    $(\n      s,\n      s.sys.contentSourceMapsLookup.fieldTypes,\n      s.sys.contentSourceMapsLookup.editorInterfaces,\n      n,\n      o\n    );\n  }\n  return e;\n};\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@contentful/content-source-maps/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@contentful/rich-text-types/dist/schemas/generated/asset-hyperlink.json":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@contentful/rich-text-types/dist/schemas/generated/asset-hyperlink.json ***!
  \**********************************************************************************************/
/***/ ((module) => {

module.exports = /*#__PURE__*/JSON.parse('{"$ref":"#/definitions/AssetHyperlink","definitions":{"AssetHyperlink":{"type":"object","properties":{"nodeType":{"type":"string","enum":["asset-hyperlink"]},"data":{"type":"object","properties":{"target":{"$ref":"#/definitions/Link<\\"Asset\\">"}},"additionalProperties":false,"required":["target"]},"content":{"type":"array","items":{"$ref":"#/definitions/Text"}}},"additionalProperties":false,"required":["content","data","nodeType"]},"Link<\\"Asset\\">":{"type":"object","properties":{"sys":{"type":"object","properties":{"type":{"type":"string","enum":["Link"]},"linkType":{"type":"string","enum":["Asset"]},"id":{"type":"string"}},"additionalProperties":false,"required":["id","linkType","type"]}},"additionalProperties":false,"required":["sys"]},"Text":{"type":"object","properties":{"nodeType":{"type":"string","enum":["text"]},"value":{"type":"string"},"marks":{"type":"array","items":{"$ref":"#/definitions/Mark"}},"data":{"$ref":"#/definitions/NodeData"}},"additionalProperties":false,"required":["data","marks","nodeType","value"]},"Mark":{"type":"object","properties":{"type":{"type":"string"}},"additionalProperties":false,"required":["type"]},"NodeData":{"additionalProperties":true,"type":"object"}},"$schema":"http://json-schema.org/draft-07/schema#"}');

/***/ }),

/***/ "(ssr)/./node_modules/@contentful/rich-text-types/dist/schemas/generated/blockquote.json":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@contentful/rich-text-types/dist/schemas/generated/blockquote.json ***!
  \*****************************************************************************************/
/***/ ((module) => {

module.exports = /*#__PURE__*/JSON.parse('{"$ref":"#/definitions/Quote","definitions":{"Quote":{"type":"object","properties":{"nodeType":{"type":"string","enum":["blockquote"]},"data":{"type":"object","properties":{}},"content":{"type":"array","items":{"$ref":"#/definitions/Paragraph"}}},"additionalProperties":false,"required":["content","data","nodeType"]},"Paragraph":{"type":"object","properties":{"nodeType":{"type":"string","enum":["paragraph"]},"data":{"type":"object","properties":{}},"content":{"type":"array","items":{"anyOf":[{"$ref":"#/definitions/Inline"},{"$ref":"#/definitions/Text"}]}}},"additionalProperties":false,"required":["content","data","nodeType"]},"Inline":{"type":"object","properties":{"nodeType":{"$ref":"#/definitions/INLINES"},"content":{"type":"array","items":{"anyOf":[{"$ref":"#/definitions/Inline"},{"$ref":"#/definitions/Text"}]}},"data":{"$ref":"#/definitions/NodeData"}},"additionalProperties":false,"required":["content","data","nodeType"]},"INLINES":{"description":"Map of all Contentful inline types. Inline contain inline or text nodes.","type":"string","enum":["asset-hyperlink","embedded-entry-inline","embedded-resource-inline","entry-hyperlink","hyperlink","resource-hyperlink"]},"Text":{"type":"object","properties":{"nodeType":{"type":"string","enum":["text"]},"value":{"type":"string"},"marks":{"type":"array","items":{"$ref":"#/definitions/Mark"}},"data":{"$ref":"#/definitions/NodeData"}},"additionalProperties":false,"required":["data","marks","nodeType","value"]},"Mark":{"type":"object","properties":{"type":{"type":"string"}},"additionalProperties":false,"required":["type"]},"NodeData":{"additionalProperties":true,"type":"object"}},"$schema":"http://json-schema.org/draft-07/schema#"}');

/***/ }),

/***/ "(ssr)/./node_modules/@contentful/rich-text-types/dist/schemas/generated/document.json":
/*!***************************************************************************************!*\
  !*** ./node_modules/@contentful/rich-text-types/dist/schemas/generated/document.json ***!
  \***************************************************************************************/
/***/ ((module) => {

module.exports = /*#__PURE__*/JSON.parse('{"$ref":"#/definitions/Document","definitions":{"Document":{"type":"object","properties":{"nodeType":{"type":"string","enum":["document"]},"content":{"type":"array","items":{"$ref":"#/definitions/TopLevelBlock"}},"data":{"$ref":"#/definitions/NodeData"}},"additionalProperties":false,"required":["content","data","nodeType"]},"TopLevelBlock":{"type":"object","properties":{"nodeType":{"$ref":"#/definitions/TopLevelBlockEnum"},"content":{"type":"array","items":{"anyOf":[{"$ref":"#/definitions/Block"},{"$ref":"#/definitions/Inline"},{"$ref":"#/definitions/Text"}]}},"data":{"$ref":"#/definitions/NodeData"}},"additionalProperties":false,"required":["content","data","nodeType"]},"TopLevelBlockEnum":{"enum":["blockquote","embedded-asset-block","embedded-entry-block","embedded-resource-block","heading-1","heading-2","heading-3","heading-4","heading-5","heading-6","hr","ordered-list","paragraph","table","unordered-list"],"type":"string"},"Block":{"type":"object","properties":{"nodeType":{"$ref":"#/definitions/BLOCKS"},"content":{"type":"array","items":{"anyOf":[{"$ref":"#/definitions/Block"},{"$ref":"#/definitions/Inline"},{"$ref":"#/definitions/Text"}]}},"data":{"$ref":"#/definitions/NodeData"}},"additionalProperties":false,"required":["content","data","nodeType"]},"BLOCKS":{"description":"Map of all Contentful block types. Blocks contain inline or block nodes.","type":"string","enum":["document","paragraph","heading-1","heading-2","heading-3","heading-4","heading-5","heading-6","ordered-list","unordered-list","list-item","hr","blockquote","embedded-entry-block","embedded-asset-block","embedded-resource-block","table","table-row","table-cell","table-header-cell"]},"Inline":{"type":"object","properties":{"nodeType":{"$ref":"#/definitions/INLINES"},"content":{"type":"array","items":{"anyOf":[{"$ref":"#/definitions/Inline"},{"$ref":"#/definitions/Text"}]}},"data":{"$ref":"#/definitions/NodeData"}},"additionalProperties":false,"required":["content","data","nodeType"]},"INLINES":{"description":"Map of all Contentful inline types. Inline contain inline or text nodes.","type":"string","enum":["asset-hyperlink","embedded-entry-inline","embedded-resource-inline","entry-hyperlink","hyperlink","resource-hyperlink"]},"Text":{"type":"object","properties":{"nodeType":{"type":"string","enum":["text"]},"value":{"type":"string"},"marks":{"type":"array","items":{"$ref":"#/definitions/Mark"}},"data":{"$ref":"#/definitions/NodeData"}},"additionalProperties":false,"required":["data","marks","nodeType","value"]},"Mark":{"type":"object","properties":{"type":{"type":"string"}},"additionalProperties":false,"required":["type"]},"NodeData":{"additionalProperties":true,"type":"object"}},"$schema":"http://json-schema.org/draft-07/schema#"}');

/***/ }),

/***/ "(ssr)/./node_modules/@contentful/rich-text-types/dist/schemas/generated/embedded-asset-block.json":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@contentful/rich-text-types/dist/schemas/generated/embedded-asset-block.json ***!
  \***************************************************************************************************/
/***/ ((module) => {

module.exports = /*#__PURE__*/JSON.parse('{"$ref":"#/definitions/AssetLinkBlock","definitions":{"AssetLinkBlock":{"type":"object","properties":{"nodeType":{"type":"string","enum":["embedded-asset-block"]},"data":{"type":"object","properties":{"target":{"$ref":"#/definitions/Link<\\"Asset\\">"}},"additionalProperties":false,"required":["target"]},"content":{"maxItems":0,"type":"array","items":{"anyOf":[{"$ref":"#/definitions/Inline"},{"$ref":"#/definitions/Text"}]}}},"additionalProperties":false,"required":["content","data","nodeType"]},"Link<\\"Asset\\">":{"type":"object","properties":{"sys":{"type":"object","properties":{"type":{"type":"string","enum":["Link"]},"linkType":{"type":"string","enum":["Asset"]},"id":{"type":"string"}},"additionalProperties":false,"required":["id","linkType","type"]}},"additionalProperties":false,"required":["sys"]},"Inline":{"type":"object","properties":{"nodeType":{"$ref":"#/definitions/INLINES"},"content":{"type":"array","items":{"anyOf":[{"$ref":"#/definitions/Inline"},{"$ref":"#/definitions/Text"}]}},"data":{"$ref":"#/definitions/NodeData"}},"additionalProperties":false,"required":["content","data","nodeType"]},"INLINES":{"description":"Map of all Contentful inline types. Inline contain inline or text nodes.","type":"string","enum":["asset-hyperlink","embedded-entry-inline","embedded-resource-inline","entry-hyperlink","hyperlink","resource-hyperlink"]},"Text":{"type":"object","properties":{"nodeType":{"type":"string","enum":["text"]},"value":{"type":"string"},"marks":{"type":"array","items":{"$ref":"#/definitions/Mark"}},"data":{"$ref":"#/definitions/NodeData"}},"additionalProperties":false,"required":["data","marks","nodeType","value"]},"Mark":{"type":"object","properties":{"type":{"type":"string"}},"additionalProperties":false,"required":["type"]},"NodeData":{"additionalProperties":true,"type":"object"}},"$schema":"http://json-schema.org/draft-07/schema#"}');

/***/ }),

/***/ "(ssr)/./node_modules/@contentful/rich-text-types/dist/schemas/generated/embedded-entry-block.json":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@contentful/rich-text-types/dist/schemas/generated/embedded-entry-block.json ***!
  \***************************************************************************************************/
/***/ ((module) => {

module.exports = /*#__PURE__*/JSON.parse('{"$ref":"#/definitions/EntryLinkBlock","definitions":{"EntryLinkBlock":{"type":"object","properties":{"nodeType":{"type":"string","enum":["embedded-entry-block"]},"data":{"type":"object","properties":{"target":{"$ref":"#/definitions/Link<\\"Entry\\">"}},"additionalProperties":false,"required":["target"]},"content":{"maxItems":0,"type":"array","items":{"anyOf":[{"$ref":"#/definitions/Inline"},{"$ref":"#/definitions/Text"}]}}},"additionalProperties":false,"required":["content","data","nodeType"]},"Link<\\"Entry\\">":{"type":"object","properties":{"sys":{"type":"object","properties":{"type":{"type":"string","enum":["Link"]},"linkType":{"type":"string","enum":["Entry"]},"id":{"type":"string"}},"additionalProperties":false,"required":["id","linkType","type"]}},"additionalProperties":false,"required":["sys"]},"Inline":{"type":"object","properties":{"nodeType":{"$ref":"#/definitions/INLINES"},"content":{"type":"array","items":{"anyOf":[{"$ref":"#/definitions/Inline"},{"$ref":"#/definitions/Text"}]}},"data":{"$ref":"#/definitions/NodeData"}},"additionalProperties":false,"required":["content","data","nodeType"]},"INLINES":{"description":"Map of all Contentful inline types. Inline contain inline or text nodes.","type":"string","enum":["asset-hyperlink","embedded-entry-inline","embedded-resource-inline","entry-hyperlink","hyperlink","resource-hyperlink"]},"Text":{"type":"object","properties":{"nodeType":{"type":"string","enum":["text"]},"value":{"type":"string"},"marks":{"type":"array","items":{"$ref":"#/definitions/Mark"}},"data":{"$ref":"#/definitions/NodeData"}},"additionalProperties":false,"required":["data","marks","nodeType","value"]},"Mark":{"type":"object","properties":{"type":{"type":"string"}},"additionalProperties":false,"required":["type"]},"NodeData":{"additionalProperties":true,"type":"object"}},"$schema":"http://json-schema.org/draft-07/schema#"}');

/***/ }),

/***/ "(ssr)/./node_modules/@contentful/rich-text-types/dist/schemas/generated/embedded-entry-inline.json":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@contentful/rich-text-types/dist/schemas/generated/embedded-entry-inline.json ***!
  \****************************************************************************************************/
/***/ ((module) => {

module.exports = /*#__PURE__*/JSON.parse('{"$ref":"#/definitions/EntryLinkInline","definitions":{"EntryLinkInline":{"type":"object","properties":{"nodeType":{"type":"string","enum":["embedded-entry-inline"]},"data":{"type":"object","properties":{"target":{"$ref":"#/definitions/Link<\\"Entry\\">"}},"additionalProperties":false,"required":["target"]},"content":{"maxItems":0,"type":"array","items":{"$ref":"#/definitions/Text"}}},"additionalProperties":false,"required":["content","data","nodeType"]},"Link<\\"Entry\\">":{"type":"object","properties":{"sys":{"type":"object","properties":{"type":{"type":"string","enum":["Link"]},"linkType":{"type":"string","enum":["Entry"]},"id":{"type":"string"}},"additionalProperties":false,"required":["id","linkType","type"]}},"additionalProperties":false,"required":["sys"]},"Text":{"type":"object","properties":{"nodeType":{"type":"string","enum":["text"]},"value":{"type":"string"},"marks":{"type":"array","items":{"$ref":"#/definitions/Mark"}},"data":{"$ref":"#/definitions/NodeData"}},"additionalProperties":false,"required":["data","marks","nodeType","value"]},"Mark":{"type":"object","properties":{"type":{"type":"string"}},"additionalProperties":false,"required":["type"]},"NodeData":{"additionalProperties":true,"type":"object"}},"$schema":"http://json-schema.org/draft-07/schema#"}');

/***/ }),

/***/ "(ssr)/./node_modules/@contentful/rich-text-types/dist/schemas/generated/embedded-resource-block.json":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@contentful/rich-text-types/dist/schemas/generated/embedded-resource-block.json ***!
  \******************************************************************************************************/
/***/ ((module) => {

module.exports = /*#__PURE__*/JSON.parse('{"$ref":"#/definitions/ResourceLinkBlock","definitions":{"ResourceLinkBlock":{"type":"object","properties":{"nodeType":{"type":"string","enum":["embedded-resource-block"]},"data":{"type":"object","properties":{"target":{"$ref":"#/definitions/ResourceLink"}},"additionalProperties":false,"required":["target"]},"content":{"maxItems":0,"type":"array","items":{"anyOf":[{"$ref":"#/definitions/Inline"},{"$ref":"#/definitions/Text"}]}}},"additionalProperties":false,"required":["content","data","nodeType"]},"ResourceLink":{"type":"object","properties":{"sys":{"type":"object","properties":{"type":{"type":"string","enum":["ResourceLink"]},"linkType":{"type":"string","enum":["Contentful:Entry"]},"urn":{"type":"string"}},"additionalProperties":false,"required":["linkType","type","urn"]}},"additionalProperties":false,"required":["sys"]},"Inline":{"type":"object","properties":{"nodeType":{"$ref":"#/definitions/INLINES"},"content":{"type":"array","items":{"anyOf":[{"$ref":"#/definitions/Inline"},{"$ref":"#/definitions/Text"}]}},"data":{"$ref":"#/definitions/NodeData"}},"additionalProperties":false,"required":["content","data","nodeType"]},"INLINES":{"description":"Map of all Contentful inline types. Inline contain inline or text nodes.","type":"string","enum":["asset-hyperlink","embedded-entry-inline","embedded-resource-inline","entry-hyperlink","hyperlink","resource-hyperlink"]},"Text":{"type":"object","properties":{"nodeType":{"type":"string","enum":["text"]},"value":{"type":"string"},"marks":{"type":"array","items":{"$ref":"#/definitions/Mark"}},"data":{"$ref":"#/definitions/NodeData"}},"additionalProperties":false,"required":["data","marks","nodeType","value"]},"Mark":{"type":"object","properties":{"type":{"type":"string"}},"additionalProperties":false,"required":["type"]},"NodeData":{"additionalProperties":true,"type":"object"}},"$schema":"http://json-schema.org/draft-07/schema#"}');

/***/ }),

/***/ "(ssr)/./node_modules/@contentful/rich-text-types/dist/schemas/generated/embedded-resource-inline.json":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@contentful/rich-text-types/dist/schemas/generated/embedded-resource-inline.json ***!
  \*******************************************************************************************************/
/***/ ((module) => {

module.exports = /*#__PURE__*/JSON.parse('{"$ref":"#/definitions/ResourceLinkInline","definitions":{"ResourceLinkInline":{"type":"object","properties":{"nodeType":{"type":"string","enum":["embedded-resource-inline"]},"data":{"type":"object","properties":{"target":{"$ref":"#/definitions/ResourceLink"}},"additionalProperties":false,"required":["target"]},"content":{"maxItems":0,"type":"array","items":{"$ref":"#/definitions/Text"}}},"additionalProperties":false,"required":["content","data","nodeType"]},"ResourceLink":{"type":"object","properties":{"sys":{"type":"object","properties":{"type":{"type":"string","enum":["ResourceLink"]},"linkType":{"type":"string","enum":["Contentful:Entry"]},"urn":{"type":"string"}},"additionalProperties":false,"required":["linkType","type","urn"]}},"additionalProperties":false,"required":["sys"]},"Text":{"type":"object","properties":{"nodeType":{"type":"string","enum":["text"]},"value":{"type":"string"},"marks":{"type":"array","items":{"$ref":"#/definitions/Mark"}},"data":{"$ref":"#/definitions/NodeData"}},"additionalProperties":false,"required":["data","marks","nodeType","value"]},"Mark":{"type":"object","properties":{"type":{"type":"string"}},"additionalProperties":false,"required":["type"]},"NodeData":{"additionalProperties":true,"type":"object"}},"$schema":"http://json-schema.org/draft-07/schema#"}');

/***/ }),

/***/ "(ssr)/./node_modules/@contentful/rich-text-types/dist/schemas/generated/entry-hyperlink.json":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@contentful/rich-text-types/dist/schemas/generated/entry-hyperlink.json ***!
  \**********************************************************************************************/
/***/ ((module) => {

module.exports = /*#__PURE__*/JSON.parse('{"$ref":"#/definitions/EntryHyperlink","definitions":{"EntryHyperlink":{"type":"object","properties":{"nodeType":{"type":"string","enum":["entry-hyperlink"]},"data":{"type":"object","properties":{"target":{"$ref":"#/definitions/Link<\\"Entry\\">"}},"additionalProperties":false,"required":["target"]},"content":{"type":"array","items":{"$ref":"#/definitions/Text"}}},"additionalProperties":false,"required":["content","data","nodeType"]},"Link<\\"Entry\\">":{"type":"object","properties":{"sys":{"type":"object","properties":{"type":{"type":"string","enum":["Link"]},"linkType":{"type":"string","enum":["Entry"]},"id":{"type":"string"}},"additionalProperties":false,"required":["id","linkType","type"]}},"additionalProperties":false,"required":["sys"]},"Text":{"type":"object","properties":{"nodeType":{"type":"string","enum":["text"]},"value":{"type":"string"},"marks":{"type":"array","items":{"$ref":"#/definitions/Mark"}},"data":{"$ref":"#/definitions/NodeData"}},"additionalProperties":false,"required":["data","marks","nodeType","value"]},"Mark":{"type":"object","properties":{"type":{"type":"string"}},"additionalProperties":false,"required":["type"]},"NodeData":{"additionalProperties":true,"type":"object"}},"$schema":"http://json-schema.org/draft-07/schema#"}');

/***/ }),

/***/ "(ssr)/./node_modules/@contentful/rich-text-types/dist/schemas/generated/heading-1.json":
/*!****************************************************************************************!*\
  !*** ./node_modules/@contentful/rich-text-types/dist/schemas/generated/heading-1.json ***!
  \****************************************************************************************/
/***/ ((module) => {

module.exports = /*#__PURE__*/JSON.parse('{"$ref":"#/definitions/Heading1","definitions":{"Heading1":{"type":"object","properties":{"nodeType":{"type":"string","enum":["heading-1"]},"data":{"type":"object","properties":{}},"content":{"type":"array","items":{"anyOf":[{"$ref":"#/definitions/Inline"},{"$ref":"#/definitions/Text"}]}}},"additionalProperties":false,"required":["content","data","nodeType"]},"Inline":{"type":"object","properties":{"nodeType":{"$ref":"#/definitions/INLINES"},"content":{"type":"array","items":{"anyOf":[{"$ref":"#/definitions/Inline"},{"$ref":"#/definitions/Text"}]}},"data":{"$ref":"#/definitions/NodeData"}},"additionalProperties":false,"required":["content","data","nodeType"]},"INLINES":{"description":"Map of all Contentful inline types. Inline contain inline or text nodes.","type":"string","enum":["asset-hyperlink","embedded-entry-inline","embedded-resource-inline","entry-hyperlink","hyperlink","resource-hyperlink"]},"Text":{"type":"object","properties":{"nodeType":{"type":"string","enum":["text"]},"value":{"type":"string"},"marks":{"type":"array","items":{"$ref":"#/definitions/Mark"}},"data":{"$ref":"#/definitions/NodeData"}},"additionalProperties":false,"required":["data","marks","nodeType","value"]},"Mark":{"type":"object","properties":{"type":{"type":"string"}},"additionalProperties":false,"required":["type"]},"NodeData":{"additionalProperties":true,"type":"object"}},"$schema":"http://json-schema.org/draft-07/schema#"}');

/***/ }),

/***/ "(ssr)/./node_modules/@contentful/rich-text-types/dist/schemas/generated/heading-2.json":
/*!****************************************************************************************!*\
  !*** ./node_modules/@contentful/rich-text-types/dist/schemas/generated/heading-2.json ***!
  \****************************************************************************************/
/***/ ((module) => {

module.exports = /*#__PURE__*/JSON.parse('{"$ref":"#/definitions/Heading2","definitions":{"Heading2":{"type":"object","properties":{"nodeType":{"type":"string","enum":["heading-2"]},"data":{"type":"object","properties":{}},"content":{"type":"array","items":{"anyOf":[{"$ref":"#/definitions/Inline"},{"$ref":"#/definitions/Text"}]}}},"additionalProperties":false,"required":["content","data","nodeType"]},"Inline":{"type":"object","properties":{"nodeType":{"$ref":"#/definitions/INLINES"},"content":{"type":"array","items":{"anyOf":[{"$ref":"#/definitions/Inline"},{"$ref":"#/definitions/Text"}]}},"data":{"$ref":"#/definitions/NodeData"}},"additionalProperties":false,"required":["content","data","nodeType"]},"INLINES":{"description":"Map of all Contentful inline types. Inline contain inline or text nodes.","type":"string","enum":["asset-hyperlink","embedded-entry-inline","embedded-resource-inline","entry-hyperlink","hyperlink","resource-hyperlink"]},"Text":{"type":"object","properties":{"nodeType":{"type":"string","enum":["text"]},"value":{"type":"string"},"marks":{"type":"array","items":{"$ref":"#/definitions/Mark"}},"data":{"$ref":"#/definitions/NodeData"}},"additionalProperties":false,"required":["data","marks","nodeType","value"]},"Mark":{"type":"object","properties":{"type":{"type":"string"}},"additionalProperties":false,"required":["type"]},"NodeData":{"additionalProperties":true,"type":"object"}},"$schema":"http://json-schema.org/draft-07/schema#"}');

/***/ }),

/***/ "(ssr)/./node_modules/@contentful/rich-text-types/dist/schemas/generated/heading-3.json":
/*!****************************************************************************************!*\
  !*** ./node_modules/@contentful/rich-text-types/dist/schemas/generated/heading-3.json ***!
  \****************************************************************************************/
/***/ ((module) => {

module.exports = /*#__PURE__*/JSON.parse('{"$ref":"#/definitions/Heading3","definitions":{"Heading3":{"type":"object","properties":{"nodeType":{"type":"string","enum":["heading-3"]},"data":{"type":"object","properties":{}},"content":{"type":"array","items":{"anyOf":[{"$ref":"#/definitions/Inline"},{"$ref":"#/definitions/Text"}]}}},"additionalProperties":false,"required":["content","data","nodeType"]},"Inline":{"type":"object","properties":{"nodeType":{"$ref":"#/definitions/INLINES"},"content":{"type":"array","items":{"anyOf":[{"$ref":"#/definitions/Inline"},{"$ref":"#/definitions/Text"}]}},"data":{"$ref":"#/definitions/NodeData"}},"additionalProperties":false,"required":["content","data","nodeType"]},"INLINES":{"description":"Map of all Contentful inline types. Inline contain inline or text nodes.","type":"string","enum":["asset-hyperlink","embedded-entry-inline","embedded-resource-inline","entry-hyperlink","hyperlink","resource-hyperlink"]},"Text":{"type":"object","properties":{"nodeType":{"type":"string","enum":["text"]},"value":{"type":"string"},"marks":{"type":"array","items":{"$ref":"#/definitions/Mark"}},"data":{"$ref":"#/definitions/NodeData"}},"additionalProperties":false,"required":["data","marks","nodeType","value"]},"Mark":{"type":"object","properties":{"type":{"type":"string"}},"additionalProperties":false,"required":["type"]},"NodeData":{"additionalProperties":true,"type":"object"}},"$schema":"http://json-schema.org/draft-07/schema#"}');

/***/ }),

/***/ "(ssr)/./node_modules/@contentful/rich-text-types/dist/schemas/generated/heading-4.json":
/*!****************************************************************************************!*\
  !*** ./node_modules/@contentful/rich-text-types/dist/schemas/generated/heading-4.json ***!
  \****************************************************************************************/
/***/ ((module) => {

module.exports = /*#__PURE__*/JSON.parse('{"$ref":"#/definitions/Heading4","definitions":{"Heading4":{"type":"object","properties":{"nodeType":{"type":"string","enum":["heading-4"]},"data":{"type":"object","properties":{}},"content":{"type":"array","items":{"anyOf":[{"$ref":"#/definitions/Inline"},{"$ref":"#/definitions/Text"}]}}},"additionalProperties":false,"required":["content","data","nodeType"]},"Inline":{"type":"object","properties":{"nodeType":{"$ref":"#/definitions/INLINES"},"content":{"type":"array","items":{"anyOf":[{"$ref":"#/definitions/Inline"},{"$ref":"#/definitions/Text"}]}},"data":{"$ref":"#/definitions/NodeData"}},"additionalProperties":false,"required":["content","data","nodeType"]},"INLINES":{"description":"Map of all Contentful inline types. Inline contain inline or text nodes.","type":"string","enum":["asset-hyperlink","embedded-entry-inline","embedded-resource-inline","entry-hyperlink","hyperlink","resource-hyperlink"]},"Text":{"type":"object","properties":{"nodeType":{"type":"string","enum":["text"]},"value":{"type":"string"},"marks":{"type":"array","items":{"$ref":"#/definitions/Mark"}},"data":{"$ref":"#/definitions/NodeData"}},"additionalProperties":false,"required":["data","marks","nodeType","value"]},"Mark":{"type":"object","properties":{"type":{"type":"string"}},"additionalProperties":false,"required":["type"]},"NodeData":{"additionalProperties":true,"type":"object"}},"$schema":"http://json-schema.org/draft-07/schema#"}');

/***/ }),

/***/ "(ssr)/./node_modules/@contentful/rich-text-types/dist/schemas/generated/heading-5.json":
/*!****************************************************************************************!*\
  !*** ./node_modules/@contentful/rich-text-types/dist/schemas/generated/heading-5.json ***!
  \****************************************************************************************/
/***/ ((module) => {

module.exports = /*#__PURE__*/JSON.parse('{"$ref":"#/definitions/Heading5","definitions":{"Heading5":{"type":"object","properties":{"nodeType":{"type":"string","enum":["heading-5"]},"data":{"type":"object","properties":{}},"content":{"type":"array","items":{"anyOf":[{"$ref":"#/definitions/Inline"},{"$ref":"#/definitions/Text"}]}}},"additionalProperties":false,"required":["content","data","nodeType"]},"Inline":{"type":"object","properties":{"nodeType":{"$ref":"#/definitions/INLINES"},"content":{"type":"array","items":{"anyOf":[{"$ref":"#/definitions/Inline"},{"$ref":"#/definitions/Text"}]}},"data":{"$ref":"#/definitions/NodeData"}},"additionalProperties":false,"required":["content","data","nodeType"]},"INLINES":{"description":"Map of all Contentful inline types. Inline contain inline or text nodes.","type":"string","enum":["asset-hyperlink","embedded-entry-inline","embedded-resource-inline","entry-hyperlink","hyperlink","resource-hyperlink"]},"Text":{"type":"object","properties":{"nodeType":{"type":"string","enum":["text"]},"value":{"type":"string"},"marks":{"type":"array","items":{"$ref":"#/definitions/Mark"}},"data":{"$ref":"#/definitions/NodeData"}},"additionalProperties":false,"required":["data","marks","nodeType","value"]},"Mark":{"type":"object","properties":{"type":{"type":"string"}},"additionalProperties":false,"required":["type"]},"NodeData":{"additionalProperties":true,"type":"object"}},"$schema":"http://json-schema.org/draft-07/schema#"}');

/***/ }),

/***/ "(ssr)/./node_modules/@contentful/rich-text-types/dist/schemas/generated/heading-6.json":
/*!****************************************************************************************!*\
  !*** ./node_modules/@contentful/rich-text-types/dist/schemas/generated/heading-6.json ***!
  \****************************************************************************************/
/***/ ((module) => {

module.exports = /*#__PURE__*/JSON.parse('{"$ref":"#/definitions/Heading6","definitions":{"Heading6":{"type":"object","properties":{"nodeType":{"type":"string","enum":["heading-6"]},"data":{"type":"object","properties":{}},"content":{"type":"array","items":{"anyOf":[{"$ref":"#/definitions/Inline"},{"$ref":"#/definitions/Text"}]}}},"additionalProperties":false,"required":["content","data","nodeType"]},"Inline":{"type":"object","properties":{"nodeType":{"$ref":"#/definitions/INLINES"},"content":{"type":"array","items":{"anyOf":[{"$ref":"#/definitions/Inline"},{"$ref":"#/definitions/Text"}]}},"data":{"$ref":"#/definitions/NodeData"}},"additionalProperties":false,"required":["content","data","nodeType"]},"INLINES":{"description":"Map of all Contentful inline types. Inline contain inline or text nodes.","type":"string","enum":["asset-hyperlink","embedded-entry-inline","embedded-resource-inline","entry-hyperlink","hyperlink","resource-hyperlink"]},"Text":{"type":"object","properties":{"nodeType":{"type":"string","enum":["text"]},"value":{"type":"string"},"marks":{"type":"array","items":{"$ref":"#/definitions/Mark"}},"data":{"$ref":"#/definitions/NodeData"}},"additionalProperties":false,"required":["data","marks","nodeType","value"]},"Mark":{"type":"object","properties":{"type":{"type":"string"}},"additionalProperties":false,"required":["type"]},"NodeData":{"additionalProperties":true,"type":"object"}},"$schema":"http://json-schema.org/draft-07/schema#"}');

/***/ }),

/***/ "(ssr)/./node_modules/@contentful/rich-text-types/dist/schemas/generated/hr.json":
/*!*********************************************************************************!*\
  !*** ./node_modules/@contentful/rich-text-types/dist/schemas/generated/hr.json ***!
  \*********************************************************************************/
/***/ ((module) => {

module.exports = /*#__PURE__*/JSON.parse('{"$ref":"#/definitions/Hr","definitions":{"Hr":{"type":"object","properties":{"nodeType":{"type":"string","enum":["hr"]},"data":{"maxItems":0,"type":"object","properties":{}},"content":{"type":"array","items":{"anyOf":[{"$ref":"#/definitions/Inline"},{"$ref":"#/definitions/Text"}]}}},"additionalProperties":false,"required":["content","data","nodeType"]},"Inline":{"type":"object","properties":{"nodeType":{"$ref":"#/definitions/INLINES"},"content":{"type":"array","items":{"anyOf":[{"$ref":"#/definitions/Inline"},{"$ref":"#/definitions/Text"}]}},"data":{"$ref":"#/definitions/NodeData"}},"additionalProperties":false,"required":["content","data","nodeType"]},"INLINES":{"description":"Map of all Contentful inline types. Inline contain inline or text nodes.","type":"string","enum":["asset-hyperlink","embedded-entry-inline","embedded-resource-inline","entry-hyperlink","hyperlink","resource-hyperlink"]},"Text":{"type":"object","properties":{"nodeType":{"type":"string","enum":["text"]},"value":{"type":"string"},"marks":{"type":"array","items":{"$ref":"#/definitions/Mark"}},"data":{"$ref":"#/definitions/NodeData"}},"additionalProperties":false,"required":["data","marks","nodeType","value"]},"Mark":{"type":"object","properties":{"type":{"type":"string"}},"additionalProperties":false,"required":["type"]},"NodeData":{"additionalProperties":true,"type":"object"}},"$schema":"http://json-schema.org/draft-07/schema#"}');

/***/ }),

/***/ "(ssr)/./node_modules/@contentful/rich-text-types/dist/schemas/generated/hyperlink.json":
/*!****************************************************************************************!*\
  !*** ./node_modules/@contentful/rich-text-types/dist/schemas/generated/hyperlink.json ***!
  \****************************************************************************************/
/***/ ((module) => {

module.exports = /*#__PURE__*/JSON.parse('{"$ref":"#/definitions/Hyperlink","definitions":{"Hyperlink":{"type":"object","properties":{"nodeType":{"type":"string","enum":["hyperlink"]},"data":{"type":"object","properties":{"uri":{"type":"string"}},"additionalProperties":false,"required":["uri"]},"content":{"type":"array","items":{"$ref":"#/definitions/Text"}}},"additionalProperties":false,"required":["content","data","nodeType"]},"Text":{"type":"object","properties":{"nodeType":{"type":"string","enum":["text"]},"value":{"type":"string"},"marks":{"type":"array","items":{"$ref":"#/definitions/Mark"}},"data":{"$ref":"#/definitions/NodeData"}},"additionalProperties":false,"required":["data","marks","nodeType","value"]},"Mark":{"type":"object","properties":{"type":{"type":"string"}},"additionalProperties":false,"required":["type"]},"NodeData":{"additionalProperties":true,"type":"object"}},"$schema":"http://json-schema.org/draft-07/schema#"}');

/***/ }),

/***/ "(ssr)/./node_modules/@contentful/rich-text-types/dist/schemas/generated/list-item.json":
/*!****************************************************************************************!*\
  !*** ./node_modules/@contentful/rich-text-types/dist/schemas/generated/list-item.json ***!
  \****************************************************************************************/
/***/ ((module) => {

module.exports = /*#__PURE__*/JSON.parse('{"$ref":"#/definitions/ListItem","definitions":{"ListItem":{"type":"object","properties":{"nodeType":{"type":"string","enum":["list-item"]},"data":{"type":"object","properties":{}},"content":{"type":"array","items":{"$ref":"#/definitions/ListItemBlock"}}},"additionalProperties":false,"required":["content","data","nodeType"]},"ListItemBlock":{"type":"object","properties":{"nodeType":{"$ref":"#/definitions/ListItemBlockEnum"},"content":{"type":"array","items":{"anyOf":[{"$ref":"#/definitions/Block"},{"$ref":"#/definitions/Inline"},{"$ref":"#/definitions/Text"}]}},"data":{"$ref":"#/definitions/NodeData"}},"additionalProperties":false,"required":["content","data","nodeType"]},"ListItemBlockEnum":{"enum":["blockquote","embedded-asset-block","embedded-entry-block","embedded-resource-block","heading-1","heading-2","heading-3","heading-4","heading-5","heading-6","hr","ordered-list","paragraph","unordered-list"],"type":"string"},"Block":{"type":"object","properties":{"nodeType":{"$ref":"#/definitions/BLOCKS"},"content":{"type":"array","items":{"anyOf":[{"$ref":"#/definitions/Block"},{"$ref":"#/definitions/Inline"},{"$ref":"#/definitions/Text"}]}},"data":{"$ref":"#/definitions/NodeData"}},"additionalProperties":false,"required":["content","data","nodeType"]},"BLOCKS":{"description":"Map of all Contentful block types. Blocks contain inline or block nodes.","type":"string","enum":["document","paragraph","heading-1","heading-2","heading-3","heading-4","heading-5","heading-6","ordered-list","unordered-list","list-item","hr","blockquote","embedded-entry-block","embedded-asset-block","embedded-resource-block","table","table-row","table-cell","table-header-cell"]},"Inline":{"type":"object","properties":{"nodeType":{"$ref":"#/definitions/INLINES"},"content":{"type":"array","items":{"anyOf":[{"$ref":"#/definitions/Inline"},{"$ref":"#/definitions/Text"}]}},"data":{"$ref":"#/definitions/NodeData"}},"additionalProperties":false,"required":["content","data","nodeType"]},"INLINES":{"description":"Map of all Contentful inline types. Inline contain inline or text nodes.","type":"string","enum":["asset-hyperlink","embedded-entry-inline","embedded-resource-inline","entry-hyperlink","hyperlink","resource-hyperlink"]},"Text":{"type":"object","properties":{"nodeType":{"type":"string","enum":["text"]},"value":{"type":"string"},"marks":{"type":"array","items":{"$ref":"#/definitions/Mark"}},"data":{"$ref":"#/definitions/NodeData"}},"additionalProperties":false,"required":["data","marks","nodeType","value"]},"Mark":{"type":"object","properties":{"type":{"type":"string"}},"additionalProperties":false,"required":["type"]},"NodeData":{"additionalProperties":true,"type":"object"}},"$schema":"http://json-schema.org/draft-07/schema#"}');

/***/ }),

/***/ "(ssr)/./node_modules/@contentful/rich-text-types/dist/schemas/generated/ordered-list.json":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@contentful/rich-text-types/dist/schemas/generated/ordered-list.json ***!
  \*******************************************************************************************/
/***/ ((module) => {

module.exports = /*#__PURE__*/JSON.parse('{"$ref":"#/definitions/OrderedList","definitions":{"OrderedList":{"type":"object","properties":{"nodeType":{"type":"string","enum":["ordered-list"]},"data":{"type":"object","properties":{}},"content":{"type":"array","items":{"$ref":"#/definitions/ListItem"}}},"additionalProperties":false,"required":["content","data","nodeType"]},"ListItem":{"type":"object","properties":{"nodeType":{"type":"string","enum":["list-item"]},"data":{"type":"object","properties":{}},"content":{"type":"array","items":{"$ref":"#/definitions/ListItemBlock"}}},"additionalProperties":false,"required":["content","data","nodeType"]},"ListItemBlock":{"type":"object","properties":{"nodeType":{"$ref":"#/definitions/ListItemBlockEnum"},"content":{"type":"array","items":{"anyOf":[{"$ref":"#/definitions/Block"},{"$ref":"#/definitions/Inline"},{"$ref":"#/definitions/Text"}]}},"data":{"$ref":"#/definitions/NodeData"}},"additionalProperties":false,"required":["content","data","nodeType"]},"ListItemBlockEnum":{"enum":["blockquote","embedded-asset-block","embedded-entry-block","embedded-resource-block","heading-1","heading-2","heading-3","heading-4","heading-5","heading-6","hr","ordered-list","paragraph","unordered-list"],"type":"string"},"Block":{"type":"object","properties":{"nodeType":{"$ref":"#/definitions/BLOCKS"},"content":{"type":"array","items":{"anyOf":[{"$ref":"#/definitions/Block"},{"$ref":"#/definitions/Inline"},{"$ref":"#/definitions/Text"}]}},"data":{"$ref":"#/definitions/NodeData"}},"additionalProperties":false,"required":["content","data","nodeType"]},"BLOCKS":{"description":"Map of all Contentful block types. Blocks contain inline or block nodes.","type":"string","enum":["document","paragraph","heading-1","heading-2","heading-3","heading-4","heading-5","heading-6","ordered-list","unordered-list","list-item","hr","blockquote","embedded-entry-block","embedded-asset-block","embedded-resource-block","table","table-row","table-cell","table-header-cell"]},"Inline":{"type":"object","properties":{"nodeType":{"$ref":"#/definitions/INLINES"},"content":{"type":"array","items":{"anyOf":[{"$ref":"#/definitions/Inline"},{"$ref":"#/definitions/Text"}]}},"data":{"$ref":"#/definitions/NodeData"}},"additionalProperties":false,"required":["content","data","nodeType"]},"INLINES":{"description":"Map of all Contentful inline types. Inline contain inline or text nodes.","type":"string","enum":["asset-hyperlink","embedded-entry-inline","embedded-resource-inline","entry-hyperlink","hyperlink","resource-hyperlink"]},"Text":{"type":"object","properties":{"nodeType":{"type":"string","enum":["text"]},"value":{"type":"string"},"marks":{"type":"array","items":{"$ref":"#/definitions/Mark"}},"data":{"$ref":"#/definitions/NodeData"}},"additionalProperties":false,"required":["data","marks","nodeType","value"]},"Mark":{"type":"object","properties":{"type":{"type":"string"}},"additionalProperties":false,"required":["type"]},"NodeData":{"additionalProperties":true,"type":"object"}},"$schema":"http://json-schema.org/draft-07/schema#"}');

/***/ }),

/***/ "(ssr)/./node_modules/@contentful/rich-text-types/dist/schemas/generated/paragraph.json":
/*!****************************************************************************************!*\
  !*** ./node_modules/@contentful/rich-text-types/dist/schemas/generated/paragraph.json ***!
  \****************************************************************************************/
/***/ ((module) => {

module.exports = /*#__PURE__*/JSON.parse('{"$ref":"#/definitions/Paragraph","definitions":{"Paragraph":{"type":"object","properties":{"nodeType":{"type":"string","enum":["paragraph"]},"data":{"type":"object","properties":{}},"content":{"type":"array","items":{"anyOf":[{"$ref":"#/definitions/Inline"},{"$ref":"#/definitions/Text"}]}}},"additionalProperties":false,"required":["content","data","nodeType"]},"Inline":{"type":"object","properties":{"nodeType":{"$ref":"#/definitions/INLINES"},"content":{"type":"array","items":{"anyOf":[{"$ref":"#/definitions/Inline"},{"$ref":"#/definitions/Text"}]}},"data":{"$ref":"#/definitions/NodeData"}},"additionalProperties":false,"required":["content","data","nodeType"]},"INLINES":{"description":"Map of all Contentful inline types. Inline contain inline or text nodes.","type":"string","enum":["asset-hyperlink","embedded-entry-inline","embedded-resource-inline","entry-hyperlink","hyperlink","resource-hyperlink"]},"Text":{"type":"object","properties":{"nodeType":{"type":"string","enum":["text"]},"value":{"type":"string"},"marks":{"type":"array","items":{"$ref":"#/definitions/Mark"}},"data":{"$ref":"#/definitions/NodeData"}},"additionalProperties":false,"required":["data","marks","nodeType","value"]},"Mark":{"type":"object","properties":{"type":{"type":"string"}},"additionalProperties":false,"required":["type"]},"NodeData":{"additionalProperties":true,"type":"object"}},"$schema":"http://json-schema.org/draft-07/schema#"}');

/***/ }),

/***/ "(ssr)/./node_modules/@contentful/rich-text-types/dist/schemas/generated/resource-hyperlink.json":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@contentful/rich-text-types/dist/schemas/generated/resource-hyperlink.json ***!
  \*************************************************************************************************/
/***/ ((module) => {

module.exports = /*#__PURE__*/JSON.parse('{"$ref":"#/definitions/ResourceHyperlink","definitions":{"ResourceHyperlink":{"type":"object","properties":{"nodeType":{"type":"string","enum":["resource-hyperlink"]},"data":{"type":"object","properties":{"target":{"$ref":"#/definitions/ResourceLink"}},"additionalProperties":false,"required":["target"]},"content":{"type":"array","items":{"$ref":"#/definitions/Text"}}},"additionalProperties":false,"required":["content","data","nodeType"]},"ResourceLink":{"type":"object","properties":{"sys":{"type":"object","properties":{"type":{"type":"string","enum":["ResourceLink"]},"linkType":{"type":"string","enum":["Contentful:Entry"]},"urn":{"type":"string"}},"additionalProperties":false,"required":["linkType","type","urn"]}},"additionalProperties":false,"required":["sys"]},"Text":{"type":"object","properties":{"nodeType":{"type":"string","enum":["text"]},"value":{"type":"string"},"marks":{"type":"array","items":{"$ref":"#/definitions/Mark"}},"data":{"$ref":"#/definitions/NodeData"}},"additionalProperties":false,"required":["data","marks","nodeType","value"]},"Mark":{"type":"object","properties":{"type":{"type":"string"}},"additionalProperties":false,"required":["type"]},"NodeData":{"additionalProperties":true,"type":"object"}},"$schema":"http://json-schema.org/draft-07/schema#"}');

/***/ }),

/***/ "(ssr)/./node_modules/@contentful/rich-text-types/dist/schemas/generated/table-cell.json":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@contentful/rich-text-types/dist/schemas/generated/table-cell.json ***!
  \*****************************************************************************************/
/***/ ((module) => {

module.exports = /*#__PURE__*/JSON.parse('{"$ref":"#/definitions/TableCell","definitions":{"TableCell":{"type":"object","properties":{"nodeType":{"enum":["table-cell","table-header-cell"],"type":"string"},"data":{"type":"object","properties":{"colspan":{"type":"number"},"rowspan":{"type":"number"}},"additionalProperties":false},"content":{"minItems":1,"type":"array","items":{"$ref":"#/definitions/Paragraph"}}},"additionalProperties":false,"required":["content","data","nodeType"]},"Paragraph":{"type":"object","properties":{"nodeType":{"type":"string","enum":["paragraph"]},"data":{"type":"object","properties":{}},"content":{"type":"array","items":{"anyOf":[{"$ref":"#/definitions/Inline"},{"$ref":"#/definitions/Text"}]}}},"additionalProperties":false,"required":["content","data","nodeType"]},"Inline":{"type":"object","properties":{"nodeType":{"$ref":"#/definitions/INLINES"},"content":{"type":"array","items":{"anyOf":[{"$ref":"#/definitions/Inline"},{"$ref":"#/definitions/Text"}]}},"data":{"$ref":"#/definitions/NodeData"}},"additionalProperties":false,"required":["content","data","nodeType"]},"INLINES":{"description":"Map of all Contentful inline types. Inline contain inline or text nodes.","type":"string","enum":["asset-hyperlink","embedded-entry-inline","embedded-resource-inline","entry-hyperlink","hyperlink","resource-hyperlink"]},"Text":{"type":"object","properties":{"nodeType":{"type":"string","enum":["text"]},"value":{"type":"string"},"marks":{"type":"array","items":{"$ref":"#/definitions/Mark"}},"data":{"$ref":"#/definitions/NodeData"}},"additionalProperties":false,"required":["data","marks","nodeType","value"]},"Mark":{"type":"object","properties":{"type":{"type":"string"}},"additionalProperties":false,"required":["type"]},"NodeData":{"additionalProperties":true,"type":"object"}},"$schema":"http://json-schema.org/draft-07/schema#"}');

/***/ }),

/***/ "(ssr)/./node_modules/@contentful/rich-text-types/dist/schemas/generated/table-header-cell.json":
/*!************************************************************************************************!*\
  !*** ./node_modules/@contentful/rich-text-types/dist/schemas/generated/table-header-cell.json ***!
  \************************************************************************************************/
/***/ ((module) => {

module.exports = /*#__PURE__*/JSON.parse('{"$ref":"#/definitions/TableHeaderCell","definitions":{"TableHeaderCell":{"type":"object","properties":{"nodeType":{"type":"string","enum":["table-header-cell"]},"data":{"type":"object","properties":{"colspan":{"type":"number"},"rowspan":{"type":"number"}},"additionalProperties":false},"content":{"minItems":1,"type":"array","items":{"$ref":"#/definitions/Paragraph"}}},"additionalProperties":false,"required":["content","data","nodeType"]},"Paragraph":{"type":"object","properties":{"nodeType":{"type":"string","enum":["paragraph"]},"data":{"type":"object","properties":{}},"content":{"type":"array","items":{"anyOf":[{"$ref":"#/definitions/Inline"},{"$ref":"#/definitions/Text"}]}}},"additionalProperties":false,"required":["content","data","nodeType"]},"Inline":{"type":"object","properties":{"nodeType":{"$ref":"#/definitions/INLINES"},"content":{"type":"array","items":{"anyOf":[{"$ref":"#/definitions/Inline"},{"$ref":"#/definitions/Text"}]}},"data":{"$ref":"#/definitions/NodeData"}},"additionalProperties":false,"required":["content","data","nodeType"]},"INLINES":{"description":"Map of all Contentful inline types. Inline contain inline or text nodes.","type":"string","enum":["asset-hyperlink","embedded-entry-inline","embedded-resource-inline","entry-hyperlink","hyperlink","resource-hyperlink"]},"Text":{"type":"object","properties":{"nodeType":{"type":"string","enum":["text"]},"value":{"type":"string"},"marks":{"type":"array","items":{"$ref":"#/definitions/Mark"}},"data":{"$ref":"#/definitions/NodeData"}},"additionalProperties":false,"required":["data","marks","nodeType","value"]},"Mark":{"type":"object","properties":{"type":{"type":"string"}},"additionalProperties":false,"required":["type"]},"NodeData":{"additionalProperties":true,"type":"object"}},"$schema":"http://json-schema.org/draft-07/schema#"}');

/***/ }),

/***/ "(ssr)/./node_modules/@contentful/rich-text-types/dist/schemas/generated/table-row.json":
/*!****************************************************************************************!*\
  !*** ./node_modules/@contentful/rich-text-types/dist/schemas/generated/table-row.json ***!
  \****************************************************************************************/
/***/ ((module) => {

module.exports = /*#__PURE__*/JSON.parse('{"$ref":"#/definitions/TableRow","definitions":{"TableRow":{"type":"object","properties":{"nodeType":{"type":"string","enum":["table-row"]},"data":{"type":"object","properties":{}},"content":{"minItems":1,"type":"array","items":{"$ref":"#/definitions/TableCell"}}},"additionalProperties":false,"required":["content","data","nodeType"]},"TableCell":{"type":"object","properties":{"nodeType":{"enum":["table-cell","table-header-cell"],"type":"string"},"data":{"type":"object","properties":{"colspan":{"type":"number"},"rowspan":{"type":"number"}},"additionalProperties":false},"content":{"minItems":1,"type":"array","items":{"$ref":"#/definitions/Paragraph"}}},"additionalProperties":false,"required":["content","data","nodeType"]},"Paragraph":{"type":"object","properties":{"nodeType":{"type":"string","enum":["paragraph"]},"data":{"type":"object","properties":{}},"content":{"type":"array","items":{"anyOf":[{"$ref":"#/definitions/Inline"},{"$ref":"#/definitions/Text"}]}}},"additionalProperties":false,"required":["content","data","nodeType"]},"Inline":{"type":"object","properties":{"nodeType":{"$ref":"#/definitions/INLINES"},"content":{"type":"array","items":{"anyOf":[{"$ref":"#/definitions/Inline"},{"$ref":"#/definitions/Text"}]}},"data":{"$ref":"#/definitions/NodeData"}},"additionalProperties":false,"required":["content","data","nodeType"]},"INLINES":{"description":"Map of all Contentful inline types. Inline contain inline or text nodes.","type":"string","enum":["asset-hyperlink","embedded-entry-inline","embedded-resource-inline","entry-hyperlink","hyperlink","resource-hyperlink"]},"Text":{"type":"object","properties":{"nodeType":{"type":"string","enum":["text"]},"value":{"type":"string"},"marks":{"type":"array","items":{"$ref":"#/definitions/Mark"}},"data":{"$ref":"#/definitions/NodeData"}},"additionalProperties":false,"required":["data","marks","nodeType","value"]},"Mark":{"type":"object","properties":{"type":{"type":"string"}},"additionalProperties":false,"required":["type"]},"NodeData":{"additionalProperties":true,"type":"object"}},"$schema":"http://json-schema.org/draft-07/schema#"}');

/***/ }),

/***/ "(ssr)/./node_modules/@contentful/rich-text-types/dist/schemas/generated/table.json":
/*!************************************************************************************!*\
  !*** ./node_modules/@contentful/rich-text-types/dist/schemas/generated/table.json ***!
  \************************************************************************************/
/***/ ((module) => {

module.exports = /*#__PURE__*/JSON.parse('{"$ref":"#/definitions/Table","definitions":{"Table":{"type":"object","properties":{"nodeType":{"type":"string","enum":["table"]},"data":{"type":"object","properties":{}},"content":{"minItems":1,"type":"array","items":{"$ref":"#/definitions/TableRow"}}},"additionalProperties":false,"required":["content","data","nodeType"]},"TableRow":{"type":"object","properties":{"nodeType":{"type":"string","enum":["table-row"]},"data":{"type":"object","properties":{}},"content":{"minItems":1,"type":"array","items":{"$ref":"#/definitions/TableCell"}}},"additionalProperties":false,"required":["content","data","nodeType"]},"TableCell":{"type":"object","properties":{"nodeType":{"enum":["table-cell","table-header-cell"],"type":"string"},"data":{"type":"object","properties":{"colspan":{"type":"number"},"rowspan":{"type":"number"}},"additionalProperties":false},"content":{"minItems":1,"type":"array","items":{"$ref":"#/definitions/Paragraph"}}},"additionalProperties":false,"required":["content","data","nodeType"]},"Paragraph":{"type":"object","properties":{"nodeType":{"type":"string","enum":["paragraph"]},"data":{"type":"object","properties":{}},"content":{"type":"array","items":{"anyOf":[{"$ref":"#/definitions/Inline"},{"$ref":"#/definitions/Text"}]}}},"additionalProperties":false,"required":["content","data","nodeType"]},"Inline":{"type":"object","properties":{"nodeType":{"$ref":"#/definitions/INLINES"},"content":{"type":"array","items":{"anyOf":[{"$ref":"#/definitions/Inline"},{"$ref":"#/definitions/Text"}]}},"data":{"$ref":"#/definitions/NodeData"}},"additionalProperties":false,"required":["content","data","nodeType"]},"INLINES":{"description":"Map of all Contentful inline types. Inline contain inline or text nodes.","type":"string","enum":["asset-hyperlink","embedded-entry-inline","embedded-resource-inline","entry-hyperlink","hyperlink","resource-hyperlink"]},"Text":{"type":"object","properties":{"nodeType":{"type":"string","enum":["text"]},"value":{"type":"string"},"marks":{"type":"array","items":{"$ref":"#/definitions/Mark"}},"data":{"$ref":"#/definitions/NodeData"}},"additionalProperties":false,"required":["data","marks","nodeType","value"]},"Mark":{"type":"object","properties":{"type":{"type":"string"}},"additionalProperties":false,"required":["type"]},"NodeData":{"additionalProperties":true,"type":"object"}},"$schema":"http://json-schema.org/draft-07/schema#"}');

/***/ }),

/***/ "(ssr)/./node_modules/@contentful/rich-text-types/dist/schemas/generated/text.json":
/*!***********************************************************************************!*\
  !*** ./node_modules/@contentful/rich-text-types/dist/schemas/generated/text.json ***!
  \***********************************************************************************/
/***/ ((module) => {

module.exports = /*#__PURE__*/JSON.parse('{"$ref":"#/definitions/Text","definitions":{"Text":{"type":"object","properties":{"nodeType":{"type":"string","enum":["text"]},"value":{"type":"string"},"marks":{"type":"array","items":{"$ref":"#/definitions/Mark"}},"data":{"$ref":"#/definitions/NodeData"}},"additionalProperties":false,"required":["data","marks","nodeType","value"]},"Mark":{"type":"object","properties":{"type":{"type":"string"}},"additionalProperties":false,"required":["type"]},"NodeData":{"additionalProperties":true,"type":"object"}},"$schema":"http://json-schema.org/draft-07/schema#"}');

/***/ }),

/***/ "(ssr)/./node_modules/@contentful/rich-text-types/dist/schemas/generated/unordered-list.json":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@contentful/rich-text-types/dist/schemas/generated/unordered-list.json ***!
  \*********************************************************************************************/
/***/ ((module) => {

module.exports = /*#__PURE__*/JSON.parse('{"$ref":"#/definitions/UnorderedList","definitions":{"UnorderedList":{"type":"object","properties":{"nodeType":{"type":"string","enum":["unordered-list"]},"data":{"type":"object","properties":{}},"content":{"type":"array","items":{"$ref":"#/definitions/ListItem"}}},"additionalProperties":false,"required":["content","data","nodeType"]},"ListItem":{"type":"object","properties":{"nodeType":{"type":"string","enum":["list-item"]},"data":{"type":"object","properties":{}},"content":{"type":"array","items":{"$ref":"#/definitions/ListItemBlock"}}},"additionalProperties":false,"required":["content","data","nodeType"]},"ListItemBlock":{"type":"object","properties":{"nodeType":{"$ref":"#/definitions/ListItemBlockEnum"},"content":{"type":"array","items":{"anyOf":[{"$ref":"#/definitions/Block"},{"$ref":"#/definitions/Inline"},{"$ref":"#/definitions/Text"}]}},"data":{"$ref":"#/definitions/NodeData"}},"additionalProperties":false,"required":["content","data","nodeType"]},"ListItemBlockEnum":{"enum":["blockquote","embedded-asset-block","embedded-entry-block","embedded-resource-block","heading-1","heading-2","heading-3","heading-4","heading-5","heading-6","hr","ordered-list","paragraph","unordered-list"],"type":"string"},"Block":{"type":"object","properties":{"nodeType":{"$ref":"#/definitions/BLOCKS"},"content":{"type":"array","items":{"anyOf":[{"$ref":"#/definitions/Block"},{"$ref":"#/definitions/Inline"},{"$ref":"#/definitions/Text"}]}},"data":{"$ref":"#/definitions/NodeData"}},"additionalProperties":false,"required":["content","data","nodeType"]},"BLOCKS":{"description":"Map of all Contentful block types. Blocks contain inline or block nodes.","type":"string","enum":["document","paragraph","heading-1","heading-2","heading-3","heading-4","heading-5","heading-6","ordered-list","unordered-list","list-item","hr","blockquote","embedded-entry-block","embedded-asset-block","embedded-resource-block","table","table-row","table-cell","table-header-cell"]},"Inline":{"type":"object","properties":{"nodeType":{"$ref":"#/definitions/INLINES"},"content":{"type":"array","items":{"anyOf":[{"$ref":"#/definitions/Inline"},{"$ref":"#/definitions/Text"}]}},"data":{"$ref":"#/definitions/NodeData"}},"additionalProperties":false,"required":["content","data","nodeType"]},"INLINES":{"description":"Map of all Contentful inline types. Inline contain inline or text nodes.","type":"string","enum":["asset-hyperlink","embedded-entry-inline","embedded-resource-inline","entry-hyperlink","hyperlink","resource-hyperlink"]},"Text":{"type":"object","properties":{"nodeType":{"type":"string","enum":["text"]},"value":{"type":"string"},"marks":{"type":"array","items":{"$ref":"#/definitions/Mark"}},"data":{"$ref":"#/definitions/NodeData"}},"additionalProperties":false,"required":["data","marks","nodeType","value"]},"Mark":{"type":"object","properties":{"type":{"type":"string"}},"additionalProperties":false,"required":["type"]},"NodeData":{"additionalProperties":true,"type":"object"}},"$schema":"http://json-schema.org/draft-07/schema#"}');

/***/ })

};
;